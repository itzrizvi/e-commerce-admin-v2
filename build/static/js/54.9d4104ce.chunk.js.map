{"version":3,"sources":["container/admin/AllAdmins.js"],"names":["AllAdmin","viewPermission","token","useSelector","state","auth","useState","searchText","setSearchText","filteredUser","setFilteredUser","data","isLoading","error","staffs","setStaffs","useEffect","apolloClient","query","authQuery","GET_ALL_STAFF","context","headers","TENANTID","process","Authorization","then","res","getAllStaff","isAuth","s","dispatch","logOut","catch","err","finally","columns","title","dataIndex","key","width","ellipsis","sorter","a","b","id","render","text","record","effect","src","renderImage","image","onError","errorImageSrc","alt","email","first_name","last_name","roles","length","map","role","join","align","email_verified","toString","toUpperCase","filters","value","onFilter","status","user_status","defaultChecked","onChange","checked","variables","sendEmail","mutate","mutation","authMutation","ADMIN_UPDATE","Cookies","get","adminUpdate","toast","message","success","console","log","handleStatusChange","to","name","style","color","buttons","className","size","type","icon","gutter","sm","xs","headless","placeholder","prefix","e","target","filter","user","toLowerCase","includes","rowKey","dataSource","rowClassName","index","pagination","defaultPageSize","config","USERS_PER_PAGE","total","showTotal","range"],"mappings":"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","file":"static/js/54.9d4104ce.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Table, Input, Spin, Switch, Typography } from 'antd';\nimport FeatherIcon from 'feather-icons-react';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Button } from '../../components/buttons/buttons';\nimport apolloClient, { authMutation, authQuery } from '../../utility/apollo';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport Cookies from 'js-cookie';\nimport { toast } from 'react-toastify';\nimport config from '../../config/config';\nimport { logOut } from '../../redux/authentication/actionCreator';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { errorImageSrc, renderImage } from '../../utility/images';\nimport { viewPermission } from '../../utility/utility';\n\nconst handleStatusChange = (record, checked) => {\n  const variables = { data: { id: record.id, user_status: checked, sendEmail: false } };\n\n  apolloClient\n    .mutate({\n      mutation: authMutation.ADMIN_UPDATE,\n      variables,\n      context: {\n        headers: {\n          TENANTID: process.env.REACT_APP_TENANTID,\n          Authorization: Cookies.get('psp_t'),\n        },\n      },\n    })\n    .then(res => {\n      const status = res?.data?.adminUpdate?.status;\n      if (!status) return toast.error(res?.data?.adminUpdate.message);\n      toast.success(`${record.email} user Status updated successfully.`);\n    })\n    .catch(err => {\n      console.log('ðŸš€ ~ file: AllAdmins.js ~ line 33 ~ handleStatusChange ~ err', err);\n      toast.error(`Something went wrong!!`);\n    });\n};\n\nconst AllAdmin = () => {\n  viewPermission('user');\n  const token = useSelector(state => state.auth.token);\n  const [searchText, setSearchText] = useState('');\n  const [filteredUser, setFilteredUser] = useState([]);\n  const [staffs, setStaffs] = useState({\n    data: [],\n    isLoading: true,\n    error: '',\n  });\n\n  // Load admin list\n  useEffect(() => {\n    apolloClient\n      .query({\n        query: authQuery.GET_ALL_STAFF,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: token,\n          },\n        },\n      })\n      .then(res => {\n        if (!res?.data?.getAllStaff?.isAuth) {\n          dispatch(logOut());\n        } else {\n          setStaffs(s => ({ ...s, data: res?.data?.getAllStaff?.data, error: '' }));\n        }\n      })\n      .catch(err => {\n        setStaffs(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setStaffs(s => ({ ...s, isLoading: false }));\n      });\n  }, []);\n\n  const columns = [\n    {\n      title: 'ID',\n      dataIndex: 'id',\n      key: 'id',\n      width: 100,\n      ellipsis: true,\n      sorter: (a, b) => (a.id > b.id ? 1 : -1),\n    },\n    {\n      title: 'Image',\n      dataIndex: 'id',\n      key: 'id',\n      width: 70,\n      render: (text, record) => (\n        <LazyLoadImage\n          effect=\"blur\"\n          width=\"40\"\n          src={renderImage(record.id, record.image, 'user', '128x128')}\n          onError={errorImageSrc}\n          alt={record.id}\n        />\n      ),\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      width: 200,\n      ellipsis: true,\n      sorter: (a, b) => (a.email > b.email ? 1 : -1),\n    },\n    {\n      title: 'First Name',\n      dataIndex: 'first_name',\n      key: 'first_name',\n      ellipsis: true,\n      sorter: (a, b) => (a.first_name > b.first_name ? 1 : -1),\n    },\n    {\n      title: 'Last Name',\n      dataIndex: 'last_name',\n      key: 'last_name',\n      ellipsis: true,\n      sorter: (a, b) => (a.last_name > b.last_name ? 1 : -1),\n    },\n    {\n      title: 'Roles',\n      dataIndex: 'roles',\n      key: 'roles',\n      // width: 150,\n      ellipsis: true,\n      sorter: (a, b) => (a.roles.length > b.roles.length ? -1 : 1),\n      render: roles => {\n        const data = roles.map(role => role.role).join(', ');\n        return <p>{data}</p>;\n      },\n    },\n    {\n      title: 'Verified',\n      dataIndex: 'email_verified',\n      key: 'email_verified',\n      width: 100,\n      align: 'center',\n      render: email_verified => email_verified.toString().toUpperCase(),\n      sorter: (a, b) => (a.email_verified === b.email_verified ? 0 : a.email_verified ? -1 : 1),\n      filters: [\n        {\n          text: 'Verified',\n          value: true,\n        },\n        {\n          text: 'Not Verified',\n          value: false,\n        },\n      ],\n      onFilter: (value, record) => record.email_verified === value,\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      width: 100,\n      align: 'center',\n      sorter: (a, b) => (a.status === b.status ? 0 : a.status ? -1 : 1),\n      filters: [\n        {\n          text: 'Active',\n          value: true,\n        },\n        {\n          text: 'Inactive',\n          value: false,\n        },\n      ],\n      onFilter: (value, record) => record.user_status === value,\n      render: (text, record) => (\n        <Switch\n          defaultChecked={record.user_status}\n          title=\"Status\"\n          onChange={checked => handleStatusChange(record, checked)}\n        />\n      ),\n    },\n    {\n      title: 'Action',\n      dataIndex: 'action',\n      width: 90,\n      align: 'center',\n      render: (text, record) => (\n        <>\n          <Link to={`/admin/admin/add-admin?id=${record.id}`}>\n            <FontAwesome name=\"edit\" style={{ color: '#5F63F2' }} />\n          </Link>\n        </>\n      ),\n      key: 'last_name',\n    },\n  ];\n\n  const onChangeSearch = e => {\n    const value = e.target.value;\n    setSearchText(value);\n    setFilteredUser(\n      staffs.data.filter(user =>\n        (user?.email + user?.first_name + user?.last_name + user?.roles?.role)\n          .toLowerCase()\n          .includes(value.toLowerCase()),\n      ),\n    );\n  };\n\n  return (\n    <>\n      <PageHeader\n        title=\"Users\"\n        buttons={[\n          <div key=\"1\" className=\"page-header-actions\">\n            <Link to=\"/admin/admin/add-admin\">\n              <Button size=\"small\" title=\"Add user\" type=\"primary\">\n                <FeatherIcon icon=\"user-plus\" />\n              </Button>\n            </Link>\n          </div>,\n        ]}\n      />\n      <Main>\n        <Row gutter={25}>\n          <Col sm={24} xs={24}>\n            <Cards headless>\n              {staffs.isLoading ? (\n                <div className=\"spin\">\n                  <Spin />\n                </div>\n              ) : staffs.error ? (\n                <p>{staffs.error}</p>\n              ) : (\n                <>\n                  <Input placeholder=\"Search user\" prefix={<SearchOutlined />} onChange={onChangeSearch} />\n                  <br />\n                  <br />\n\n                  <span className={'psp_list'}>\n                    <Table\n                      className=\"table-responsive\"\n                      columns={columns}\n                      rowKey={'id'}\n                      size=\"small\"\n                      dataSource={searchText ? filteredUser : staffs.data}\n                      rowClassName={(record, index) => (index % 2 === 0 ? '' : 'altTableClass')}\n                      pagination={{\n                        defaultPageSize: config.USERS_PER_PAGE,\n                        total: searchText ? filteredUser.length : staffs.data.length,\n                        showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n                      }}\n                    />\n                  </span>\n                </>\n              )}\n            </Cards>\n          </Col>\n        </Row>\n      </Main>\n    </>\n  );\n};\n\nexport default AllAdmin;\n"],"sourceRoot":""}