{"version":3,"sources":["container/email/EditTemplate.js","apollo/email/index.js"],"names":["AddTemplate","viewPermission","params","useParams","history","useHistory","token","useSelector","state","auth","useState","isLoading","setIsLoading","emailTemplate","setEmailTemplate","data","loading","error","singleTemplate","setSingleTemplate","useForm","form","useEffect","apolloClient","query","EmailTemplateQuery","SINGLE_EMAIL_TEMPLATE_LIST","variables","id","parseInt","context","headers","TENANTID","process","Authorization","fetchPolicy","then","res","getSingleEmailTemplateList","status","setFieldsValue","name","email_template_id","catch","err","console","log","GET_EMAIL_TEMPLATE_CONTENT_LIST","getEmailTemplateList","title","gutter","sm","xs","headless","style","textAlign","tip","width","onFinish","values","mutate","mutation","UPDATE_EMAIL_TEMPLATE_LIST","refetchQueries","GET_EMAIL_TEMPLATE_LIST","updateEmailTemplateOnList","toast","setTimeout","push","success","message","finally","onFinishFailed","errorInfo","labelCol","span","Item","rules","required","max","label","placeholder","optionLabelProp","map","item","Option","value","className","display","justifyContent","size","htmlType","type","raised","to","marginLeft","GET_EMAIL_HEADER_FOOTER_LIST","gql","ADD_EMAIL_TEMPLATE_HEADER_FOOTER","SINGLE_EMAIL_TEMPLATE_HEADER_FOOTER","EMAIL_TEMPLATE_HEADER_FOOTER_UPDATE","ADD_EMAIL_TEMPLATE_LIST","CREATE_EMAIL_TEMPLATE","GET_SINGLE_EMAIL_CONTENT_TEMPLATE","UPDATE_EMAIL_TEMPLATE_CONTENT","GET_EMAIL_TEMPLATE_PREVIEW"],"mappings":"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","file":"static/js/35.87d55ac6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Row, Col, Form, Input, Spin, Select } from 'antd';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Button } from '../../components/buttons/buttons';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport apolloClient from '../../apollo';\nimport { viewPermission } from '../../utility/utility';\nimport { EmailTemplateQuery } from '../../apollo/email';\nimport { useEffect } from 'react';\n\nconst AddTemplate = () => {\n  viewPermission('email-template');\n  const params = useParams();\n  const history = useHistory();\n  const token = useSelector(state => state.auth.token);\n  const [isLoading, setIsLoading] = useState(false);\n  const [emailTemplate, setEmailTemplate] = useState([]);\n  const [singleTemplate, setSingleTemplate] = useState({ data: {}, loading: true, error: '' });\n  const [form] = Form.useForm();\n\n  //Submit Form\n  const handleSubmit = values => {\n    setIsLoading(true);\n    apolloClient\n      .mutate({\n        mutation: EmailTemplateQuery.UPDATE_EMAIL_TEMPLATE_LIST,\n        variables: { data: { ...values, id: parseInt(params?.id) } },\n        refetchQueries: [\n          {\n            query: EmailTemplateQuery.GET_EMAIL_TEMPLATE_LIST,\n            context: {\n              headers: {\n                TENANTID: process.env.REACT_APP_TENANTID,\n                Authorization: token,\n              },\n            },\n            fetchPolicy: 'network-only',\n          },\n          ['getAllEmailTemplateList'],\n        ],\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: token,\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.updateEmailTemplateOnList;\n        if (!data?.status) return toast.error('Something Went wrong !!');\n        setTimeout(() => {\n          history.push('/admin/email/template/list');\n        }, 1000);\n        toast.success(data?.message);\n      })\n      .catch(err => {\n        toast.error('Something Went wrong !!');\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    apolloClient\n      .query({\n        query: EmailTemplateQuery.SINGLE_EMAIL_TEMPLATE_LIST,\n        variables: {\n          query: {\n            id: parseInt(params?.id),\n          },\n        },\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: token,\n          },\n        },\n        fetchPolicy: 'network-only',\n      })\n      .then(res => {\n        const data = res?.data?.getSingleEmailTemplateList;\n        if (!data.status) return;\n        setSingleTemplate({ data: data?.data, loading: false, error: '' });\n        form.setFieldsValue({\n          name: data?.data?.name,\n          email_template_id:  data?.data?.email_template_id\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        setSingleTemplate({ data: {}, loading: false, error: 'Something went worng' });\n      });\n  }, []);\n  useEffect(() => {\n    apolloClient\n      .query({\n        query: EmailTemplateQuery.GET_EMAIL_TEMPLATE_CONTENT_LIST,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: token,\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getEmailTemplateList;\n        setEmailTemplate(data?.data);\n      })\n      .catch(err => {\n        setEmailTemplate([]);\n        console.log('ðŸš€ ~ file: AddTemplate.js:83 ~ useEffect ~ err', err);\n      });\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        title={`Manage Email Template | Edit Email Template ${\n          singleTemplate?.data?.name ? `(${singleTemplate?.data?.name})` : ''\n        }`}\n      />\n\n      <Main>\n        <Row gutter={25}>\n          <Col sm={24} xs={24}>\n            <Cards headless>\n              {singleTemplate.loading ? (\n                <div style={{ textAlign: 'center' }}>\n                  <Spin tip=\"processing...\" />\n                </div>\n              ) : (\n                <Form\n                  style={{ width: '100%' }}\n                  form={form}\n                  name=\"EditEmailTemplate\"\n                  onFinish={handleSubmit}\n                  onFinishFailed={errorInfo => console.log('form error info:\\n', errorInfo)}\n                  labelCol={{ span: 4 }}\n                >\n                  <Form.Item\n                    rules={[{ required: true, max: 100, message: 'Please Enter Template Name' }]}\n                    name=\"name\"\n                    label=\"Name\"\n                  >\n                    <Input placeholder=\"Enter Template Name\" />\n                  </Form.Item>\n                  <Form.Item name=\"email_template_id\" label=\"Email Content\">\n                    <Select\n                      style={{ width: '100%' }}\n                      placeholder=\"Select Email Template Content\"\n                      optionLabelProp=\"label\"\n                    >\n                      {emailTemplate?.map(item => (\n                        <Select.Option value={item.id} label={item.name}>\n                          <div className=\"demo-option-label-item\">{item.name}</div>\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                  <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                    <Form.Item>\n                      <Button loading={isLoading} size=\"default\" htmlType=\"submit\" type=\"primary\" raised>\n                        {isLoading ? 'Processing' : 'Save'}\n                      </Button>\n                      <Link to=\"/admin/email/template/list\">\n                        <Button style={{ marginLeft: 10 }} type=\"light\" size=\"default\">\n                          Cancel\n                        </Button>\n                      </Link>\n                    </Form.Item>\n                  </div>\n                </Form>\n              )}\n            </Cards>\n          </Col>\n        </Row>\n      </Main>\n    </>\n  );\n};\n\nexport default AddTemplate;\n","import { gql } from '@apollo/client';\n\nexport const EmailTemplateQuery = {\n  GET_EMAIL_HEADER_FOOTER_LIST: gql`\n    query getEmailTempHeaderFooterList {\n      getEmailTempHeaderFooterList {\n        message\n        status\n        data {\n          id\n          name\n          slug\n          content\n          type\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  `,\n  ADD_EMAIL_TEMPLATE_HEADER_FOOTER: gql`\n    mutation addEmailTempHeaderFooter($data: AddEmailTempHFInput) {\n      addEmailTempHeaderFooter(data: $data) {\n        message\n        status\n      }\n    }\n  `,\n  SINGLE_EMAIL_TEMPLATE_HEADER_FOOTER: gql`\n    query getSingleEmailTempHeaderFooter($query: GetSingleEmailHeaderFooterInput) {\n      getSingleEmailTempHeaderFooter(query: $query) {\n        message\n        status\n        data {\n          id\n          name\n          slug\n          content\n          layout_type\n          type\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  `,\n  EMAIL_TEMPLATE_HEADER_FOOTER_UPDATE: gql`\n    mutation updateEmailTempHeaderFooter($data: UpdateEmailTempHFInput) {\n      updateEmailTempHeaderFooter(data: $data) {\n        message\n        status\n      }\n    }\n  `,\n  GET_EMAIL_TEMPLATE_LIST: gql`\n    query getAllEmailTemplateList {\n      getAllEmailTemplateList {\n        message\n        status\n        data {\n          id\n          email_template_id\n          name\n          slug\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  `,\n  ADD_EMAIL_TEMPLATE_LIST: gql`\n    mutation addEmailTemplateOnList($data: AddEmailTemplateListInput) {\n      addEmailTemplateOnList(data: $data) {\n        message\n        status\n      }\n    }\n  `,\n  SINGLE_EMAIL_TEMPLATE_LIST: gql`\n    query getSingleEmailTemplateList($query: GetSingleEmailTemplateListInput) {\n      getSingleEmailTemplateList(query: $query) {\n        message\n        status\n        data {\n          id\n          email_template_id\n          name\n          slug\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  `,\n  UPDATE_EMAIL_TEMPLATE_LIST: gql`\n    mutation updateEmailTemplateOnList($data: UpdateEmailTemplateListInput) {\n      updateEmailTemplateOnList(data: $data) {\n        message\n        status\n      }\n    }\n  `,\n  CREATE_EMAIL_TEMPLATE: gql`\n    mutation createEmailTemplate($data: addEmailTemplateInput) {\n      createEmailTemplate(data: $data) {\n        message\n        status\n      }\n    }\n  `,\n  GET_EMAIL_TEMPLATE_CONTENT_LIST: gql`\n    query getEmailTemplateList {\n      getEmailTemplateList {\n        message\n        status\n        data {\n          id\n          name\n          slug\n          createdAt\n          updatedAt\n          emailHeader {\n            id\n            name\n            slug\n          }\n          emailFooter {\n            id\n            name\n            slug\n          }\n        }\n      }\n    }\n  `,\n  GET_SINGLE_EMAIL_CONTENT_TEMPLATE: gql`\n    query getSingleEmailTemplate($query: GetSingleEmailTemplateInput) {\n      getSingleEmailTemplate(query: $query) {\n        message\n        status\n        data {\n          id\n          name\n          slug\n          content\n          layout_type\n          createdAt\n          updatedAt\n          emailHeader {\n            id\n            name\n            slug\n            content\n            type\n            createdAt\n            updatedAt\n          }\n          emailFooter {\n            id\n            name\n            slug\n            content\n            type\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    }\n  `,\n  UPDATE_EMAIL_TEMPLATE_CONTENT: gql`\n    mutation updateEmailTemplate($data: updateEmailTemplateInput) {\n      updateEmailTemplate(data: $data) {\n        message\n        status\n      }\n    }\n  `,\n  GET_EMAIL_TEMPLATE_PREVIEW: gql`\n    query getEmailTemplatePreview($query: GetEmailTemplatePreviewInput) {\n      getEmailTemplatePreview(query: $query) {\n        message\n        status\n        tenant_id\n        data\n      }\n    }\n  `,\n};\n"],"sourceRoot":""}