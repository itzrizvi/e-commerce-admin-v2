{"version":3,"sources":["container/banner/UpdateBanner.js","apollo/banner/index.js","../node_modules/antd/es/popconfirm/style/index.js","../node_modules/antd/es/popconfirm/PurePanel.js","../node_modules/antd/es/popconfirm/index.js"],"names":["Quill","register","ImageResize","htmlEditButton","modules","toolbar","font","header","color","background","script","list","indent","align","imageResize","parchment","import","okText","msg","UpdateBanner","viewPermission","params","useParams","TextArea","history","useHistory","token","useSelector","state","auth","useState","isLoading","setIsLoading","content","setContent","htmlContent","setHTMLContent","customHtmlSwitch","setCustomHtmlSwitch","statusSwitch","setStatusSwitch","data","loading","error","singleBanner","setSingleBanner","useForm","form","useEffect","parseInt","id","apolloClient","query","bannerQuery","GET_SINGLE_BANNER","variables","banner_id","context","headers","TENANTID","process","Authorization","fetchPolicy","then","res","getSingleBanner","status","setFieldsValue","name","layout_type","catch","err","console","log","title","gutter","sm","xs","headless","style","textAlign","tip","width","onFinish","values","customVer","mutate","mutation","BANNER_UPDATE","refetchQueries","GET_ALL_BANNER","updateBanner","toast","setTimeout","push","success","message","finally","onFinishFailed","errorInfo","labelCol","span","Item","rules","required","max","label","placeholder","checked","onChange","e","theme","value","height","defaultValue","target","display","justifyContent","marginTop","placement","cancelText","onConfirm","marginRight","type","size","htmlType","raised","BANNER_ADD","gql","Overlay","props","prefixCls","okButtonProps","cancelButtonProps","okType","icon","_props$showCancel","showCancel","close","onCancel","getPrefixCls","React","ConfigContext","LocaleReceiver","componentName","defaultLocale","Popconfirm","contextLocale","className","concat","getRenderPropValue","Button","_extends","onClick","ActionButton","buttonProps","convertLegacyProps","actionFn","quitOnNullishReturnValue","emitEvent","__rest","s","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","ref","_useMergedState","useMergedState","undefined","open","visible","defaultOpen","defaultVisible","_useMergedState2","_slicedToArray","setOpen","settingOpen","_a","_b","onVisibleChange","onOpenChange","customizePrefixCls","_props$placement","_props$trigger","trigger","_props$okType","_props$icon","ExclamationCircleFilled","children","overlayClassName","restProps","prefixClsConfirm","overlayClassNames","classNames","Popover","_props$disabled","disabled","_overlay","cloneElement","onKeyDown","keyCode","KeyCode","ESC","_onKeyDown"],"mappings":"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","file":"static/js/15.1a634f70.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Input, Spin, Switch, Popconfirm } from 'antd';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Button } from '../../components/buttons/buttons';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport apolloClient from '../../apollo';\nimport { viewPermission } from '../../utility/utility';\nimport ReactQuill, { Quill } from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport ImageResize from 'quill-image-resize-module-react';\nimport htmlEditButton from 'quill-html-edit-button';\nimport { bannerQuery } from '../../apollo/banner';\nQuill.register('modules/imageResize', ImageResize);\nQuill.register('modules/htmlEditButton', htmlEditButton);\n\nconst modules = {\n  toolbar: [\n    [{ font: [] }],\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n    ['bold', 'italic', 'underline', 'strike'],\n    [{ color: [] }, { background: [] }],\n    [{ script: 'sub' }, { script: 'super' }],\n    ['blockquote', 'code-block'],\n    [{ list: 'ordered' }, { list: 'bullet' }],\n    [{ indent: '-1' }, { indent: '+1' }, { align: [] }],\n    ['link', 'image', 'video'],\n    ['clean'],\n  ],\n  imageResize: {\n    parchment: Quill.import('parchment'),\n    modules: ['Resize', 'DisplaySize'],\n  },\n  htmlEditButton: {\n    okText: 'Save',\n    msg: 'Edit HTML here, when you click \"Save\" the quill editor\\'s contents will be replaced',\n  },\n};\n\nconst UpdateBanner = () => {\n  viewPermission('banner');\n  const params = useParams();\n  const { TextArea } = Input;\n  const history = useHistory();\n  const token = useSelector(state => state.auth.token);\n  const [isLoading, setIsLoading] = useState(false);\n  const [content, setContent] = useState('');\n  const [htmlContent, setHTMLContent] = useState('');\n  const [customHtmlSwitch, setCustomHtmlSwitch] = useState(false);\n  const [statusSwitch, setStatusSwitch] = useState(true);\n  const [singleBanner, setSingleBanner] = useState({ data: {}, loading: true, error: '' });\n  const [form] = Form.useForm();\n\n\n  //Submit Form\n  const handleSubmit = values => {\n    setIsLoading(true);\n    let customVer;\n    if (customHtmlSwitch) customVer = { layout_type: 'custom', content: htmlContent };\n    else customVer = { layout_type: 'dynamic', content };\n    apolloClient\n      .mutate({\n        mutation: bannerQuery.BANNER_UPDATE,\n        variables: { data: { ...values, ...customVer, status: statusSwitch, banner_id: parseInt(params?.id) } },\n        refetchQueries: [\n          {\n            query: bannerQuery.GET_ALL_BANNER,\n            context: {\n              headers: {\n                TENANTID: process.env.REACT_APP_TENANTID,\n                Authorization: token,\n              },\n            },\n            fetchPolicy: 'network-only',\n          },\n          ['getAllBanners'],\n        ],\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: token,\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.updateBanner;\n        if (!data?.status) return toast.error('Something Went wrong !!');\n        setTimeout(() => {\n          history.push('/admin/banner/list');\n        }, 2000);\n        toast.success(data?.message);\n      })\n      .catch(err => {\n        toast.error('Something Went wrong !!');\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    if (!parseInt(params?.id)) return;\n    apolloClient\n      .query({\n        query: bannerQuery.GET_SINGLE_BANNER,\n        variables: {\n          banner_id: parseInt(params?.id),\n        },\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: token,\n          },\n        },\n        fetchPolicy: 'network-only',\n      })\n      .then(res => {\n        const data = res?.data?.getSingleBanner;\n        if (!data.status) return;\n        setSingleBanner({ data: data?.data, loading: false, error: '' });\n        form.setFieldsValue({\n          name: data?.data?.name\n        });\n        setHTMLContent(data?.data?.content);\n        setContent(data?.data?.content);\n        setStatusSwitch(data?.data?.status);\n        setCustomHtmlSwitch(data?.data?.layout_type === \"custom\");\n      })\n      .catch(err => {\n        console.log(err);\n        setSingleBanner({ data: {}, loading: false, error: 'Something went worng' });\n      });\n  }, [params?.id]);\n\n  return (\n    <>\n      <PageHeader\n        title={`Manage Banner | Edit Banner ${singleBanner?.data?.name ? `(${singleBanner?.data?.name})` : ''\n          }`}\n      />\n      <Main>\n        <Row gutter={25}>\n          <Col sm={24} xs={24}>\n            <Cards headless>\n              {singleBanner.loading ? (\n                <div style={{ textAlign: 'center' }}>\n                  <Spin tip=\"processing...\" />\n                </div>\n              ) : (\n                <Form\n                  style={{ width: '100%' }}\n                  form={form}\n                  name=\"EditBanner\"\n                  onFinish={handleSubmit}\n                  onFinishFailed={errorInfo => console.log('form error info:\\n', errorInfo)}\n                  labelCol={{ span: 4 }}\n                >\n                  <Form.Item\n                    rules={[{ required: true, max: 100, message: 'Please enter banner name' }]}\n                    name=\"name\"\n                    label=\"Name\"\n                  >\n                    <Input style={{ width: \"50%\" }} placeholder=\"Enter banner name\" />\n                  </Form.Item>\n                  <Form.Item label=\"Status\">\n                    <Switch checked={statusSwitch} onChange={e => setStatusSwitch(e)} />\n                  </Form.Item>\n                  <Form.Item label=\"Custom HTML\">\n                    <Switch checked={customHtmlSwitch} onChange={e => setCustomHtmlSwitch(e)} />\n                  </Form.Item>\n                  {!customHtmlSwitch && (\n                    <Form.Item label=\"Content\">\n                      <ReactQuill\n                        theme=\"snow\"\n                        value={content}\n                        modules={modules}\n                        placeholder=\"Content goes here...\"\n                        onChange={setContent}\n                      />\n                    </Form.Item>\n                  )}\n\n                  {customHtmlSwitch && (\n                    <Form.Item label=\"Custom HTML\">\n                      <TextArea\n                        style={{\n                          height: 200,\n                        }}\n                        defaultValue={htmlContent}\n                        onChange={e => setHTMLContent(e.target.value)}\n                        placeholder=\"Paste your HTML Code Here...\"\n                      />\n                    </Form.Item>\n                  )}\n\n                  <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 10 }}>\n\n                    <Popconfirm\n                      title=\"Cancel Task\"\n                      placement=\"topRight\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => history.push(\"/admin/banner/list\")}\n                    >\n                      <Button style={{ marginRight: 10 }} type=\"light\" size=\"default\">\n                        Cancel\n                      </Button>\n                    </Popconfirm>\n                    <Button loading={isLoading} size=\"default\" htmlType=\"submit\" type=\"primary\" raised>\n                      {isLoading ? 'Processing' : 'Update Banner'}\n                    </Button>\n                  </div>\n                </Form>)}\n            </Cards>\n          </Col>\n        </Row>\n      </Main>\n    </>\n  );\n};\n\nexport default UpdateBanner;\n","import { gql } from '@apollo/client';\n\nexport const bannerQuery = {\n  BANNER_ADD: gql`\n    mutation addBanner($data: BannerInput) {\n      addBanner(data: $data) {\n        message\n        status\n        id\n      }\n    }\n  `,\n  GET_ALL_BANNER: gql`\n    query getAllBanners {\n      getAllBanners {\n        message\n        status\n        data {\n          id\n          name\n          slug\n          content\n          status\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  `,\n  GET_SINGLE_BANNER: gql`\n    query getSingleBanner($banner_id: Int!) {\n      getSingleBanner(query: { banner_id: $banner_id }) {\n        message\n        status\n        data {\n          id\n          name\n          slug\n          content\n          layout_type\n          status\n          createdAt\n          updatedAt\n        }\n      }\n    }\n  `,\n  BANNER_UPDATE: gql`\n    mutation updateBanner($data: UpdateBannerInput) {\n      updateBanner(data: $data) {\n        message\n        status\n      }\n    }\n  `,\n};\n","import '../../style/default.less';\n// style dependencies\n// deps-lint-skip: tooltip, popover\nimport '../../button/style';\nimport '../../popover/style';\nimport './index.less';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/button';\nimport ActionButton from '../_util/ActionButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { getRenderPropValue } from '../_util/getRenderPropValue';\nimport { ConfigContext } from '../config-provider';\nexport var Overlay = function Overlay(props) {\n  var prefixCls = props.prefixCls,\n    okButtonProps = props.okButtonProps,\n    cancelButtonProps = props.cancelButtonProps,\n    title = props.title,\n    cancelText = props.cancelText,\n    okText = props.okText,\n    okType = props.okType,\n    icon = props.icon,\n    _props$showCancel = props.showCancel,\n    showCancel = _props$showCancel === void 0 ? true : _props$showCancel,\n    close = props.close,\n    onConfirm = props.onConfirm,\n    onCancel = props.onCancel;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Popconfirm\",\n    defaultLocale: defaultLocale.Popconfirm\n  }, function (contextLocale) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-inner-content\")\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message\")\n    }, icon && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-message-icon\")\n    }, icon), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message-title\")\n    }, getRenderPropValue(title))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-buttons\")\n    }, showCancel && /*#__PURE__*/React.createElement(Button, _extends({\n      onClick: onCancel,\n      size: \"small\"\n    }, cancelButtonProps), cancelText !== null && cancelText !== void 0 ? cancelText : contextLocale.cancelText), /*#__PURE__*/React.createElement(ActionButton, {\n      buttonProps: _extends(_extends({\n        size: 'small'\n      }, convertLegacyProps(okType)), okButtonProps),\n      actionFn: onConfirm,\n      close: close,\n      prefixCls: getPrefixCls('btn'),\n      quitOnNullishReturnValue: true,\n      emitEvent: true\n    }, okText !== null && okText !== void 0 ? okText : contextLocale.okText)));\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this;\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Popover from '../popover';\nimport { cloneElement } from '../_util/reactNode';\nimport { Overlay } from './PurePanel';\nvar Popconfirm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var _useMergedState = useMergedState(false, {\n      value: props.open !== undefined ? props.open : props.visible,\n      defaultValue: props.defaultOpen !== undefined ? props.defaultOpen : props.defaultVisible\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    open = _useMergedState2[0],\n    setOpen = _useMergedState2[1];\n  // const isDestroyed = useDestroyed();\n  var settingOpen = function settingOpen(value, e) {\n    var _a, _b;\n    setOpen(value, true);\n    (_a = props.onVisibleChange) === null || _a === void 0 ? void 0 : _a.call(props, value, e);\n    (_b = props.onOpenChange) === null || _b === void 0 ? void 0 : _b.call(props, value, e);\n  };\n  var close = function close(e) {\n    settingOpen(false, e);\n  };\n  var onConfirm = function onConfirm(e) {\n    var _a;\n    return (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n  var onCancel = function onCancel(e) {\n    var _a;\n    settingOpen(false, e);\n    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n  var _onKeyDown = function onKeyDown(e) {\n    if (e.keyCode === KeyCode.ESC && open) {\n      settingOpen(false, e);\n    }\n  };\n  var onOpenChange = function onOpenChange(value) {\n    var _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled;\n    if (disabled) {\n      return;\n    }\n    settingOpen(value);\n  };\n  var customizePrefixCls = props.prefixCls,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? 'top' : _props$placement,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? 'click' : _props$trigger,\n    _props$okType = props.okType,\n    okType = _props$okType === void 0 ? 'primary' : _props$okType,\n    _props$icon = props.icon,\n    icon = _props$icon === void 0 ? /*#__PURE__*/React.createElement(ExclamationCircleFilled, null) : _props$icon,\n    children = props.children,\n    overlayClassName = props.overlayClassName,\n    restProps = __rest(props, [\"prefixCls\", \"placement\", \"trigger\", \"okType\", \"icon\", \"children\", \"overlayClassName\"]);\n  var prefixCls = getPrefixCls('popover', customizePrefixCls);\n  var prefixClsConfirm = getPrefixCls('popconfirm', customizePrefixCls);\n  var overlayClassNames = classNames(prefixClsConfirm, overlayClassName);\n  return /*#__PURE__*/React.createElement(Popover, _extends({}, restProps, {\n    trigger: trigger,\n    prefixCls: prefixCls,\n    placement: placement,\n    onOpenChange: onOpenChange,\n    open: open,\n    ref: ref,\n    overlayClassName: overlayClassNames,\n    _overlay: /*#__PURE__*/React.createElement(Overlay, _extends({\n      okType: okType,\n      icon: icon\n    }, props, {\n      prefixCls: prefixCls,\n      close: close,\n      onConfirm: onConfirm,\n      onCancel: onCancel\n    }))\n  }), cloneElement(children, {\n    onKeyDown: function onKeyDown(e) {\n      var _a, _b;\n      if ( /*#__PURE__*/React.isValidElement(children)) {\n        (_b = children === null || children === void 0 ? void 0 : (_a = children.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n      }\n      _onKeyDown(e);\n    }\n  }));\n});\nexport default Popconfirm;"],"sourceRoot":""}