{"version":3,"sources":["container/profile/settings/overview/Profile.js"],"names":["Profile","useForm","user","useSelector","state","auth","useState","isLoading","setIsLoading","profile","setProfile","dispatch","useDispatch","title","className","as","justify","xl","lg","xs","labelCol","span","name","onFinish","values","variables","data","uid","sendEmail","console","log","file","apolloUploadClient","mutate","mutation","authMutation","ADMIN_UPDATE","context","headers","TENANTID","process","Authorization","Cookies","get","then","res","adminUpdate","status","toast","error","message","success","first_name","last_name","changeUser","catch","err","finally","Item","label","rotate","listType","beforeUpload","isJpg","type","isLt2M","size","thumbnail","URL","createObjectURL","onPreview","onRemove","fileList","url","email","initialValue","rules","required","max","htmlType","loading","to","style","marginLeft"],"mappings":"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","file":"static/js/72.cd81ca50.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Row, Col, Form, Input, Select, Upload } from 'antd';\nimport { Cards } from '../../../../components/cards/frame/cards-frame';\nimport { Button } from '../../../../components/buttons/buttons';\nimport { BasicFormWrapper } from '../../../styled';\nimport Heading from '../../../../components/heading/heading';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { apolloUploadClient, authMutation } from '../../../../utility/apollo';\nimport Cookies from 'js-cookie';\nimport { toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\nimport ImgCrop from 'antd-img-crop';\nimport { changeUser } from '../../../../redux/authentication/actionCreator';\n\nconst Profile = () => {\n  const [form] = Form.useForm();\n  const user = useSelector(state => state.auth.user);\n  const [isLoading, setIsLoading] = useState(false)\n  const maxLength = 30;\n  const [profile, setProfile] = useState({})\n  const dispatch = useDispatch();\n\n  const handleSubmit = values => {\n\n    setIsLoading(true)\n    const variables = { data: { ...values, uid: user.uid, sendEmail: true } }\n    console.log(variables);\n    if (profile.file) {\n      variables.file = profile.file\n    }\n\n    apolloUploadClient.mutate({\n      mutation: authMutation.ADMIN_UPDATE,\n      variables,\n      context: {\n        headers: {\n          TENANTID: process.env.REACT_APP_TENANTID,\n          Authorization: Cookies.get('psp_t')\n        }\n      }\n    }).then(res => {\n      const status = res?.data?.adminUpdate?.status\n      if (!status) return toast.error(res?.data?.adminUpdate?.message)\n      toast.success(`Profile updated successfully.`)\n      const { first_name, last_name } = values;\n      dispatch(changeUser({ ...user, first_name, last_name }));\n    }).catch(err => {\n      console.log(\"ðŸš€ ~ file: AllAdmins.js ~ line 33 ~ handleStatusChange ~ err\", err);\n      toast.error(`Something went wrong!!`)\n    }).finally(() => {\n      setIsLoading(false)\n\n    })\n  };\n\n  const handleBeforeUpload = file => {\n    console.log(file)\n\n    const isJpg = file.type === 'image/jpeg';\n    if (!isJpg) return toast.error('You can only upload JPG file!')\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) return toast.error('Image must smaller than 2MB!');\n\n    if (isJpg && isLt2M) {\n      setProfile({ file, thumbnail: URL.createObjectURL(file) })\n    }\n\n\n    return false;\n  }\n\n\n\n  return (\n    <Cards\n      title={\n        <div className=\"setting-card-title\">\n          <Heading as=\"h4\">Edit Profile</Heading>\n          <span>Set Up Your Personal Information</span>\n        </div>\n      }\n    >\n      <Row justify=\"center\">\n        <Col xl={12} lg={16} xs={24}>\n          <BasicFormWrapper>\n            <Form labelCol={{ span: 6 }} name=\"editProfile\" onFinish={handleSubmit}>\n              <Form.Item\n                label=\"Photo\"\n              >\n                <p>\n                  <ImgCrop rotate >\n                    <Upload\n                      listType=\"picture-card\"\n                      beforeUpload={handleBeforeUpload}\n                      onPreview={() => console.log()}\n                      onRemove={() => setProfile({})}\n                      fileList={!profile.file ? [] : [{ file: profile.file, url: profile.thumbnail }]}\n                    >\n                      {!profile.file && \"+ Upload\"}\n                    </Upload>\n                  </ImgCrop>\n                </p>\n              </Form.Item>\n\n              <Form.Item\n                label=\"Email\"\n              >\n                <p> {user.email}</p>\n              </Form.Item>\n              <Form.Item\n                name=\"first_name\"\n                initialValue={user.first_name}\n                label=\"First Name\"\n                rules={[{ required: true, max: maxLength, message: \"Please enter First Name\" }]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                name=\"last_name\"\n                initialValue={user.last_name}\n                label=\"Last Name\"\n                rules={[{ required: true, message: \"Please enter Last Name\" }]}\n              >\n                <Input />\n              </Form.Item>\n\n\n              <div className=\"setting-form-actions\">\n                <Button\n                  size=\"default\"\n                  htmlType=\"submit\"\n                  type=\"primary\"\n                  loading={isLoading}\n                // disabled={isLoading}\n                >\n                  {isLoading ? 'Processing' : 'Update Profile'}\n\n                </Button>\n                &nbsp; &nbsp;\n                <Link to=\"/admin\" >\n                  <Button style={{ marginLeft: 10 }} type=\"light\" size=\"default\">\n                    Cancel\n                  </Button>\n                </Link>\n              </div>\n            </Form>\n          </BasicFormWrapper>\n        </Col>\n      </Row>\n    </Cards >\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}