{"version":3,"sources":["container/products/AddAttribute.js"],"names":["Option","AddAttribute","viewPermission","search","useLocation","params","queryString","parse","history","useHistory","useState","data","isLoading","attributeGroups","setAttributeGroups","attr_group_id","setAttr_group_id","attribute_status","setAttribute_status","setIsLoading","useForm","form","singleAttribute","setSingleAttribute","useEffect","apolloClient","query","attributeQuery","GET_ALL_ATTR_GROUPS","context","headers","TENANTID","process","Authorization","Cookies","get","then","res","getAllAttrGroups","status","s","error","catch","err","finally","id","GET_SINGLE_ATTRIBUTE","variables","attribute_id","parseInt","getSingleAttribute","console","log","title","attribute_name","gutter","sm","xs","headless","style","textAlign","tip","width","name","onFinish","values","toast","warning","mutate","mutation","attributeMutation","UPDATE_ATTRIBUTE","refetchQueries","GET_ALL_ATTRIBUTES","updateAttribute","message","setTimeout","push","success","CREATE_ATTRIBUTE","createAttribute","onFinishFailed","errorInfo","labelCol","span","Item","rules","required","max","label","initialValue","placeholder","className","allowClear","value","onChange","map","item","key","attr_group_name","checked","display","justifyContent","marginTop","loading","size","htmlType","type","raised","to","marginLeft"],"mappings":"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","file":"static/js/62.81603c9e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Input, Select, Spin, Switch } from 'antd';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Button } from '../../components/buttons/buttons';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport apolloClient, { attributeMutation, attributeQuery } from '../../utility/apollo';\nimport Cookies from 'js-cookie';\nimport { toast } from 'react-toastify';\nimport { viewPermission } from '../../utility/utility';\nconst { Option } = Select;\n\nconst AddAttribute = () => {\n  viewPermission('attribute');\n  const { search } = useLocation();\n  const params = queryString.parse(search);\n  const history = useHistory();\n\n  const [attributeGroups, setAttributeGroups] = useState({ data: [], isLoading: true });\n  const [attr_group_id, setAttr_group_id] = useState('');\n  const [attribute_status, setAttribute_status] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [form] = Form.useForm();\n  const maxLength = 30;\n  const [singleAttribute, setSingleAttribute] = useState({ data: [], isLoading: true });\n\n  // Load all attribute group\n  useEffect(() => {\n    apolloClient\n      .query({\n        query: attributeQuery.GET_ALL_ATTR_GROUPS,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getAllAttrGroups;\n\n        if (!data?.status) return;\n        setAttributeGroups(s => ({ ...s, data: data?.data, error: '' }));\n      })\n      .catch(err => {\n        setAttributeGroups(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setAttributeGroups(s => ({ ...s, isLoading: false }));\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!params.id) return;\n    apolloClient\n      .query({\n        query: attributeQuery.GET_SINGLE_ATTRIBUTE,\n        variables: {\n          query: {\n            attribute_id: parseInt(params.id),\n          },\n        },\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getSingleAttribute;\n        setSingleAttribute({ data: data.data, isLoading: false });\n        setAttr_group_id(data.data.attr_group_id);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleSubmit = values => {\n    const { attribute_name } = values;\n    if (!attr_group_id) return toast.warning('Attribute Group is not selected');\n\n    setIsLoading(true);\n    if (!params.id) {\n      // Create Attribute group\n      const variables = { data: { attribute_name, attribute_status, attr_group_id } };\n\n      apolloClient\n        .mutate({\n          mutation: attributeMutation.CREATE_ATTRIBUTE,\n          variables,\n          context: {\n            headers: {\n              TENANTID: process.env.REACT_APP_TENANTID,\n              Authorization: Cookies.get('psp_t'),\n            },\n            refetchQueries: [\n              {\n                query: attributeQuery.GET_ALL_ATTRIBUTES,\n                context: {\n                  headers: {\n                    TENANTID: process.env.REACT_APP_TENANTID,\n                    Authorization: Cookies.get('psp_t'),\n                  },\n                },\n              },\n              ['getAllAttributes'],\n            ],\n          },\n        })\n        .then(res => {\n          const data = res?.data?.createAttribute;\n          if (!data.status) return toast.error(data.message);\n          setTimeout(() => {\n            history.push('/admin/attributes/list');\n          }, 1000);\n          toast.success(`${values.attribute_name} Added successfully`);\n        })\n        .catch(err => {\n          console.log('got error on addPermission', err);\n          return toast.error('Something Went wrong !!');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } else {\n      // Update  Attribute group\n      const variables = {\n        data: {\n          attribute_id: parseInt(params.id),\n          attribute_name,\n          attribute_status,\n          attr_group_id: parseInt(attr_group_id),\n        },\n      };\n      // return;\n      apolloClient\n        .mutate({\n          mutation: attributeMutation.UPDATE_ATTRIBUTE,\n          variables,\n          context: {\n            headers: {\n              TENANTID: process.env.REACT_APP_TENANTID,\n              Authorization: Cookies.get('psp_t'),\n            },\n          },\n          refetchQueries: [\n            {\n              query: attributeQuery.GET_ALL_ATTRIBUTES,\n              context: {\n                headers: {\n                  TENANTID: process.env.REACT_APP_TENANTID,\n                  Authorization: Cookies.get('psp_t'),\n                },\n              },\n            },\n            ['getAllAttributes'],\n          ],\n        })\n        .then(res => {\n          const data = res?.data?.updateAttribute;\n          if (!data.status) return toast.error(data.message);\n          setTimeout(() => {\n            history.push('/admin/attributes/list');\n          }, 1000);\n          toast.success(data.message);\n        })\n        .catch(err => {\n          console.log('got error on addPermission', err);\n          return toast.error('Something Went wrong !!');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={\n          params.id\n            ? `Manage Attribute | Edit ${singleAttribute.isLoading ? '' : `(${singleAttribute.data.attribute_name})`}`\n            : 'Add Attribute'\n        }\n      />\n      <Main>\n        <Row gutter={25}>\n          <Col sm={24} xs={24}>\n            <Cards headless>\n              {params.id && singleAttribute.isLoading ? (\n                <div style={{ textAlign: 'center' }}>\n                  <Spin tip=\"processing...\" />\n                </div>\n              ) : (\n                <Form\n                  style={{ width: '100%' }}\n                  form={form}\n                  name=\"addRole\"\n                  onFinish={handleSubmit}\n                  onFinishFailed={errorInfo => console.log('form error info:\\n', errorInfo)}\n                  labelCol={{ span: 4 }}\n                >\n                  <Form.Item\n                    rules={[{ required: true, max: maxLength, message: 'Please enter Attribute Name' }]}\n                    name=\"attribute_name\"\n                    label=\"Attribute Name\"\n                    initialValue={singleAttribute?.data?.attribute_name || ''}\n                  >\n                    <Input placeholder=\"Enter Attribute Name\" />\n                  </Form.Item>\n\n                  <Form.Item\n                    initialValue=\"\"\n                    label=\"Attribute Group\"\n                    // tooltip={roles.isLoading ? 'Loading roles....' : null}\n                  >\n                    {attributeGroups.isLoading ? (\n                      <div className=\"spin\">\n                        <Spin />\n                      </div>\n                    ) : (\n                      <>\n                        <Select\n                          // mode=\"multiple\"\n                          allowClear\n                          placeholder=\"Select Attribute Group\"\n                          value={attr_group_id}\n                          onChange={value => setAttr_group_id(value)}\n                        >\n                          {attributeGroups.data.map(item => (\n                            <Option key={item.id} value={item.id}>\n                              {item.attr_group_name}\n                            </Option>\n                          ))}\n                        </Select>\n                      </>\n                    )}\n                  </Form.Item>\n                  <Form.Item name=\"attrgroup_status\" label=\"Status\">\n                    <Switch checked={attribute_status} onChange={checked => setAttribute_status(checked)} />\n                  </Form.Item>\n\n                  {/* <Form.Item\n                                    rules={[{ required: true, max: maxLength, message: \"Please enter sort order\" }]}\n                                    name=\"gs\" label=\"Sort order\"\n                                // initialValue={params.name || \"\"}\n                                >\n                                    <Input type='number' placeholder='Enter sort order' />\n                                </Form.Item> */}\n\n                  <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'flex-end',\n                      marginTop: '3em',\n                    }}\n                  >\n                    <Form.Item>\n                      <Button loading={isLoading} size=\"default\" htmlType=\"submit\" type=\"primary\" raised>\n                        {isLoading ? 'Processing' : 'Save'}\n                      </Button>\n                      <Link to=\"/admin/attributes/list\">\n                        <Button style={{ marginLeft: 10 }} type=\"light\" size=\"default\">\n                          Cancel\n                        </Button>\n                      </Link>\n                    </Form.Item>\n                  </div>\n                </Form>\n              )}\n            </Cards>\n          </Col>\n        </Row>\n      </Main>\n    </>\n  );\n};\n\nexport default AddAttribute;\n"],"sourceRoot":""}