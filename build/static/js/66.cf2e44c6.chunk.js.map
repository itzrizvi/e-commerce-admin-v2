{"version":3,"sources":["container/products/ListAttributes.js"],"names":["ListAttributes","viewPermission","dummyData","Array","keys","map","i","a_n","a_g","g_s","useState","data","isLoading","attributes","setAttributes","filteredAttributes","setFilteredAttributes","searchText","setSearchText","columns","title","dataIndex","key","sorter","a","b","attribute_name","toUpperCase","attribute_group","attr_group_name","render","value","record","align","attribute_status","filters","text","onFilter","defaultChecked","onChange","checked","handleStatusChange","width","to","id","name","style","margin","useEffect","apolloClient","query","attributeQuery","GET_ALL_ATTRIBUTES","context","headers","TENANTID","process","Authorization","Cookies","get","then","res","getAllAttributes","status","s","error","catch","err","finally","variables","attribute_id","console","log","mutate","mutation","attributeMutation","UPDATE_ATTRIBUTE","updateAttribute","toast","message","success","buttons","className","size","type","icon","gutter","sm","xs","headless","placeholder","prefix","e","target","filter","attr","toLowerCase","includes","rowKey","dataSource","rowClassName","index"],"mappings":"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","file":"static/js/66.cf2e44c6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Input, Table, Spin, Switch } from 'antd';\nimport FeatherIcon from 'feather-icons-react';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Button } from '../../components/buttons/buttons';\nimport { Link } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport apolloClient, { attributeMutation, attributeQuery } from '../../utility/apollo';\nimport Cookies from 'js-cookie';\nimport { toast } from 'react-toastify';\nimport { viewPermission } from '../../utility/utility';\n\nconst ListAttributes = () => {\n    viewPermission('attribute');\n    const dummyData = [...Array(6).keys()].map(i => ({ a_n: `Attribute ${i + 1}`, a_g: `Group 2`, g_s: i + 1 }))\n\n    const [attributes, setAttributes] = useState({ data: dummyData, isLoading: true })\n    const [filteredAttributes, setFilteredAttributes] = useState([])\n    const [searchText, setSearchText] = useState('')\n\n\n\n    const columns = [\n        {\n            title: 'Attribute Name',\n            dataIndex: 'attribute_name',\n            key: 'attribute_name',\n            sorter: (a, b) => a.attribute_name.toUpperCase() > b.attribute_name.toUpperCase() ? 1 : -1,\n        },\n        {\n            title: 'Attribute Group',\n            dataIndex: 'attribute_group.attr_group_name',\n            key: 'attribute_group.attr_group_name',\n            sorter: (a, b) => a.attribute_group.attr_group_name.toUpperCase() > b.attribute_group.attr_group_name.toUpperCase() ? 1 : -1,\n            render: (value, record) => record?.attribute_group?.attr_group_name\n        },\n        {\n            title: 'Status',\n            dataIndex: 'attribute_status',\n            key: 'attribute_status',\n            align: 'right',\n            sorter: (a, b) => (a.attribute_status === b.attribute_status) ? 0 : a.attribute_status ? -1 : 1,\n            filters: [\n                {\n                    text: 'Active',\n                    value: true,\n                },\n                {\n                    text: 'Inactive',\n                    value: false,\n                }\n            ],\n            onFilter: (value, record) => record.attribute_status === value,\n            render: (value, record) => (\n                <Switch\n                    defaultChecked={value} title='Status'\n                    onChange={checked => handleStatusChange(record, checked)}\n                />\n            )\n        },\n        {\n            title: 'Action',\n            dataIndex: 'action',\n            width: 70,\n            align: 'right',\n            render: (text, record) => (\n                <>\n                    <Link to={`/admin/attributes/add?id=${record.id}`}>\n                        {/* <Button size=\"default\" type=\"white\" title='Edit'> */}\n                        <FontAwesome name=\"edit\" style={{ margin: \".5em 1em\" }} />\n                        {/* </Button> */}\n                    </Link>\n                </>\n            ),\n            key: 'last_name',\n        },\n    ]\n\n    useEffect(() => {\n        // return\n        apolloClient.query({\n            query: attributeQuery.GET_ALL_ATTRIBUTES,\n            context: {\n                headers: {\n                    TENANTID: process.env.REACT_APP_TENANTID,\n                    Authorization: Cookies.get('psp_t')\n                }\n            }\n        }).then(res => {\n\n            const data = res?.data?.getAllAttributes\n\n            if (!data?.status) return\n            setAttributes(s => ({ ...s, data: data?.data, error: '' }))\n\n        }).catch(err => {\n            setAttributes(s => ({ ...s, error: 'Something went Wrong.!! ' }))\n        }).finally(() => {\n            setAttributes(s => ({ ...s, isLoading: false }))\n        })\n\n    }, []);\n\n    const onChangeSearch = e => {\n        const value = e.target.value\n        setSearchText(value)\n        setFilteredAttributes(attributes.data.filter(attr => (attr?.attribute_name + attr?.attribute_group?.attr_group_name).toLowerCase().includes(value.toLowerCase())))\n    }\n\n    const handleStatusChange = (record, checked) => {\n        const variables = { data: { attribute_id: record.id, attribute_status: checked } }\n        console.log(variables)\n        // return;\n        apolloClient.mutate({\n            mutation: attributeMutation.UPDATE_ATTRIBUTE,\n            variables,\n            context: {\n                headers: {\n                    TENANTID: process.env.REACT_APP_TENANTID,\n                    Authorization: Cookies.get('psp_t')\n                },\n            },\n\n        }).then(res => {\n            const data = res?.data?.updateAttribute\n            if (!data.status) return toast.error(data.message);\n            toast.success(`${record.attribute_name} attribute status updated.`);\n        }).catch(err => {\n            console.log(\"got error on addPermission\", err)\n            return toast.error('Something Went wrong !!')\n        })\n    }\n\n\n    return (\n        <>\n            <PageHeader\n                title=\"Attributes\"\n                buttons={[\n                    <div key=\"1\" className=\"page-header-actions\">\n                        <Link to=\"/admin/attributes/add\">\n                            <Button size=\"small\" title=\"Add Attribute\" type=\"primary\">\n                                <FeatherIcon icon=\"file-plus\" />\n                            </Button>\n                        </Link>\n                    </div>\n                ]}\n            />\n            <Main>\n                <Row gutter={25}>\n                    <Col sm={24} xs={24}>\n                        <Cards headless>\n                            {attributes.isLoading ?\n                                <div className=\"spin\">\n                                    <Spin />\n                                </div>\n                                :\n                                <>\n                                    <Input placeholder=\"Search Attribute...\" prefix={<SearchOutlined />} onChange={onChangeSearch} />\n                                    <br /><br />\n\n                                    <span className={\"psp_list\"} >\n                                        <Table\n                                            className=\"table-responsive\"\n                                            columns={columns}\n                                            rowKey={'g_s'}\n                                            size=\"small\"\n                                            dataSource={searchText ? filteredAttributes : attributes.data}\n                                            rowClassName={(record, index) => (index % 2 === 0 ? \"\" : \"altTableClass\")}\n                                        // pagination={false}\n                                        // pagination={{\n                                        //     defaultPageSize: config.PERMISSIONS_PER_PAGE,\n                                        //     total: searchText ? filteredPermissions.length : permissions.length,\n                                        //     showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n                                        // }}\n                                        />\n                                    </span>\n\n\n\n                                </>\n\n                            }\n\n\n\n                        </Cards>\n                    </Col>\n                </Row>\n            </Main>\n        </>\n    );\n};\n\nexport default ListAttributes;\n"],"sourceRoot":""}