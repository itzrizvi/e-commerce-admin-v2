{"version":3,"sources":["container/vendors/ListVendor.js"],"names":["RangePicker","checkPoint","ListVendor","viewPermission","useState","data","loading","error","vendors","setVendors","token","useSelector","state","auth","isFilter","setIsFilter","searchButton","setSearchButton","searchDisable","setSearchDisable","dateRange","setChangeDateRange","updatedDateRange","setChangeUpdatedDateRange","status","searchQuery","vendorEntryStartDate","vendorEntryEndDate","vendorUpdatedStartDate","vendorUpdatedEndDate","filterParams","setFilterParams","columns","title","dataIndex","key","width","ellipsis","sorter","a","b","id","company_name","email","phone_number","EIN_no","FAX_no","align","filters","text","value","onFilter","record","render","defaultChecked","onChange","checked","handleStatusChange","createdAt","className","format","parseInt","updatedAt","to","name","style","margin","color","apolloClient","mutate","mutation","vendorMutation","UPDATE_VENDOR_STATUS","variables","context","headers","TENANTID","process","Authorization","Cookies","get","then","res","updateVendorStatus","toast","message","success","catch","err","returnMomentDateRange","start","finish","moment","useEffect","buttons","size","type","onClick","icon","gutter","sm","xs","headless","span","height","placeholder","prefix","e","persist","target","s","disabled","query","vendorQuery","GET_ALL_VENDOR","fetchPolicy","getAllVendor","finally","marginBottom","marginTop","options","label","onSelect","val","allowClear","picker","_d","rowKey","dataSource","rowClassName","index","pagination","defaultPageSize","config","VENDOR_PER_PAGE","total","length","showTotal","range"],"mappings":"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","file":"static/js/77.2269a989.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Spin, Input, Table, DatePicker, Select, Switch } from 'antd';\nimport FeatherIcon from 'feather-icons-react';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Button } from '../../components/buttons/buttons';\nimport { Link } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport { RetweetOutlined, SearchOutlined } from '@ant-design/icons';\nimport config from '../../config/config';\nimport apolloClient, { vendorMutation, vendorQuery } from '../../utility/apollo';\nimport { viewPermission } from '../../utility/utility';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nconst { RangePicker } = DatePicker;\nimport { useSelector } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport { toast } from 'react-toastify';\n\nlet checkPoint = false;\nconst ListVendor = () => {\n  viewPermission('vendor');\n\n  const [vendors, setVendors] = useState({ data: [], loading: false, error: '' });\n  const token = useSelector(state => state.auth.token);\n  const [isFilter, setIsFilter] = useState(false);\n  const [searchButton, setSearchButton] = useState(false);\n  const [searchDisable, setSearchDisable] = useState(true);\n  const [dateRange, setChangeDateRange] = useState(null);\n  const [updatedDateRange, setChangeUpdatedDateRange] = useState(null);\n  const [filterParams, setFilterParams] = useState({\n    status: '',\n    searchQuery: '',\n    vendorEntryStartDate: '',\n    vendorEntryEndDate: '',\n    vendorUpdatedStartDate: '',\n    vendorUpdatedEndDate: ''\n  });\n\n  const columns = [\n    {\n      title: 'Vendor ID',\n      dataIndex: 'id',\n      key: 'id',\n      width: 120,\n      ellipsis: true,\n      sorter: (a, b) => (a.id > b.id ? 1 : -1),\n    },\n    {\n      title: 'Company Name',\n      dataIndex: 'company_name',\n      key: 'company_name',\n      width: 180,\n      ellipsis: true,\n      sorter: (a, b) => (a.company_name > b.company_name ? 1 : -1),\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      ellipsis: true,\n      sorter: (a, b) => (a.email > b.email ? 1 : -1),\n    },\n    {\n      title: 'Phone',\n      dataIndex: 'phone_number',\n      key: 'phone_number',\n      ellipsis: true,\n      sorter: (a, b) => (a.phone_number > b.phone_number ? 1 : -1),\n    },\n    {\n      title: 'EIN',\n      dataIndex: 'EIN_no',\n      key: 'EIN_no',\n      ellipsis: true,\n      sorter: (a, b) => (a.EIN_no > b.EIN_no ? 1 : -1),\n    },\n    {\n      title: 'Fax',\n      dataIndex: 'FAX_no',\n      key: 'FAX_no',\n      ellipsis: true,\n      sorter: (a, b) => (a.FAX_no > b.FAX_no ? 1 : -1),\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      align: 'center',\n      // width: 100,\n      sorter: (a, b) => (a.status === b.status ? 0 : a.status ? -1 : 1),\n      filters: [\n        {\n          text: 'True',\n          value: true,\n        },\n        {\n          text: 'False',\n          value: false,\n        },\n      ],\n      onFilter: (value, record) => record.status === value,\n      render: (value, record) => (\n        <Switch defaultChecked={value} title=\"Status\" onChange={checked => handleStatusChange(record, checked)} />\n      ),\n    },\n    {\n      title: 'Date Added',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      align: 'center',\n      width: 140,\n      sorter: (a, b) => (a.createdAt === b.createdAt ? 0 : a.createdAt ? -1 : 1),\n      render: (text, record) => (\n        <span className={'status-text'}>{<Moment format=\"DD-MMM-YYYY\">{parseInt(text)}</Moment>}</span>\n      ),\n    },\n    {\n      title: 'Date Updated',\n      dataIndex: 'updatedAt',\n      key: 'updatedAt',\n      align: 'center',\n      width: 140,\n      sorter: (a, b) => (a.updatedAt === b.updatedAt ? 0 : a.updatedAt ? -1 : 1),\n      render: (text, record) => (\n        <span className={'status-text'}>{<Moment format=\"DD-MMM-YYYY\">{parseInt(text)}</Moment>}</span>\n      ),\n    },\n    {\n      title: 'Action',\n      dataIndex: 'action',\n      width: 70,\n      align: 'right',\n      render: (text, record) => (\n        <>\n          <Link to={`/admin/vendor/edit/${record.id}`}>\n            <FontAwesome name=\"edit\" style={{ margin: '.5em 1em', color: '#5F63F2' }} />\n          </Link>\n        </>\n      ),\n      key: 'last_name',\n    },\n  ];\n\n  const searchVendorAdmin = () => {\n    setVendors(s => ({ ...s, loading: true }));\n    apolloClient\n      .query({\n        query: vendorQuery.GET_ALL_VENDOR,\n        variables: {\n          query: {\n            searchQuery: filterParams.searchQuery ?? '',\n            status: filterParams.status ?? '',\n            vendorEntryStartDate: filterParams.vendorEntryStartDate ?? '',\n            vendorEntryEndDate: filterParams.vendorEntryEndDate ?? '',\n            vendorUpdatedStartDate: filterParams.vendorUpdatedStartDate ?? '',\n            vendorUpdatedEndDate: filterParams.vendorUpdatedEndDate ?? ''\n          }\n        },\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: token,\n          },\n        },\n        fetchPolicy: 'network-only'\n      })\n      .then(res => {\n        const data = res?.data?.getAllVendor;\n        if (!data.status) return;\n        setVendors(data);\n      })\n      .catch(err => {\n        setVendors(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setVendors(s => ({ ...s, loading: false }));\n        setSearchButton(!searchButton)\n      });\n  }\n\n  const handleStatusChange = (record, checked) => {\n    apolloClient\n      .mutate({\n        mutation: vendorMutation.UPDATE_VENDOR_STATUS,\n        variables: { data: { id: record.id, status: checked } },\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.updateVendorStatus;\n        if (!data.status) return toast.error(data.message);\n        toast.success(`${record.company_name} status updated.`);\n      })\n      .catch(err => {\n        return toast.error('Something Went wrong !!');\n      });\n  };\n\n  const onDateRangeChange = dateRange => {\n    if (dateRange) {\n      setFilterParams(s => ({ ...s, vendorEntryStartDate: dateRange[0]._d ?? '', vendorEntryEndDate: dateRange[1]._d ?? '' }))\n      setChangeDateRange(returnMomentDateRange(dateRange[0], dateRange[1]));\n    } else {\n      setChangeDateRange(null);\n    }\n  };\n  const onDateUpdatedRangeChange = updatedDateRange => {\n    if (updatedDateRange) {\n      setFilterParams(s => ({ ...s, vendorUpdatedStartDate: updatedDateRange[0]._d ?? '', vendorUpdatedEndDate: updatedDateRange[1]._d ?? '' }))\n      setChangeUpdatedDateRange(returnMomentDateRange(updatedDateRange[0], updatedDateRange[1]));\n    } else {\n      setChangeUpdatedDateRange(null);\n    }\n  };\n\n  const returnMomentDateRange = (start, finish) => {\n    return [moment(start, \"YYYY-MM-DD\"), moment(finish, \"YYYY-MM-DD\")];\n  };\n\n  useEffect(() => {\n    if (checkPoint) {\n      if (filterParams.searchQuery !== '' ||\n        filterParams.vendorEntryStartDate !== '' ||\n        filterParams.status !== '' ||\n        filterParams.vendorEntryEndDate !== '' ||\n        filterParams.vendorUpdatedStartDate !== '' ||\n        filterParams.vendorUpdatedEndDate !== '') {\n        setSearchDisable(false)\n      } else {\n        setSearchDisable(true)\n      }\n    }\n    checkPoint = true;\n  }, [filterParams]);\n\n  return (\n    <>\n      <PageHeader\n        title=\"Vendors\"\n        buttons={[\n          <div key=\"1\" className=\"page-header-actions\">\n            <Button\n              size=\"small\"\n              type=\"white\"\n              onClick={() => setIsFilter(state => !state)}\n            >\n              <FeatherIcon icon=\"filter\" />\n              Filter\n            </Button>\n            <Button size=\"small\" type=\"white\" onClick={() => {\n              setChangeDateRange(null)\n              setSearchDisable(true)\n              setChangeUpdatedDateRange(null)\n              setFilterParams({\n                status: '',\n                searchQuery: '',\n                vendorEntryStartDate: '',\n                vendorEntryEndDate: '',\n                vendorUpdatedStartDate: '',\n                vendorUpdatedEndDate: ''\n              })\n            }}>\n              <RetweetOutlined />\n              Reset Filter\n            </Button>\n            <Link to=\"/admin/vendor/add\">\n              <Button size=\"small\" title=\"Add Vendors\" type=\"primary\">\n                <FeatherIcon icon=\"plus\" />\n              </Button>\n            </Link>\n          </div>,\n        ]}\n      />\n      <Main>\n        <Row gutter={25}>\n          <Col sm={24} xs={24}>\n            <Cards headless>\n              {vendors.loading ?\n                <div className=\"spin\">\n                  <Spin />\n                </div>\n                :\n                vendors.error ?\n                  <p>{vendors.error}</p>\n                  :\n                  <>\n                    <Row gutter={25}>\n                      <Col span={18}>\n                        <Input\n                          style={{ height: \"42px\" }}\n                          placeholder=\"Search Vendor By Company Name, Email, Phone....\"\n                          prefix={<SearchOutlined />}\n                          value={filterParams?.searchQuery}\n                          onChange={e => {\n                            e.persist()\n                            const value = e.target.value;\n                            setFilterParams(s => ({ ...s, searchQuery: value }));\n                          }}\n                        />\n                      </Col>\n                      <Col span={6}>\n                        <Button\n                          style={{ height: \"42px\" }}\n                          size=\"large\"\n                          type=\"primary\"\n                          disabled={searchDisable}\n                          onClick={searchVendorAdmin}\n                        >\n                          Search\n                        </Button>\n                      </Col>\n                    </Row>\n\n                    <br />\n                    <br />\n                    {isFilter && (\n                      <div style={{ marginBottom: '2.5em' }}>\n                        <Row gutter={16} style={{ marginTop: '.5em' }}>\n                          <Col span={4}>\n                            Status: <br />\n                            <Select\n                              style={{ width: '100%' }}\n                              size=\"middle\"\n                              placeholder={\"Select Status...\"}\n                              value={filterParams?.status}\n                              options={[\n                                {\n                                  label: \"True\",\n                                  value: \"true\"\n                                },\n                                {\n                                  label: \"False\",\n                                  value: \"false\"\n                                },\n                              ]}\n                              onSelect={val => {\n                                setFilterParams(s => ({ ...s, status: val }));\n                              }}\n                            />\n                          </Col>\n                          <Col span={10}>\n                            Date Added: <br />\n                            <RangePicker\n                              style={{ height: '40px', width: '100%' }}\n                              size=\"small\"\n                              allowClear={true}\n                              picker=\"date\"\n                              value={dateRange !== \"\" ? dateRange : \"\"}\n                              onChange={onDateRangeChange}\n                            />\n                          </Col>\n                          <Col span={10}>\n                            Date Updated: <br />\n                            <RangePicker\n                              style={{ height: '40px', width: '100%' }}\n                              size=\"small\"\n                              allowClear={true}\n                              picker=\"date\"\n                              value={updatedDateRange !== \"\" ? updatedDateRange : \"\"}\n                              onChange={onDateUpdatedRangeChange}\n                            />\n                          </Col>\n                        </Row>\n\n                      </div>\n                    )}\n\n                    <span className={'psp_list'}>\n                      <Table\n                        className=\"table-responsive\"\n                        columns={columns}\n                        rowKey={'g_s'}\n                        size=\"small\"\n                        dataSource={vendors?.data ? vendors.data : []}\n                        rowClassName={(record, index) => (index % 2 === 0 ? '' : 'altTableClass')}\n                        // pagination={false}\n                        pagination={{\n                          defaultPageSize: config.VENDOR_PER_PAGE,\n                          total: vendors?.data ? vendors.data.length : 0,\n                          showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n                        }}\n                      />\n                    </span>\n                  </>\n              }\n            </Cards>\n          </Col>\n        </Row>\n      </Main>\n    </>\n  );\n};\n\nexport default ListVendor;\n"],"sourceRoot":""}