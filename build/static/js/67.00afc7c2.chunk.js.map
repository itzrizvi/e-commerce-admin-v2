{"version":3,"sources":["container/products/Products.js"],"names":["RangePicker","checkPoint","permissions_json","Cookies","get","permissions","JSON","parse","permissionCheckForAllCondition","forEach","permission","permission_name","read_access","edit_access","Products","viewPermission","useState","data","isLoading","products","setProducts","searchButton","setSearchButton","isFilter","setIsFilter","categories","setCategories","attributes","setAttributes","availability","setAvailability","conditions","setConditions","dateRange","setChangeDateRange","updatedDateRange","setChangeUpdatedDateRange","searchDisable","setSearchDisable","loading","error","representative","setRepresentative","viewallfilter","setViewAllFilter","condition","productrep","startDate","endDate","updatedStartDate","updatedEndDate","minPrice","maxPrice","searchQuery","filterDate","setFilterDate","useEffect","apolloClient","query","productQuery","GET_ALL_CATEGORIES","context","headers","TENANTID","process","then","res","getAllCategories","status","length","arrData","item","parent","cat_name","push","id","subcategories","subCat","sub","subsubcategories","subSubCat","subSub","catch","err","gql","Authorization","getAllAttributes","utilityQuery","GET_ALL_AVAILABILITY","getAllProductAvailabilityStatus","GET_ALL_CONDITIONS","getAllProductCondition","columns","title","dataIndex","key","width","ellipsis","sorter","a","b","toUpperCase","render","text","record","effect","src","renderImage","prod_thumbnail","onError","errorImageSrc","alt","prod_name","prod_sku","prod_partnum","align","prod_status","filters","value","onFilter","defaultChecked","onChange","checked","mutate","mutation","productMutation","UPDATE_PRODUCT","variables","prod_id","updateProduct","toast","message","success","handleStatusChange","is_sale","handleIsSaleStatusChange","createdAt","className","format","parseInt","updatedAt","to","name","style","margin","color","returnMomentDateRange","start","finish","moment","authQuery","GET_ALL_STAFF","getAllStaff","s","finally","buttons","size","type","onClick","state","icon","gutter","sm","xs","headless","span","placeholder","prefix","e","persist","target","disabled","GET_PRODUCT_LIST","attribute","category","productRep","productEntryStartDate","productEntryEndDate","parseFloat","fetchPolicy","getProductList","marginBottom","mode","onDeselect","val","prev","filter","onSelect","concat","options","map","label","optionFilterProp","height","allowClear","picker","_d","marginTop","attribute_name","Group","compact","first_name","last_name","col","rowKey","dataSource","rowClassName","index","pagination","defaultPageSize","config","PRODUCTS_PER_PAGE","total","showTotal","range"],"mappings":"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","file":"static/js/67.00afc7c2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Spin, Input, Table, Switch, Checkbox, DatePicker, Select } from 'antd';\nimport FeatherIcon from 'feather-icons-react';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Button } from '../../components/buttons/buttons';\nimport { RetweetOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { viewPermission } from '../../utility/utility';\nimport apolloClient, { productQuery, utilityQuery, productMutation, authQuery } from '../../utility/apollo';\nimport FontAwesome from 'react-fontawesome';\nimport Cookies from 'js-cookie';\nimport config from '../../config/config';\nimport { errorImageSrc, renderImage } from '../../utility/images';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { gql } from '@apollo/client';\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\nimport Moment from 'react-moment';\nconst { RangePicker } = DatePicker;\n\nlet checkPoint = false;\nconst permissions_json = Cookies.get('permissions') ?? \"[]\";\nconst permissions = JSON.parse(permissions_json);\nlet permissionCheckForAllCondition = false\n// Check Permission\npermissions.forEach((permission) => {\n  if (permission.permission_name === \"product-all\") {\n    if (permission.read_access === true && permission.edit_access === true) {\n      permissionCheckForAllCondition = true;\n    }\n  }\n});\n\n\nconst Products = () => {\n  viewPermission('product');\n  const [products, setProducts] = useState({ data: [], isLoading: false });\n  const [searchButton, setSearchButton] = useState(false);\n  const [isFilter, setIsFilter] = useState(false);\n  const [categories, setCategories] = useState({ data: [], isLoading: true });\n  const [attributes, setAttributes] = useState({ data: [], isLoading: true });\n  const [availability, setAvailability] = useState({ data: [], isLoading: true });\n  const [conditions, setConditions] = useState({ data: [], isLoading: true });\n  const [dateRange, setChangeDateRange] = useState(null);\n  const [updatedDateRange, setChangeUpdatedDateRange] = useState(null);\n  const [searchDisable, setSearchDisable] = useState(true);\n  const [representative, setRepresentative] = useState({ data: [], loading: true, error: '' });\n  const [viewallfilter, setViewAllFilter] = useState(false);\n  const [filterDate, setFilterDate] = useState({\n    availability: [],\n    categories: [],\n    condition: [],\n    attributes: [],\n    productrep: [],\n    startDate: '',\n    endDate: '',\n    updatedStartDate: '',\n    updatedEndDate: '',\n    minPrice: '',\n    maxPrice: '',\n    searchQuery: ''\n  });\n\n  // Load Product List\n  useEffect(() => {\n    // Load filter data\n    // 1.load category\n    apolloClient\n      .query({\n        query: productQuery.GET_ALL_CATEGORIES,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getAllCategories;\n        if (!data.status) return;\n        // setCategories(data.categories)\n\n        if (!data.categories.length) return;\n        let arrData = [];\n\n        data.categories.forEach(item => {\n          const parent = item.cat_name;\n\n          arrData.push({ cat_name: parent, id: item.id });\n          if (item.subcategories) {\n            item.subcategories.forEach(subCat => {\n              const sub = subCat.cat_name;\n              arrData.push({ cat_name: `${parent} > ${sub}`, id: subCat.id });\n              if (subCat.subsubcategories) {\n                subCat.subsubcategories.forEach(subSubCat => {\n                  const subSub = subSubCat.cat_name;\n                  arrData.push({ cat_name: `${parent} > ${sub} > ${subSub}`, id: subSubCat.id });\n                });\n              }\n            });\n          }\n        });\n        setCategories({ data: arrData, isLoading: false });\n      })\n      .catch(err => { });\n\n    // 2.load Arrributes\n    apolloClient\n      .query({\n        query: gql`\n          query getAllAttributes {\n            getAllAttributes {\n              message\n              status\n              tenant_id\n              data {\n                id\n                attribute_name\n              }\n            }\n          }\n        `,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getAllAttributes;\n        if (!data.status) return;\n        setAttributes({ data: data.data, isLoading: false });\n      });\n\n    // 3.load Availability\n    apolloClient\n      .query({\n        query: utilityQuery.GET_ALL_AVAILABILITY,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getAllProductAvailabilityStatus;\n        if (!data.status) return;\n        setAvailability({ data: data.data, isLoading: false });\n      });\n\n    // 4.load Conditions\n    apolloClient\n      .query({\n        query: utilityQuery.GET_ALL_CONDITIONS,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getAllProductCondition;\n        if (!data.status) return;\n        setConditions({ data: data.data, isLoading: false });\n      });\n\n  }, []);\n\n\n  const searchProductAdmin = () => {\n    setProducts(s => ({ ...s, isLoading: true }));\n    // return\n    apolloClient\n      .query({\n        query: productQuery.GET_PRODUCT_LIST,\n        variables: {\n          query: {\n            searchQuery: filterDate.searchQuery ?? '',\n            availability: filterDate.availability.length ? filterDate.availability : null,\n            attribute: filterDate.attributes.length ? filterDate.attributes : null,\n            category: filterDate.categories.length ? filterDate.categories : null,\n            condition: filterDate.condition.length ? filterDate.condition : null,\n            productRep: filterDate.productrep.length ? filterDate.productrep : null,\n            productEntryStartDate: filterDate.startDate ?? '',\n            productEntryEndDate: filterDate.endDate ?? '',\n            updatedStartDate: filterDate.updatedStartDate ?? '',\n            updatedEndDate: filterDate.updatedEndDate ?? '',\n            minPrice: parseFloat(filterDate.minPrice) ?? null,\n            maxPrice: parseFloat(filterDate.maxPrice) ?? null\n          }\n        },\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n        fetchPolicy: 'cache-first',\n      })\n      .then(res => {\n        const data = res?.data?.getProductList;\n\n        if (!data?.status) return;\n        setProducts(data);\n      })\n      .catch(err => {\n        setProducts(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setProducts(s => ({ ...s, isLoading: false }));\n        setSearchButton(!searchButton)\n      });\n  }\n\n  const handleStatusChange = (record, checked) => {\n    apolloClient\n      .mutate({\n        mutation: productMutation.UPDATE_PRODUCT,\n        variables: { data: { prod_id: record.id, prod_status: checked } },\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.updateProduct;\n        if (!data.status) return toast.error(data.message);\n        toast.success(`${record.prod_sku} status updated.`);\n      })\n      .catch(err => {\n        return toast.error('Something Went wrong !!');\n      });\n  };\n  const handleIsSaleStatusChange = (record, checked) => {\n    apolloClient\n      .mutate({\n        mutation: productMutation.UPDATE_PRODUCT,\n        variables: { data: { prod_id: record.id, is_sale: checked } },\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.updateProduct;\n        if (!data.status) return toast.error(data.message);\n        toast.success(`${record.prod_sku} status updated.`);\n      })\n      .catch(err => {\n        return toast.error('Something Went wrong !!');\n      });\n  };\n\n  const columns = [\n    {\n      title: 'ID',\n      dataIndex: 'id',\n      key: 'id',\n      width: 70,\n      // width: \"70%\",\n      ellipsis: true,\n      sorter: (a, b) => (a.id.toUpperCase() > b.id.toUpperCase() ? 1 : -1),\n    },\n    {\n      title: 'Logo',\n      dataIndex: 'id',\n      key: 'id',\n      width: 70,\n      render: (text, record) => (\n        <LazyLoadImage\n          effect=\"blur\"\n          width=\"40\"\n          src={renderImage(record.id, record.prod_thumbnail, 'product/image/thumbnail', '128x128')}\n          onError={errorImageSrc}\n          alt={record.id}\n        />\n      ),\n    },\n\n    {\n      title: 'Product Name',\n      dataIndex: 'prod_name',\n      key: 'prod_name',\n      ellipsis: true,\n      sorter: (a, b) => (a.prod_name.toUpperCase() > b.prod_name.toUpperCase() ? 1 : -1),\n    },\n    {\n      title: 'Product SKU',\n      dataIndex: 'prod_sku',\n      width: 150,\n      key: 'prod_sku',\n      ellipsis: true,\n      sorter: (a, b) => (a.prod_sku.toUpperCase() > b.prod_sku.toUpperCase() ? 1 : -1),\n    },\n    {\n      title: 'Part NO',\n      dataIndex: 'prod_partnum',\n      width: 150,\n      key: 'prod_partnum',\n      ellipsis: true,\n      sorter: (a, b) => (a.prod_partnum.toUpperCase() > b.prod_partnum.toUpperCase() ? 1 : -1),\n    },\n    // {\n    //   title: 'Regular Price',\n    //   dataIndex: 'prod_regular_price',\n    //   key: 'prod_regular_price',\n    //   ellipsis: true,\n    //   align: 'center',\n    //   sorter: (a, b) => (a.prod_regular_price > b.prod_regular_price ? 1 : -1),\n    // },\n    // {\n    //   title: 'Sales Price',\n    //   dataIndex: 'prod_sale_price',\n    //   key: 'prod_sale_price',\n    //   ellipsis: true,\n    //   align: 'center',\n    //   sorter: (a, b) => (a.prod_sale_price > b.prod_sale_price ? 1 : -1),\n    // },\n    {\n      title: 'Status',\n      dataIndex: 'prod_status',\n      key: 'prod_status',\n      width: 110,\n      align: 'middle',\n      sorter: (a, b) => (a.prod_status === b.prod_status ? 0 : a.prod_status ? -1 : 1),\n      filters: [\n        {\n          text: 'Active',\n          value: true,\n        },\n        {\n          text: 'Inactive',\n          value: false,\n        },\n      ],\n      onFilter: (value, record) => record.prod_status === value,\n      render: (value, record) => (\n        <Switch defaultChecked={value} title=\"Status\" onChange={checked => handleStatusChange(record, checked)} />\n      ),\n    },\n    {\n      title: 'On Sale',\n      dataIndex: 'is_sale',\n      key: 'is_sale',\n      align: 'center',\n      width: 110,\n      sorter: (a, b) => (a.is_sale === b.is_sale ? 0 : a.is_sale ? -1 : 1),\n      filters: [\n        {\n          text: 'Active',\n          value: true,\n        },\n        {\n          text: 'Inactive',\n          value: false,\n        },\n      ],\n      onFilter: (value, record) => record.is_sale === value,\n      render: (value, record) => (\n        <Switch\n          defaultChecked={value}\n          title=\"Is Sale\"\n          onChange={checked => handleIsSaleStatusChange(record, checked)}\n        />\n      ),\n    },\n    {\n      title: 'Date Added',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      width: 120,\n      align: 'center',\n      sorter: (a, b) => (a.createdAt === b.createdAt ? 0 : a.createdAt ? -1 : 1),\n      render: (text, record) => (\n        <span className={'status-text'}>{<Moment format=\"DD-MMM-YYYY\">{parseInt(text)}</Moment>}</span>\n      ),\n    },\n    {\n      title: 'Date Updated',\n      dataIndex: 'updatedAt',\n      key: 'updatedAt',\n      width: 120,\n      align: 'center',\n      sorter: (a, b) => (a.updatedAt === b.updatedAt ? 0 : a.updatedAt ? -1 : 1),\n      render: (text, record) => (\n        <span className={'status-text'}>{<Moment format=\"DD-MMM-YYYY\">{parseInt(text)}</Moment>}</span>\n      )\n    },\n    {\n      title: 'Action',\n      dataIndex: 'action',\n      width: 120,\n      align: 'center',\n      render: (text, record) => (\n        <>\n          <Link to={`/admin/products/view?id=${record.id}`}>\n            <FontAwesome name=\"eye\" style={{ margin: '.5em 1em', color: 'rgb(46, 204, 113)' }} />\n          </Link>\n          <Link to={`/admin/products/edit?id=${record.id}`}>\n            {/* <Button size=\"default\" type=\"white\" title='Edit'> */}\n            <FontAwesome name=\"edit\" style={{ margin: '.5em 1em', color: '#5F63F2' }} />\n            {/* </Button> */}\n          </Link>\n        </>\n      ),\n      key: 'last_name',\n    },\n  ];\n\n\n  const onDateRangeChange = dateRange => {\n    if (dateRange) {\n      setFilterDate(s => ({ ...s, startDate: dateRange[0]._d ?? '', endDate: dateRange[1]._d ?? '' }))\n      setChangeDateRange(returnMomentDateRange(dateRange[0], dateRange[1]));\n    } else {\n      setChangeDateRange(null);\n    }\n  };\n\n  const onDateUpdatedRangeChange = updatedDateRange => {\n    if (updatedDateRange) {\n      setFilterDate(s => ({ ...s, updatedStartDate: updatedDateRange[0]._d ?? '', updatedEndDate: updatedDateRange[1]._d ?? '' }))\n      setChangeUpdatedDateRange(returnMomentDateRange(updatedDateRange[0], updatedDateRange[1]));\n    } else {\n      setChangeUpdatedDateRange(null);\n    }\n  };\n\n  const returnMomentDateRange = (start, finish) => {\n    return [moment(start, \"YYYY-MM-DD\"), moment(finish, \"YYYY-MM-DD\")];\n  };\n\n\n\n  useEffect(() => {\n    if (checkPoint) {\n      if (filterDate.availability.length > 0 ||\n        filterDate.categories.length > 0 ||\n        filterDate.condition.length > 0 ||\n        filterDate.attributes.length > 0 ||\n        filterDate.searchQuery !== '' ||\n        filterDate.endDate !== '' ||\n        filterDate.startDate !== '' ||\n        filterDate.updatedStartDate !== '' ||\n        filterDate.updatedStartDate !== '' ||\n        filterDate.minPrice !== '' ||\n        filterDate.maxPrice !== '' ||\n        filterDate.productrep.length > 0) {\n        setSearchDisable(false)\n      } else {\n        setSearchDisable(true)\n      }\n    }\n    checkPoint = true;\n\n    //////////////////////////////////\n    apolloClient\n      .query({\n        query: authQuery.GET_ALL_STAFF,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getAllStaff;\n        setRepresentative(data)\n      })\n      .catch(err => {\n        setRepresentative(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setRepresentative(s => ({ ...s, loading: false }));\n      });\n\n    if (permissionCheckForAllCondition) {\n      setViewAllFilter(true);\n    }\n    permissionCheckForAllCondition = false\n\n  }, [filterDate]);\n\n\n\n\n  return (\n    <>\n      <PageHeader\n        title=\"Products\"\n        buttons={[\n          <div key=\"1\" className=\"page-header-actions\">\n            <Button size=\"small\" type=\"white\" onClick={() => setIsFilter(state => !state)}>\n              <FeatherIcon icon=\"filter\" />\n              Filter\n            </Button>\n            <Button size=\"small\" type=\"white\" onClick={() => {\n              setChangeDateRange(null)\n              setChangeUpdatedDateRange(null)\n              setSearchDisable(true)\n              setFilterDate({\n                availability: [],\n                categories: [],\n                condition: [],\n                attributes: [],\n                productrep: [],\n                startDate: '',\n                endDate: '',\n                minPrice: '',\n                maxPrice: '',\n                searchQuery: '',\n                updatedEndDate: '',\n                updatedStartDate: ''\n              })\n            }}>\n              <RetweetOutlined />\n              Reset Filter\n            </Button>\n            <Link to=\"/admin/products/add\">\n              <Button size=\"small\" title=\"Add Product\" type=\"primary\">\n                <FeatherIcon icon=\"file-plus\" />\n              </Button>\n            </Link>\n          </div>,\n        ]}\n      />\n      <Main>\n        <Row gutter={25}>\n          <Col sm={24} xs={24}>\n            <Cards headless>\n              {products.isLoading ? (\n                <div className=\"spin\">\n                  <Spin />\n                </div>\n              ) : (\n                <>\n                  <Row gutter={25}>\n                    <Col span={15}>\n                      <Input\n                        placeholder=\"Search Products...\"\n                        prefix={<SearchOutlined />}\n                        value={filterDate?.searchQuery}\n                        onChange={e => {\n                          e.persist()\n                          const value = e.target.value;\n                          setFilterDate(s => ({ ...s, searchQuery: value }));\n                        }}\n                      />\n                    </Col>\n                    <Col span={9}>\n                      <Button size=\"large\" disabled={searchDisable} type=\"primary\" onClick={searchProductAdmin}>\n                        Search\n                      </Button>\n                    </Col>\n                  </Row>\n                  <br />\n                  <br />\n\n                  {isFilter && (\n                    <div style={{ marginBottom: '2.5em' }}>\n                      <Row gutter={16}>\n                        <Col span={8}>\n                          Availability: <br />\n                          <Select\n                            style={{ width: '100%' }}\n                            placeholder=\"Select status\"\n                            size=\"middle\"\n                            mode=\"multiple\"\n                            value={filterDate?.availability}\n                            onDeselect={(val) => setFilterDate(prev => ({ ...prev, availability: prev.availability.filter(item => item !== val) }))}\n                            onSelect={val => {\n                              setFilterDate(s => ({ ...s, availability: filterDate.availability.concat(parseInt(val)) }));\n                            }}\n                            options={availability.data.map(item => ({\n                              label: item.name,\n                              value: item.id,\n                            }))}\n                          />\n                        </Col>\n                        <Col span={8}>\n                          Category: <br />\n                          <Select\n                            style={{ width: '100%' }}\n                            placeholder={categories.isLoading ? 'Loading..' : 'Select category'}\n                            size=\"middle\"\n                            mode=\"multiple\"\n                            optionFilterProp=\"label\"\n                            value={filterDate?.categories}\n                            onDeselect={(val) => setFilterDate(prev => ({ ...prev, categories: prev.categories.filter(item => item !== val) }))}\n                            onSelect={val => {\n                              setFilterDate(s => ({ ...s, categories: filterDate.categories.concat(parseInt(val)) }));\n                            }}\n                            options={categories.data.map(item => ({\n                              label: item.cat_name,\n                              value: item.id,\n                            }))}\n                          />\n                        </Col>\n\n                        <Col span={8}>\n                          Date Added: <br />\n                          <RangePicker\n                            style={{ height: '40px', width: '100%' }}\n                            size=\"small\"\n                            allowClear={true}\n                            picker=\"date\"\n                            value={dateRange !== \"\" ? dateRange : \"\"}\n                            onChange={onDateRangeChange}\n                          />\n                        </Col>\n                      </Row>\n                      <Row gutter={16} style={{ marginTop: '.5em' }}>\n                        <Col span={8}>\n                          Condition: <br />\n                          <Select\n                            style={{ width: '100%' }}\n                            placeholder=\"Select Condition\"\n                            size=\"middle\"\n                            mode=\"multiple\"\n                            value={filterDate?.condition}\n                            onDeselect={(val) => setFilterDate(prev => ({ ...prev, condition: prev.condition.filter(item => item !== val) }))}\n                            onSelect={val => {\n                              setFilterDate(s => ({ ...s, condition: filterDate.condition.concat(parseInt(val)) }));\n                            }}\n                            options={conditions.data.map(item => ({\n                              label: item.name,\n                              value: item.id,\n                            }))}\n                          />\n                        </Col>\n                        <Col span={8}>\n                          Attributes: <br />\n                          <Select\n                            style={{ width: '100%' }}\n                            placeholder={attributes.isLoading ? 'Loading..' : 'Select Attribute'}\n                            size=\"middle\"\n                            mode=\"multiple\"\n                            value={filterDate?.attributes}\n                            onDeselect={(val) => setFilterDate(prev => ({ ...prev, attributes: prev.attributes.filter(item => item !== val) }))}\n                            onSelect={val => {\n                              setFilterDate(s => ({ ...s, attributes: filterDate.attributes.concat(parseInt(val)) }));\n                            }}\n                            options={attributes.data.map(item => ({\n                              label: item.attribute_name,\n                              value: item.id,\n                            }))}\n                          />\n                        </Col>\n\n                        <Col span={8}>\n                          Price: <br />\n                          <Input.Group compact size=\"default\">\n                            <Input\n                              type=\"number\"\n                              placeholder=\"Min\"\n                              style={{ width: '50%', height: '40px' }}\n                              value={filterDate?.minPrice ?? ''}\n                              onChange={e => {\n                                e.persist()\n                                setFilterDate(s => ({ ...s, minPrice: e?.target?.value }));\n                              }}\n                            />\n                            <Input\n                              type=\"number\"\n                              placeholder=\"Max\"\n                              style={{ width: '50%', height: '40px' }}\n                              value={filterDate?.maxPrice ?? ''}\n                              onChange={e => {\n                                e.persist()\n                                setFilterDate(s => ({ ...s, maxPrice: e?.target?.value }));\n                              }}\n                            />\n                          </Input.Group>\n                        </Col>\n                      </Row>\n                      {viewallfilter && (\n                        <Row gutter={16} style={{ marginTop: '.5em' }}>\n                          <Col span={8}>\n                            Product Rep: <br />\n                            <Select\n                              style={{ width: '100%' }}\n                              size=\"middle\"\n                              mode=\"multiple\"\n                              value={filterDate?.productrep}\n                              onDeselect={(val) => setFilterDate(prev => ({ ...prev, productrep: prev.productrep.filter(item => item !== val) }))}\n                              placeholder={representative.loading ? 'Loading...' : 'Select a Product Representative'}\n                              options={representative?.data?.map(item => ({\n                                label: item.first_name + ' ' + item.last_name,\n                                value: item.id,\n                              }))}\n                              onSelect={val => {\n                                setFilterDate(s => ({ ...s, productrep: filterDate.productrep.concat(parseInt(val)) }));\n                              }}\n                            />\n                          </Col>\n                          <Col span={8}>\n                            Date Updated: <br />\n                            <RangePicker\n                              style={{ height: '40px', width: '100%' }}\n                              size=\"small\"\n                              allowClear={true}\n                              picker=\"date\"\n                              value={updatedDateRange !== \"\" ? updatedDateRange : \"\"}\n                              onChange={onDateUpdatedRangeChange}\n                            />\n                          </Col>\n\n                          <Col span={8}>\n                            Quantity: <br />\n                            <Input.Group compact size=\"default\">\n                              <Input\n                                type=\"number\"\n                                placeholder=\"Min Amount\"\n                                style={{ width: '50%', height: '40px' }}\n                              // value={filterDate?.minPrice ?? ''}\n                              // onChange={e => {\n                              //   e.persist()\n                              //   setFilterDate(s => ({ ...s, minPrice: e?.target?.value }));\n                              // }}\n                              />\n                              <Input\n                                type=\"number\"\n                                placeholder=\"Max Amount\"\n                                style={{ width: '50%', height: '40px' }}\n                              // value={filterDate?.maxPrice ?? ''}\n                              // onChange={e => {\n                              //   e.persist()\n                              //   setFilterDate(s => ({ ...s, maxPrice: e?.target?.value }));\n                              // }}\n                              />\n                            </Input.Group>\n                          </Col>\n                        </Row>\n                      )}\n\n                    </div>\n                  )}\n\n                  <span className={'psp_list'}>\n                    <Table\n                      className=\"table-responsive\"\n                      columns={viewallfilter ? columns : columns.filter(col => col.dataIndex !== 'updatedAt')}\n                      rowKey={'id'}\n                      size=\"small\"\n                      dataSource={products.data ? products.data : []}\n                      rowClassName={(record, index) => (index % 2 == 0 ? '' : 'altTableClass')}\n                      // pagination={false}\n                      pagination={{\n                        defaultPageSize: config.PRODUCTS_PER_PAGE,\n                        total: products.data ? products.data.length : 0,\n                        showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n                      }}\n                    />\n                  </span>\n                </>\n              )}\n            </Cards>\n          </Col>\n        </Row>\n      </Main>\n    </>\n  );\n};\n\nexport default Products;"],"sourceRoot":""}