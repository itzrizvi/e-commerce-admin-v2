{"version":3,"sources":["container/vendors/ListVendor.js"],"names":["ListVendor","viewPermission","useState","data","isLoading","vendors","setVendors","filteredVendors","setFilteredVendors","searchText","setSearchText","columns","title","dataIndex","key","ellipsis","sorter","a","b","company_name","toUpperCase","email","phone_number","EIN_no","FAX_no","description","width","align","render","text","record","to","id","name","style","margin","useEffect","apolloClient","query","vendorQuery","GET_ALL_VENDOR","context","headers","TENANTID","process","Authorization","Cookies","get","then","res","getAllVendor","status","s","error","catch","err","finally","buttons","className","size","type","icon","gutter","sm","xs","headless","placeholder","prefix","onChange","e","value","target","filter","group","customer_group_name","customergroup_description","customergroup_sortorder","toLowerCase","includes","rowKey","dataSource","rowClassName","index","pagination","defaultPageSize","config","VENDOR_PER_PAGE","total","length","showTotal","range"],"mappings":"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","file":"static/js/77.4b482b05.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Spin, Input, Table, Switch } from 'antd';\nimport FeatherIcon from 'feather-icons-react';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Button } from '../../components/buttons/buttons';\nimport { Link } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport { SearchOutlined } from '@ant-design/icons';\nimport config from '../../config/config';\nimport apolloClient, { customerMutation, vendorQuery } from '../../utility/apollo';\nimport Cookies from 'js-cookie';\nimport { viewPermission } from '../../utility/utility';\n\nconst ListVendor = () => {\n  viewPermission('vendor');\n\n  const [vendors, setVendors] = useState({ data: [], isLoading: true });\n\n  const [filteredVendors, setFilteredVendors] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n  const columns = [\n    {\n      title: 'Company Name',\n      dataIndex: 'company_name',\n      key: 'company_name',\n      ellipsis: true,\n      sorter: (a, b) => (a.company_name.toUpperCase() > b.company_name.toUpperCase() ? 1 : -1),\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      ellipsis: true,\n      sorter: (a, b) => (a.email.toUpperCase() > b.email.toUpperCase() ? 1 : -1),\n    },\n    {\n      title: 'Phone',\n      dataIndex: 'phone_number',\n      key: 'phone_number',\n      // width: 200,\n      ellipsis: true,\n      sorter: (a, b) => (a.phone_number.toUpperCase() > b.phone_number.toUpperCase() ? 1 : -1),\n    },\n    {\n      title: 'EIN',\n      dataIndex: 'EIN_no',\n      key: 'EIN_no',\n      ellipsis: true,\n      sorter: (a, b) => (a.EIN_no.toUpperCase() > b.EIN_no.toUpperCase() ? 1 : -1),\n    },\n    {\n      title: 'Fax',\n      dataIndex: 'FAX_no',\n      key: 'FAX_no',\n      ellipsis: true,\n      sorter: (a, b) => (a.FAX_no.toUpperCase() > b.FAX_no.toUpperCase() ? 1 : -1),\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n      // width: 200,\n      ellipsis: true,\n      sorter: (a, b) => (a.description.toUpperCase() > b.description.toUpperCase() ? 1 : -1),\n    },\n    {\n      title: 'Action',\n      dataIndex: 'action',\n      width: 70,\n      align: 'right',\n      render: (text, record) => (\n        <>\n          <Link to={`/admin/vendor/edit/${record.id}`}>\n            <FontAwesome name=\"edit\" style={{ margin: '.5em 1em' }} />\n          </Link>\n        </>\n      ),\n      key: 'last_name',\n    },\n  ];\n\n  // LOAD CUSTOMER GROUPS\n  useEffect(() => {\n    // return;\n    apolloClient\n      .query({\n        query: vendorQuery.GET_ALL_VENDOR,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getAllVendor;\n\n        if (!data?.status) return;\n        setVendors(s => ({ ...s, data: data?.data, error: '' }));\n      })\n      .catch(err => {\n        setVendors(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setVendors(s => ({ ...s, isLoading: false }));\n      });\n  }, []);\n\n  const onChangeSearch = e => {\n    const value = e.target.value;\n    setSearchText(value);\n    setFilteredVendors(\n      vendors.data.filter(group =>\n        (group?.customer_group_name + group?.customergroup_description + group.customergroup_sortorder)\n          .toLowerCase()\n          .includes(value.toLowerCase()),\n      ),\n    );\n  };\n\n  return (\n    <>\n      <PageHeader\n        title=\"Vendors\"\n        buttons={[\n          <div key=\"1\" className=\"page-header-actions\">\n            <Link to=\"/admin/vendor/add\">\n              <Button size=\"small\" title=\"Add Vendors\" type=\"primary\">\n                <FeatherIcon icon=\"plus\" />\n              </Button>\n            </Link>\n          </div>,\n        ]}\n      />\n      <Main>\n        <Row gutter={25}>\n          <Col sm={24} xs={24}>\n            <Cards headless>\n              {vendors.isLoading ? (\n                <div className=\"spin\">\n                  <Spin />\n                </div>\n              ) : (\n                <>\n                  <Input placeholder=\"Search Vendor...\" prefix={<SearchOutlined />} onChange={onChangeSearch} />\n                  <br />\n                  <br />\n\n                  <span className={'psp_list'}>\n                    <Table\n                      className=\"table-responsive\"\n                      columns={columns}\n                      rowKey={'g_s'}\n                      size=\"small\"\n                      dataSource={searchText ? filteredVendors : vendors.data}\n                      rowClassName={(record, index) => (index % 2 === 0 ? '' : 'altTableClass')}\n                      // pagination={false}\n                      pagination={{\n                        defaultPageSize: config.VENDOR_PER_PAGE,\n                        total: searchText ? filteredVendors.length : vendors.data.length,\n                        showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n                      }}\n                    />\n                  </span>\n                </>\n              )}\n            </Cards>\n          </Col>\n        </Row>\n      </Main>\n    </>\n  );\n};\n\nexport default ListVendor;\n"],"sourceRoot":""}