{"version":3,"sources":["container/categories/ListCategories.js"],"names":["ListCategories","viewPermission","useState","categories","setCategories","data","loading","categoriesData","setCategoriesData","filteredCategoryData","setFilteredCategoryData","searchText","setSearchText","useEffect","apolloClient","query","productQuery","GET_ALL_CATEGORIES","context","headers","TENANTID","process","then","res","getAllCategories","status","catch","err","length","arrData","forEach","item","parent","cat_name","cat_sort_order","push","id","cat_des","cat_description","cat_isFeatured","is_featured","cat_status","img","image","subcategories","subCat","sub","subsubcategories","subSubCat","subSub","columns","title","dataIndex","key","width","ellipsis","sorter","a","b","toUpperCase","render","text","record","effect","src","renderImage","onError","errorImageSrc","onL","alt","align","filters","value","onFilter","defaultChecked","onChange","e","checked","variables","cat_id","mutate","mutation","productMutation","UPDATE_CATEGORY","Authorization","Cookies","get","updateCategory","toast","error","message","success","console","log","handleIsFeaturesChange","target","handleStatusChange","to","name","style","margin","buttons","className","size","type","icon","gutter","sm","xs","headless","placeholder","prefix","filter","category","toLowerCase","includes","rowKey","dataSource","rowClassName","index","pagination","defaultPageSize","config","CATEGORY_PER_PAGE","total","showTotal","range"],"mappings":"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","file":"static/js/53.d955745e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Spin, Input, Table, Switch, Checkbox } from 'antd';\nimport FeatherIcon from 'feather-icons-react';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Button } from '../../components/buttons/buttons';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport apolloClient, { productMutation, productQuery } from '../../utility/apollo';\nimport config from '../../config/config';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { errorImageSrc, renderImage } from '../../utility/images';\nimport Cookies from 'js-cookie';\nimport { toast } from 'react-toastify';\nimport { viewPermission } from '../../utility/utility';\n\n\nconst ListCategories = () => {\n    viewPermission('category');\n    const [categories, setCategories] = useState([])\n    const [categoriesData, setCategoriesData] = useState({ data: [], loading: true })\n    const [filteredCategoryData, setFilteredCategoryData] = useState([])\n\n\n    const [isFilter, setIsFilter] = useState(false)\n    const [searchText, setSearchText] = useState(\"\")\n    const [isFeatured, setIsFeatured] = useState(false)\n\n\n    // Load category\n    useEffect(() => {\n\n        apolloClient.query({\n            query: productQuery.GET_ALL_CATEGORIES,\n            context: {\n                headers: {\n                    TENANTID: process.env.REACT_APP_TENANTID,\n                }\n            }\n        }).then(res => {\n            const data = res?.data?.getAllCategories\n            if (!data.status) return;\n            setCategories(data.categories)\n            // console.log(\"list Category UseEffect:\\n\", data.categories);\n\n        }).catch(err => {\n\n        })\n\n    }, []);\n\n    // organize category\n    useEffect(() => {\n        if (!categories.length) return\n        let arrData = []\n\n        categories.forEach(item => {\n\n            const parent = item.cat_name\n            const cat_sort_order = item.cat_sort_order\n\n            arrData.push({ cat_name: parent, id: item.id, cat_sort_order, cat_des: item.cat_description, cat_isFeatured: item.is_featured, cat_status: item.cat_status, img: item.image })\n            if (item.subcategories) {\n                item.subcategories.forEach(subCat => {\n                    const sub = subCat.cat_name\n                    arrData.push({ cat_name: `${parent} > ${sub}`, id: subCat.id, cat_des: subCat.cat_description, cat_isFeatured: subCat.is_featured, cat_status: subCat.cat_status, img: subCat.image })\n                    if (subCat.subsubcategories) {\n                        subCat.subsubcategories.forEach(subSubCat => {\n                            const subSub = subSubCat.cat_name\n                            arrData.push({ cat_name: `${parent} > ${sub} > ${subSub}`, id: subSubCat.id, cat_des: subSubCat.cat_description, cat_isFeatured: subSubCat.is_featured, cat_status: subSubCat.cat_status, img: subSubCat.image })\n                        })\n                    }\n                })\n\n            }\n        })\n\n        setCategoriesData({ data: arrData, loading: false })\n    }, [categories])\n\n    const handleStatusChange = (record, checked) => {\n        const variables = { data: { cat_id: record.id, cat_status: checked } }\n\n        apolloClient.mutate({\n            mutation: productMutation.UPDATE_CATEGORY,\n            variables,\n            context: {\n                headers: {\n                    TENANTID: process.env.REACT_APP_TENANTID,\n                    Authorization: Cookies.get('psp_t')\n                }\n            }\n        }).then(res => {\n            const data = res?.data?.updateCategory\n            if (!data?.status) return toast.error(data?.message)\n            toast.success(`${record.cat_name} Category Status updated successfully.`)\n        }).catch(err => {\n            console.log(\"🚀 ~ file: AllAdmins.js ~ line 33 ~ handleStatusChange ~ err\", err);\n            toast.error(`Something went wrong!!`)\n        })\n    }\n    const handleIsFeaturesChange = (record, checked) => {\n        const variables = { data: { cat_id: record.id, is_featured: checked } }\n\n        apolloClient.mutate({\n            mutation: productMutation.UPDATE_CATEGORY,\n            variables,\n            context: {\n                headers: {\n                    TENANTID: process.env.REACT_APP_TENANTID,\n                    Authorization: Cookies.get('psp_t')\n                }\n            }\n        }).then(res => {\n            const data = res?.data?.updateCategory\n            if (!data?.status) return toast.error(data?.message)\n            toast.success(`${record.cat_name} Category isFeatured Status updated.`)\n        }).catch(err => {\n            console.log(\"🚀 ~ file: AllAdmins.js ~ line 33 ~ handleStatusChange ~ err\", err);\n            toast.error(`Something went wrong!!`)\n        })\n    }\n\n    const columns = [\n        {\n            title: 'ID',\n            dataIndex: 'id',\n            key: 'id',\n            width: 50,\n            ellipsis: true,\n            sorter: (a, b) => a.id.toUpperCase() > b.id.toUpperCase() ? 1 : -1,\n        },\n        {\n            title: 'Logo',\n            dataIndex: 'id',\n            key: 'id',\n            width: 70,\n            // render: (text, record) => (<img src={require('../../static/img/avatar/NoPath (3).png')} alt=\"\" />),\n            render: (text, record) => (<LazyLoadImage effect=\"blur\" width=\"40\" src={renderImage(record.id, record.img, 'category', '128x128')} onError={errorImageSrc} onL alt={record.id} />)\n        },\n        {\n            title: 'Category Name',\n            dataIndex: 'cat_name',\n            ellipsis: true,\n            key: 'cat_name',\n            sorter: (a, b) => a.cat_name.toUpperCase() > b.cat_name.toUpperCase() ? 1 : -1,\n        },\n        // {\n        //     title: 'Description',\n        //     dataIndex: 'cat_des',\n        //     key: 'cat_des',\n        //     ellipsis: true,\n        //     sorter: (a, b) => a.cat_des.toUpperCase() > b.cat_des.toUpperCase() ? 1 : -1,\n        // },\n        {\n            title: 'Featured',\n            dataIndex: 'cat_isFeatured',\n            width: 110,\n            align: 'center',\n            key: 'cat_isFeatured',\n            sorter: (a, b) => (a.cat_isFeatured === b.cat_isFeatured) ? 0 : a.cat_isFeatured ? -1 : 1,\n            filters: [\n                {\n                    text: 'Featured',\n                    value: true,\n                },\n                {\n                    text: 'Not Featured',\n                    value: false,\n                }\n            ],\n            onFilter: (value, record) => record.cat_isFeatured === value,\n            render: (value, record) => (\n                <Checkbox\n                    defaultChecked={value}\n                    onChange={e => handleIsFeaturesChange(record, e.target.checked)}\n                />\n            )\n        },\n        {\n            title: 'Status',\n            dataIndex: 'cat_status',\n            width: 90,\n            key: 'cat_status',\n            sorter: (a, b) => (a.status === b.status) ? 0 : a.status ? -1 : 1,\n            filters: [\n                {\n                    text: 'Active',\n                    value: true,\n                },\n                {\n                    text: 'Inactive',\n                    value: false,\n                }\n            ],\n            onFilter: (value, record) => record.cat_status === value,\n            render: (value, record) => (\n                <Switch\n                    defaultChecked={value}\n                    title='Status'\n                    onChange={checked => handleStatusChange(record, checked)}\n                />\n            )\n        },\n        {\n            title: 'Action',\n            dataIndex: 'action',\n            width: 70,\n            align: 'right',\n            render: (text, record) => (\n                <>\n                    <Link to={`/admin/categories/add?id=${record.id}`}>\n                        {/* <Button size=\"default\" type=\"white\" title='Edit'> */}\n                        <FontAwesome name=\"edit\" style={{ margin: \".5em 1em\" }} />\n                        {/* </Button> */}\n                    </Link>\n                </>\n            ),\n            key: 'last_name',\n        },\n    ]\n\n\n    const onChangeSearch = e => {\n        const value = e.target.value\n        console.log(\"🚀 ~ file: ListCategories.js ~ line 216 ~ onChangeSearch ~ value\", value);\n        setSearchText(value)\n        setFilteredCategoryData(categoriesData.data.filter(category => (category?.cat_name + category?.cat_des + category?.id + category?.cat_sort_order).toLowerCase().includes(value.toLowerCase())))\n    }\n\n    // Search & filter\n    // useEffect(() => { });\n\n\n    return (\n        <>\n            <PageHeader\n                title=\"Categories\"\n                buttons={[\n                    <div key=\"1\" className=\"page-header-actions\">\n                        {/* <Button\n                            size=\"small\"\n                            onClick={() => setIsFilter(state => !state)}\n                            outlined\n                            type=\"white\"\n                        >\n                            <FeatherIcon icon=\"filter\" />\n                            filter\n                        </Button> */}\n                        <Link to=\"/admin/categories/add\">\n                            <Button size=\"small\" title=\"Add Category\" type=\"primary\">\n                                <FeatherIcon icon=\"file-plus\" />\n                            </Button>\n                        </Link>\n                    </div>\n                ]}\n            />\n            <Main>\n                <Row gutter={25}>\n                    <Col sm={24} xs={24}>\n                        <Cards headless>\n\n                            {/* TEST CODES */}\n                            {/* <p>{JSON.stringify(categoriesData.data.map(item => item.cat_name))}</p> */}\n\n                            {categoriesData.loading ?\n                                <div className=\"spin\">\n                                    <Spin />\n                                </div>\n                                :\n\n                                <>\n                                    <Input\n                                        placeholder=\"Search Categories...\"\n                                        prefix={<SearchOutlined />}\n                                        onChange={onChangeSearch}\n                                    /> <br /> <br />\n\n                                    {/* {isFilter &&\n                                        <div style={{\n                                            marginBottom: '1.5em',\n                                            display: 'flex',\n                                            gap: \"2em\"\n                                        }}\n                                        >\n                                            <Checkbox >Is Featured</Checkbox>\n                                            <span>Status:  <Switch>Status</Switch>\n                                            </span>\n\n                                        </div>} */}\n\n                                    <span className={\"psp_list\"} >\n                                        <Table\n                                            className=\"table-responsive\"\n                                            columns={columns}\n                                            rowKey={'id'}\n                                            size=\"small\"\n                                            // dataSource={categoriesData.data}\n                                            dataSource={searchText ? filteredCategoryData : categoriesData.data}\n                                            rowClassName={(record, index) => (index % 2 === 0 ? \"\" : \"altTableClass\")}\n                                            // pagination={false}\n                                            pagination={{\n                                                defaultPageSize: config.CATEGORY_PER_PAGE,\n                                                total: searchText ? filteredCategoryData.length : categoriesData.data.length,\n                                                showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n                                            }}\n                                        />\n                                    </span>\n                                </>\n                            }\n\n\n\n                        </Cards>\n                    </Col>\n                </Row>\n            </Main>\n        </>\n    );\n};\n\nexport default ListCategories;\n"],"sourceRoot":""}