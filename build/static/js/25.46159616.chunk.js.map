{"version":3,"sources":["container/brand/UpdateBrand.js","apollo/brand/index.js"],"names":["UpdateBrand","viewPermission","search","useLocation","params","queryString","parse","TextArea","history","useHistory","token","useSelector","state","auth","useState","isLoading","setIsLoading","loading","setLoading","brandStatus","setBrandStatus","image","setImage","thumbnail","setThumbnail","order","setOrder","category","setCategory","categories","setCategories","data","error","singleBrand","setSingleBrand","useForm","form","uploadButton","style","marginTop","useEffect","apolloClient","query","brandQuery","GET_CATEGORIES","context","headers","TENANTID","process","Authorization","then","res","getParentCategories","catch","err","console","log","GET_SINGLE_BRAND","variables","brand_id","parseInt","id","getSingleBrand","status","inputSelectedCategories","map","item","push","brand_status","renderImage","setFieldsValue","brand_name","brand_description","brand_sort_order","title","gutter","sm","xs","headless","textAlign","tip","width","name","onFinish","values","modify_category","forEach","val","cat_id","apolloUploadClient","mutate","mutation","BRAND_UPDATE","BRAND_UPDATE_WI","file","refetchQueries","GET_ALL_BRAND","updateBrand","toast","setTimeout","success","message","finally","onFinishFailed","errorInfo","labelCol","span","Item","rules","required","max","label","placeholder","defaultValue","rows","mode","onChange","e","optionLabelProp","Option","key","value","cat_name","className","checked","checkedChildren","unCheckedChildren","listType","showUploadList","beforeUpload","isJpg","type","isLt2M","size","URL","createObjectURL","fileList","src","onError","errorImageSrc","alt","display","justifyContent","htmlType","raised","to","marginLeft","gql","GET_ALL_BRAND_WITH_CATEGORY","BRAND_ADD","BRAND_ADD_WI"],"mappings":"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","file":"static/js/25.46159616.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Input, Switch, Select, Upload, InputNumber, Spin } from 'antd';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Button } from '../../components/buttons/buttons';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { brandQuery } from '../../apollo/brand';\nimport apolloClient, { apolloUploadClient } from '../../apollo';\nimport queryString from 'query-string';\nimport { errorImageSrc, renderImage } from '../../utility/images';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { viewPermission } from '../../utility/utility';\n\nconst UpdateBrand = () => {\n  viewPermission('manufacture');\n  const { search } = useLocation();\n  const params = queryString.parse(search);\n  const { TextArea } = Input;\n  const history = useHistory();\n  const token = useSelector(state => state.auth.token);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [brandStatus, setBrandStatus] = useState(true);\n  const [image, setImage] = useState('');\n  const [thumbnail, setThumbnail] = useState('');\n  const [order, setOrder] = useState(0);\n  const [category, setCategory] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [singleBrand, setSingleBrand] = useState({ data: {}, loading: true, error: '' });\n  const maxLength = 30;\n  const [form] = Form.useForm();\n\n  const handleSubmit = values => {\n    setIsLoading(true);\n    const modify_category = [];\n    category.forEach(val => {\n      modify_category.push({ cat_id: val });\n    });\n    const data = {\n      ...values,\n      brand_status: brandStatus,\n      brand_sort_order: order,\n      categories: modify_category,\n      brand_id: parseInt(params?.id),\n    };\n    // console.log(data);\n    apolloUploadClient\n      .mutate({\n        mutation: image ? brandQuery.BRAND_UPDATE : brandQuery.BRAND_UPDATE_WI,\n        variables: image ? { data, file: image } : { data },\n        refetchQueries: [\n          {\n            query: brandQuery.GET_ALL_BRAND,\n            context: {\n              headers: {\n                TENANTID: process.env.REACT_APP_TENANTID,\n                Authorization: token,\n              },\n            },\n          },\n          ['getAllBrands'],\n        ],\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: token,\n          },\n        },\n      })\n      .then(res => {\n        // console.log(res);\n        const data = res?.data?.updateBrand;\n        if (!data?.status) return toast.error('Something Went wrong !!');\n        setTimeout(() => {\n          history.push('/admin/brand/list');\n        }, 1000);\n        toast.success(data?.message);\n      })\n      .catch(err => {\n        toast.error('Something Went wrong !!');\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const beforeImageUpload = file => {\n    const isJpg = file.type === 'image/jpeg';\n    if (!isJpg) toast.error('You can only upload JPG file!');\n    const isLt2M = file.size / 1024 / 1024 < 1;\n    if (!isLt2M) toast.error('Image must smaller than 1MB!');\n\n    if (isJpg && isLt2M) {\n      setThumbnail(URL.createObjectURL(file));\n      setImage(file);\n    }\n\n    return false;\n  };\n\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{ marginTop: 8 }}> Upload </div>\n    </div>\n  );\n\n  useEffect(() => {\n    setLoading(true);\n    apolloClient\n      .query({\n        query: brandQuery.GET_CATEGORIES,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: token,\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getParentCategories?.categories;\n        setCategories(data);\n      })\n      .catch(err => {\n        setCategories([]);\n        console.log(err);\n      });\n    apolloClient\n      .query({\n        query: brandQuery.GET_SINGLE_BRAND,\n        variables: {\n          query: {\n            brand_id: parseInt(params?.id),\n          },\n        },\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: token,\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getSingleBrand;\n        if (!data.status) return;\n        setSingleBrand({ data: data?.data, loading: false, error: '' });\n        const inputSelectedCategories = [];\n        data?.data?.categories.map(item => {\n          inputSelectedCategories.push(item.id);\n        });\n        setCategory(inputSelectedCategories);\n        setLoading(false);\n        setBrandStatus(data?.data?.brand_status);\n        setThumbnail(renderImage(params?.id, data?.data?.image, 'brand', '', true));\n        form.setFieldsValue({\n          brand_name: data?.data?.brand_name,\n          brand_description: data?.data?.brand_description,\n        });\n        setOrder(data?.data?.brand_sort_order);\n      })\n      .catch(err => {\n        console.log(err);\n        setSingleBrand({ data: {}, loading: false, error: 'Something went worng' });\n      });\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        title={`Manage Manufacture | Edit Manufacture ${\n          singleBrand?.data?.brand_name ? `(${singleBrand?.data?.brand_name})` : ''\n        }`}\n      />\n      <Main>\n        <Row gutter={25}>\n          <Col sm={24} xs={24}>\n            <Cards headless>\n              {loading ? (\n                <div style={{ textAlign: 'center' }}>\n                  <Spin tip=\"processing...\" />\n                </div>\n              ) : (\n                <Form\n                  style={{ width: '100%' }}\n                  form={form}\n                  name=\"editBrand\"\n                  onFinish={handleSubmit}\n                  onFinishFailed={errorInfo => console.log('form error info:\\n', errorInfo)}\n                  labelCol={{ span: 4 }}\n                >\n                  <Form.Item\n                    rules={[{ required: true, max: maxLength, message: 'Please Enter Manufacture Name' }]}\n                    name=\"brand_name\"\n                    label=\"Name\"\n                  >\n                    <Input placeholder=\"Enter Manufacture Name\" defaultValue={singleBrand?.data?.brand_name} />\n                  </Form.Item>\n                  <Form.Item\n                    rules={[{ required: true, message: 'Please Enter Manufacture Description' }]}\n                    name=\"brand_description\"\n                    label=\"Description\"\n                  >\n                    <TextArea\n                      rows={4}\n                      placeholder=\"Enter Manufacture Description\"\n                      defaultValue={singleBrand?.data?.brand_description}\n                    />\n                  </Form.Item>\n\n                  <Form.Item label=\"Categories\">\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: '100%' }}\n                      placeholder=\"Select Categories\"\n                      defaultValue={category}\n                      onChange={e => setCategory(e)}\n                      optionLabelProp=\"label\"\n                    >\n                      {categories.map(val => {\n                        return (\n                          <Select.Option key={val.id} value={val.id} label={val.cat_name}>\n                            <div className=\"demo-option-label-item\">{val.cat_name}</div>\n                          </Select.Option>\n                        );\n                      })}\n                    </Select>\n                  </Form.Item>\n\n                  <Form.Item label=\"Sort Order\">\n                    <InputNumber\n                      defaultValue={singleBrand?.data?.brand_sort_order}\n                      onChange={setOrder}\n                      style={{ width: '100%' }}\n                    />\n                  </Form.Item>\n\n                  <Form.Item label=\"Status\">\n                    <Switch\n                      checked={brandStatus}\n                      onChange={checked => setBrandStatus(checked)}\n                      checkedChildren=\"ON\"\n                      unCheckedChildren=\"OFF\"\n                    />\n                  </Form.Item>\n\n                  <Form.Item label=\"Image\">\n                    <Upload\n                      name=\"avatar\"\n                      listType=\"picture-card\"\n                      className=\"avatar-uploader\"\n                      showUploadList={false}\n                      beforeUpload={beforeImageUpload}\n                      fileList={[]}\n                    >\n                      {thumbnail ? (\n                        <LazyLoadImage\n                          src={thumbnail}\n                          onError={errorImageSrc}\n                          alt=\"image\"\n                          style={{\n                            width: '100%',\n                          }}\n                        />\n                      ) : (\n                        uploadButton\n                      )}\n                    </Upload>\n                  </Form.Item>\n\n                  <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                    <Form.Item>\n                      <Button loading={isLoading} size=\"default\" htmlType=\"submit\" type=\"primary\" raised>\n                        {isLoading ? 'Processing' : 'Save'}\n                      </Button>\n                      <Link to=\"/admin/brand/list\">\n                        <Button style={{ marginLeft: 10 }} type=\"light\" size=\"default\">\n                          Cancel\n                        </Button>\n                      </Link>\n                    </Form.Item>\n                  </div>\n                </Form>\n              )}\n            </Cards>\n          </Col>\n        </Row>\n      </Main>\n    </>\n  );\n};\n\nexport default UpdateBrand;\n","import { gql } from \"@apollo/client\";\n\nexport const brandQuery = {\n  GET_ALL_BRAND: gql`\n  query getAllBrands {\n  getAllBrands {\n    message\n    status\n    data {\n      id\n      brand_name\n      brand_slug\n      brand_description\n      brand_status\n      image\n      brand_sort_order\n      createdAt\n    }\n  }\n}`,\n  GET_ALL_BRAND_WITH_CATEGORY: gql`\nquery getAllBrands {\n  getAllBrands {\n    message\n    status\n    data {\n      id\n      brand_name\n      brand_slug\n      brand_status\n      brand_description\n      image\n      createdAt\n      updatedAt\n      categories {\n        id\n        cat_name\n        cat_slug\n        cat_status\n        subcategories {\n          id\n          cat_name\n          cat_slug\n          cat_status\n          subsubcategories {\n            id\n            cat_name\n            cat_slug\n            cat_status\n          }\n        }\n      }\n    }\n  }\n}\n\n`,\n  GET_CATEGORIES: gql`\n  query getParentCategories {\n    getParentCategories {\n      message\n      status\n      categories {\n        id\n        cat_name\n      }\n    }\n  }\n`,\n  GET_SINGLE_BRAND: gql`\n  query getSingleBrand($query: GetSingleBrandInput){\n    getSingleBrand(query: $query) {\n      message\n      status\n      data {\n        brand_name\n        brand_description\n        brand_status\n        brand_sort_order\n        image\n        categories {\n          id\n          cat_name\n        }\n      }\n    }\n  }\n`,\n  BRAND_UPDATE: gql`\n  mutation updateBrand($data: UpdateBrandInput, $file:Upload){\n    updateBrand(data:$data, file: $file){\n      message\n      status\n    }\n  }`,\n  BRAND_UPDATE_WI: gql`\n  mutation updateBrand($data: UpdateBrandInput){\n    updateBrand(data:$data){\n      message\n      status\n    }\n  }`,\n  BRAND_ADD: gql`\n    mutation createBrand($data: BrandCreateInput, $file:Upload) {\n      createBrand(data: $data, file:$file) {\n        message\n        status\n      }\n    }`,\n  BRAND_ADD_WI: gql`\n      mutation createBrand($data: BrandCreateInput) {\n        createBrand(data: $data) {\n          message\n          status\n        }\n     }`\n}\n"],"sourceRoot":""}