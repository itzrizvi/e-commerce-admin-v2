{"version":3,"sources":["container/categories/AddCategory.js"],"names":["TextArea","Option","Dragger","AddCategory","viewPermission","useForm","form","useState","categoryStatus","setCategoryStatus","isFeatured","setIsFeatured","isLoading","setIsLoading","search","useLocation","params","queryString","parse","history","useHistory","categories","setCategories","data","loading","structuredCategories","setStructuredCategories","singleCategory","setSingleCategory","parentId","setParentId","image","setImage","thumbUrl","setThumbUrl","useEffect","apolloClient","query","productQuery","GET_ALL_CATEGORIES","context","headers","TENANTID","process","then","res","getAllCategories","status","catch","err","length","arrData","forEach","item","parent","cat_name","cat_sort_order","push","id","subcategories","subCat","sub","GET_SINGLE_CATEGORY_FOR_UPDATE","variables","cat_id","parseInt","getSingleCategory","category","state","is_featured","cat_status","cat_parent_id","toast","error","title","gutter","sm","xs","headless","className","style","width","name","onFinish","values","categoryName","categoryDescription","categoryMetaTagDescription","categoryMetaTagKeywords","categoryMetaTagTitle","categorySortOrder","cat_description","cat_meta_tag_title","cat_meta_tag_description","cat_meta_tag_keywords","categoryImage","file","apolloUploadClient","mutate","mutation","productMutation","UPDATE_CATEGORY","refetchQueries","fetchPolicy","Authorization","Cookies","get","updateCategory","message","setTimeout","success","finally","categoryParentId","console","log","CREATE_CATEGORY","createCategory","onFinishFailed","errorInfo","labelCol","span","TabPane","tab","key","Item","rules","required","max","label","initialValue","placeholder","rows","display","justifyContent","allowClear","onChange","value","defaultValue","map","checked","e","target","text","shape","size","src","onClick","multiple","beforeUpload","type","URL","createObjectURL","onRemove","fileList","marginTop","icon","as","htmlType","raised","to","marginLeft"],"mappings":"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","file":"static/js/52.6c42675f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Input, Checkbox, Switch, Tabs, Spin, Select, Upload, Badge, Avatar } from 'antd';\nimport FeatherIcon from 'feather-icons-react';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Button } from '../../components/buttons/buttons';\nimport apolloClient, { apolloUploadClient, productMutation, productQuery } from '../../utility/apollo';\nimport Heading from '../../components/heading/heading';\nimport queryString from 'query-string';\nimport { toast } from 'react-toastify';\nimport Cookies from 'js-cookie';\nimport { viewPermission } from '../../utility/utility';\n\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst { Dragger } = Upload;\n\nconst AddCategory = () => {\n  viewPermission('category');\n  const [form] = Form.useForm();\n  const [categoryStatus, setCategoryStatus] = useState(true);\n  const [isFeatured, setIsFeatured] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const maxLength = 30;\n  const { search } = useLocation();\n  const params = queryString.parse(search);\n  const history = useHistory();\n\n  const [categories, setCategories] = useState([]);\n  const [structuredCategories, setStructuredCategories] = useState({ data: [], loading: true });\n  const [singleCategory, setSingleCategory] = useState({});\n  const [parentId, setParentId] = useState('');\n  const [image, setImage] = useState(null);\n  const [thumbUrl, setThumbUrl] = useState('');\n\n  useEffect(() => {\n    // load all category\n    apolloClient\n      .query({\n        query: productQuery.GET_ALL_CATEGORIES,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getAllCategories;\n        if (!data.status) return;\n        setCategories(data.categories);\n      })\n      .catch(err => {});\n  }, []);\n\n  useEffect(() => {\n    // category structure\n\n    if (!categories.length) return;\n    let arrData = [];\n\n    categories.forEach(item => {\n      const parent = item.cat_name;\n      const cat_sort_order = item.cat_sort_order;\n\n      arrData.push({ cat_name: parent, id: item.id, cat_sort_order });\n      if (item.subcategories) {\n        item.subcategories.forEach(subCat => {\n          const sub = subCat.cat_name;\n          arrData.push({ cat_name: `${parent} > ${sub}`, id: subCat.id });\n        });\n      }\n    });\n    setStructuredCategories({ data: arrData, loading: false });\n  }, [categories]);\n\n  useEffect(() => {\n    // get single category\n    if (!params.id) return;\n\n    apolloClient\n      .query({\n        query: productQuery.GET_SINGLE_CATEGORY_FOR_UPDATE,\n        variables: { query: { cat_id: parseInt(params.id) } },\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getSingleCategory;\n        if (!data.status) return;\n        setSingleCategory(data.category);\n        setIsFeatured(state => data?.category?.is_featured || state);\n        setCategoryStatus(state => data?.category?.cat_status || state);\n        setParentId(state => data?.category?.cat_parent_id || state);\n      })\n      .catch(err => {\n        toast.error('Something went worng.!');\n      });\n  }, []);\n\n  const handleSubmit = values => {\n    // return;\n    setIsLoading(true);\n    const {\n      categoryName,\n      categoryDescription,\n      categoryMetaTagDescription,\n      categoryMetaTagKeywords,\n      categoryMetaTagTitle,\n      // categoryParentId,\n      categorySortOrder,\n    } = values;\n\n    if (!params.id) {\n      // for add new\n      const data = {\n        categoryName,\n        categoryDescription,\n        categoryMetaTagDescription,\n        categoryMetaTagKeywords,\n        categoryMetaTagTitle,\n        isFeatured,\n        categoryStatus,\n      };\n      if (parentId) {\n        data.categoryParentId = parentId;\n      }\n      if (categorySortOrder) {\n        data.categorySortOrder = parseInt(categorySortOrder);\n      }\n      const variables = { data };\n\n      if (image) {\n        variables.file = image;\n      }\n\n      console.log(variables);\n\n      apolloUploadClient\n        .mutate({\n          mutation: productMutation.CREATE_CATEGORY,\n          variables,\n          refetchQueries: [\n            {\n              query: productQuery.GET_ALL_CATEGORIES,\n              context: {\n                headers: {\n                  TENANTID: process.env.REACT_APP_TENANTID,\n                },\n              },\n            },\n            ['getAllCategories'],\n          ],\n          fetchPolicy: \"network-only\",\n          context: {\n            headers: {\n              TENANTID: process.env.REACT_APP_TENANTID,\n              Authorization: Cookies.get('psp_t'),\n            },\n          },\n        })\n        .then(res => {\n          const data = res?.data?.createCategory;\n          if (!data?.status) return toast.error(data?.message);\n          setTimeout(() => {\n            history.push('/admin/categories/list');\n          }, 1000);\n          toast.success(data?.message);\n        })\n        .catch(err => {})\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } else {\n      //for update\n      const data = {\n        cat_id: parseInt(params.id),\n        cat_name: categoryName,\n        cat_description: categoryDescription,\n        cat_meta_tag_title: categoryMetaTagTitle,\n        cat_meta_tag_description: categoryMetaTagDescription,\n        cat_meta_tag_keywords: categoryMetaTagKeywords,\n        is_featured: isFeatured,\n        cat_status: categoryStatus,\n      };\n      if (parentId) {\n        data.cat_parent_id = parentId;\n      }\n      if (image) {\n        data.categoryImage = image.file;\n      }\n      if (categorySortOrder) {\n        data.cat_sort_order = parseInt(categorySortOrder);\n      }\n\n      apolloUploadClient\n        .mutate({\n          mutation: productMutation.UPDATE_CATEGORY,\n          variables: { data },\n          refetchQueries: [\n            {\n              query: productQuery.GET_ALL_CATEGORIES,\n              context: {\n                headers: {\n                  TENANTID: process.env.REACT_APP_TENANTID,\n                  // Authorization: Cookies.get('psp_t')\n                },\n              },\n            },\n            ['getAllBrands'],\n          ],\n          fetchPolicy: \"network-only\",\n          context: {\n            headers: {\n              TENANTID: process.env.REACT_APP_TENANTID,\n              Authorization: Cookies.get('psp_t'),\n            },\n          },\n        })\n        .then(res => {\n          const data = res?.data?.updateCategory;\n          if (!data?.status) return toast.error(data?.message);\n          setTimeout(() => {\n            history.push('/admin/categories/list');\n          }, 1000);\n          toast.success(data?.message);\n        })\n        .catch(err => {})\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={\n          params.id\n            ? `Manage category | Edit - ${!singleCategory.cat_name ? '' : `(${singleCategory.cat_name})`}\t`\n            : 'Add Category'\n        }\n      />\n      <Main>\n        <Row gutter={25}>\n          <Col sm={24} xs={24}>\n            <Cards headless>\n              {params.id && !singleCategory.id ? (\n                <div className=\"spin\">\n                  <Spin />\n                </div>\n              ) : (\n                <Form\n                  style={{ width: '100%' }}\n                  form={form}\n                  name=\"addRole\"\n                  onFinish={handleSubmit}\n                  onFinishFailed={errorInfo => console.log('form error info:\\n', errorInfo)}\n                  labelCol={{ span: 4 }}\n                >\n                  <Tabs>\n                    <Tabs.TabPane tab=\"General\" key=\"general\">\n                      <Form.Item\n                        rules={[{ required: true, max: maxLength, message: 'Please enter Category Name' }]}\n                        name=\"categoryName\"\n                        label=\"Category Name\"\n                        initialValue={singleCategory.cat_name || ''}\n                      >\n                        <Input placeholder=\"Enter Category Name\" />\n                      </Form.Item>\n                      <Form.Item\n                        rules={[{ required: true, max: maxLength, message: 'Please enter Category Description' }]}\n                        name=\"categoryDescription\"\n                        label=\"Description\"\n                        initialValue={singleCategory.cat_description || ''}\n                      >\n                        <TextArea rows={4} placeholder=\"Enter Category Description\" />\n                      </Form.Item>\n                      <Form.Item\n                        rules={[{ required: true, max: maxLength, message: 'Please enter Meta Title' }]}\n                        name=\"categoryMetaTagTitle\"\n                        label=\"Meta Tag Title\"\n                        initialValue={singleCategory.cat_meta_tag_title || ''}\n                      >\n                        <Input placeholder=\"Enter Meta Tag Title\" />\n                      </Form.Item>\n                      <Form.Item\n                        name=\"categoryMetaTagDescription\"\n                        label=\"Meta Tag Description\"\n                        rules={[{ required: true, max: maxLength, message: 'Please enter Meta Description' }]}\n                        initialValue={singleCategory.cat_meta_tag_description || ''}\n                      >\n                        <TextArea rows={3} placeholder=\"Enter Meta Tag Description\" />\n                      </Form.Item>\n                      <Form.Item\n                        className=\"wrap-label\"\n                        rules={[{ required: true, max: maxLength, message: 'Please enter Meta Keywords' }]}\n                        name=\"categoryMetaTagKeywords\"\n                        label=\"Enter Meta Tag Keywords\"\n                        initialValue={singleCategory.cat_meta_tag_keywords || ''}\n                      >\n                        <TextArea rows={3} placeholder=\"Enter Meta Tag Keywords\" />\n                      </Form.Item>\n                    </Tabs.TabPane>\n\n                    <Tabs.TabPane tab=\"Data\" key=\"Data\">\n                      <Form.Item\n                        name=\"categoryParentId\"\n                        initialValue=\"\"\n                        label=\"Parent\"\n                        // tooltip={roles.isLoading ? 'Loading roles....' : null}\n                      >\n                        {structuredCategories.loading ? (\n                          <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <Spin />\n                          </div>\n                        ) : (\n                          <>\n                            <Select\n                              allowClear\n                              placeholder=\"Please select\"\n                              onChange={value => setParentId(value)}\n                              defaultValue={singleCategory.cat_parent_id}\n                            >\n                              {structuredCategories.data.map(item => (\n                                <Option key={item.id} value={item.id}>\n                                  {item.cat_name}\n                                </Option>\n                              ))}\n                            </Select>\n                          </>\n                        )}\n                      </Form.Item>\n\n                      <Form.Item\n                        name=\"categorySortOrder\"\n                        label=\"Sort Order\"\n                        initialValue={singleCategory.cat_sort_order || ''}\n                      >\n                        <Input placeholder=\"Enter Sort Order\" />\n                      </Form.Item>\n\n                      <Form.Item name=\"isFeatured\" label=\"Is Featured\">\n                        <Checkbox checked={isFeatured} onChange={e => setIsFeatured(e.target.checked)} />\n                      </Form.Item>\n                      <Form.Item name=\"categoryStatus\" label=\"Status\">\n                        <Switch checked={categoryStatus} onChange={checked => setCategoryStatus(checked)} />\n                      </Form.Item>\n\n                      <Form.Item name=\"img\" label=\"Image\">\n                        {!thumbUrl ? (\n                          <Dragger\n                            multiple={false}\n                            beforeUpload={file => {\n                              const isJpg = file.type === 'image/jpeg';\n                              if (!isJpg) return toast.error('You can only upload JPG file!');\n                              const isLt2M = file.size / 1024 / 1024 < 2;\n                              if (!isLt2M) return toast.error('Image must smaller than 2MB!');\n\n                              setThumbUrl(URL.createObjectURL(file));\n\n                              setImage(file);\n                              return false;\n                            }}\n                            onRemove={file => {\n                              setThumbUrl('');\n                              setImage(null);\n                            }}\n                            fileList={image ? [image] : []}\n                            style={{ marginTop: '3em' }}\n                          >\n                            <p className=\"ant-upload-drag-icon\">\n                              <FeatherIcon icon=\"upload\" size={50} />\n                            </p>\n                            <Heading as=\"h4\" className=\"ant-upload-text\">\n                              Drag and drop an image\n                            </Heading>\n                            <p className=\"ant-upload-hint\">\n                              or <span>Browse</span> to choose a file\n                            </p>\n                          </Dragger>\n                        ) : (\n                          <Badge text=\"x\">\n                            <Avatar\n                              shape=\"square\"\n                              size={80}\n                              src={thumbUrl}\n                              onClick={() => {\n                                setImage(null);\n                                setThumbUrl('');\n                              }}\n                            />\n                          </Badge>\n                        )}\n                      </Form.Item>\n                    </Tabs.TabPane>\n                  </Tabs>\n                  ;\n                  <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'flex-end',\n                      marginTop: '3em',\n                    }}\n                  >\n                    <Form.Item>\n                      <Button loading={isLoading} size=\"default\" htmlType=\"submit\" type=\"primary\" raised>\n                        {isLoading ? 'Processing' : 'Save'}\n                      </Button>\n                      <Link to=\"/admin/categories/list\">\n                        <Button style={{ marginLeft: 10 }} type=\"light\" size=\"default\">\n                          Cancel\n                        </Button>\n                      </Link>\n                    </Form.Item>\n                  </div>\n                </Form>\n              )}\n            </Cards>\n          </Col>\n        </Row>\n      </Main>\n    </>\n  );\n};\n\nexport default AddCategory;\n"],"sourceRoot":""}