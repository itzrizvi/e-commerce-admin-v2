{"version":3,"sources":["container/products/AddAttributeGroup.js"],"names":["AddAttributeGroup","viewPermission","search","useLocation","params","queryString","parse","history","useHistory","useState","groupStatus","setGroupStatus","isLoading","setIsLoading","useForm","form","data","singleAttributeGroup","setSingleAttributeGroup","useEffect","id","apolloClient","query","attributeQuery","GET_SINGLE_ATTR_GROUP","variables","attr_group_id","parseInt","context","headers","TENANTID","process","Authorization","Cookies","get","then","res","getSingleAttrGroup","attrgroup_status","catch","err","console","log","title","attr_group_name","gutter","sm","xs","headless","style","textAlign","tip","width","name","onFinish","values","attrgroup_sortorder","mutate","mutation","attributeMutation","UPDATE_ATTR_GROUP","refetchQueries","GET_ALL_ATTR_GROUPS","updateAttrGroup","status","toast","error","message","setTimeout","push","success","finally","CREATE_ATTR_GROUP","createAttrGroup","onFinishFailed","errorInfo","labelCol","span","Item","rules","required","max","label","initialValue","placeholder","type","checked","onChange","display","justifyContent","marginTop","loading","size","htmlType","raised","to","marginLeft"],"mappings":"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","file":"static/js/63.8756bcb4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Input, Switch, Spin } from 'antd';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Button } from '../../components/buttons/buttons';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport apolloClient, { attributeMutation, attributeQuery } from '../../utility/apollo';\nimport Cookies from 'js-cookie';\nimport { toast } from 'react-toastify';\nimport { viewPermission } from '../../utility/utility';\n\nconst AddAttributeGroup = () => {\n  viewPermission('attribute-group');\n  const { search } = useLocation();\n  const params = queryString.parse(search);\n  const history = useHistory();\n\n  const [groupStatus, setGroupStatus] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [form] = Form.useForm();\n  const maxLength = 30;\n\n  const [singleAttributeGroup, setSingleAttributeGroup] = useState({ data: [], isLoading: true });\n\n  useEffect(() => {\n    if (!params.id) return;\n    apolloClient\n      .query({\n        query: attributeQuery.GET_SINGLE_ATTR_GROUP,\n        variables: {\n          query: {\n            attr_group_id: parseInt(params.id),\n          },\n        },\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getSingleAttrGroup;\n        setSingleAttributeGroup({ data: data.data, isLoading: false });\n        setGroupStatus(data.data.attrgroup_status);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleSubmit = values => {\n    const { attr_group_name, attrgroup_sortorder } = values;\n\n    setIsLoading(true);\n    if (!params.id) {\n      // Create Attribute group\n      const variables = {\n        data: { attr_group_name, attrgroup_sortorder: parseInt(attrgroup_sortorder), attrgroup_status: groupStatus },\n      };\n      apolloClient\n        .mutate({\n          mutation: attributeMutation.CREATE_ATTR_GROUP,\n          variables,\n          refetchQueries: [\n            {\n              query: attributeQuery.GET_ALL_ATTR_GROUPS,\n              context: {\n                headers: {\n                  TENANTID: process.env.REACT_APP_TENANTID,\n                  Authorization: Cookies.get('psp_t'),\n                },\n              },\n            },\n            ['getAllAttrGroups'],\n          ],\n          context: {\n            headers: {\n              TENANTID: process.env.REACT_APP_TENANTID,\n              Authorization: Cookies.get('psp_t'),\n            },\n          },\n        })\n        .then(res => {\n          const data = res?.data?.createAttrGroup;\n          if (!data.status) return toast.error(data.message);\n          setTimeout(() => {\n            history.push('/admin/attributes/list-group');\n          }, 1000);\n          toast.success(`${values.attr_group_name} updated successfully`);\n        })\n        .catch(err => {\n          console.log('got error on addPermission', err);\n          return toast.error('Something Went wrong !!');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } else {\n      // Update  Attribute group\n      const variables = {\n        data: {\n          attr_group_id: parseInt(params.id),\n          attr_group_name,\n          attrgroup_sortorder: parseInt(attrgroup_sortorder),\n          attrgroup_status: groupStatus,\n        },\n      };\n      console.log(variables);\n      // return;\n      apolloClient\n        .mutate({\n          mutation: attributeMutation.UPDATE_ATTR_GROUP,\n          variables,\n          refetchQueries: [\n            {\n              query: attributeQuery.GET_ALL_ATTR_GROUPS,\n              context: {\n                headers: {\n                  TENANTID: process.env.REACT_APP_TENANTID,\n                  Authorization: Cookies.get('psp_t'),\n                },\n              },\n            },\n            ['getAllAttrGroups'],\n          ],\n          context: {\n            headers: {\n              TENANTID: process.env.REACT_APP_TENANTID,\n              Authorization: Cookies.get('psp_t'),\n            },\n          },\n        })\n        .then(res => {\n          const data = res?.data?.updateAttrGroup;\n          if (!data.status) return toast.error(data.message);\n          setTimeout(() => {\n            history.push('/admin/attributes/list-group');\n          }, 1000);\n          toast.success(`${values.attr_group_name} updated successfully`);\n        })\n        .catch(err => {\n          console.log('got error on addPermission', err);\n          return toast.error('Something Went wrong !!');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={\n          params.id\n            ? `Manage Group | Edit ${\n                singleAttributeGroup.isLoading ? '' : `(${singleAttributeGroup.data.attr_group_name})`\n              }`\n            : 'Add Attribute Group'\n        }\n      />\n      <Main>\n        <Row gutter={25}>\n          <Col sm={24} xs={24}>\n            <Cards headless>\n              {params.id && singleAttributeGroup.isLoading ? (\n                <div style={{ textAlign: 'center' }}>\n                  <Spin tip=\"processing...\" />\n                </div>\n              ) : (\n                <Form\n                  style={{ width: '100%' }}\n                  form={form}\n                  name=\"addRole\"\n                  onFinish={handleSubmit}\n                  onFinishFailed={errorInfo => console.log('form error info:\\n', errorInfo)}\n                  labelCol={{ span: 4 }}\n                >\n                  <Form.Item\n                    rules={[{ required: true, max: maxLength, message: 'Please enter Attribute Group Name' }]}\n                    name=\"attr_group_name\"\n                    label=\"Group Name\"\n                    initialValue={params.id ? singleAttributeGroup.data.attr_group_name : ''}\n                  >\n                    <Input placeholder=\"Enter Attribute Group Name\" />\n                  </Form.Item>\n                  <Form.Item\n                    rules={[{ required: true, max: maxLength, message: 'Please enter Role Name' }]}\n                    name=\"attrgroup_sortorder\"\n                    label=\"Sort order\"\n                    initialValue={params.id ? singleAttributeGroup.data.attrgroup_sortorder : ''}\n                  >\n                    <Input type=\"number\" placeholder=\"Enter sort order\" />\n                  </Form.Item>\n                  <Form.Item name=\"attrgroup_status\" label=\"Status\">\n                    <Switch checked={groupStatus} onChange={checked => setGroupStatus(checked)} />\n                  </Form.Item>\n\n                  <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'flex-end',\n                      marginTop: '3em',\n                    }}\n                  >\n                    <Form.Item>\n                      <Button loading={isLoading} size=\"default\" htmlType=\"submit\" type=\"primary\" raised>\n                        {isLoading ? 'Processing' : 'Save'}\n                      </Button>\n                      <Link to=\"/admin/attributes/list-group\">\n                        <Button style={{ marginLeft: 10 }} type=\"light\" size=\"default\">\n                          Cancel\n                        </Button>\n                      </Link>\n                    </Form.Item>\n                  </div>\n                </Form>\n              )}\n            </Cards>\n          </Col>\n        </Row>\n      </Main>\n    </>\n  );\n};\n\nexport default AddAttributeGroup;\n"],"sourceRoot":""}