{"version":3,"sources":["container/products/addProducts/AttributeTab.js","container/products/addProducts/DiscountTab.js","container/products/addProducts/ImageTab.js","container/products/addProducts/PartsOfProductTab.js","container/products/AddProduct.js","apollo/brand/index.js","container/products/products.module.css"],"names":["Option","AttributeTab","attributesTableData","setAttributesTableData","useState","setFile","data","isLoading","attributeGroups","setAttributeGroups","setSelectedGroup","useEffect","apolloClient","query","attributeQuery","GET_ALL_ATTR_GROUPS_FOR_ADD_PROD","context","headers","TENANTID","process","Authorization","Cookies","get","then","res","getAllAttrGroups","status","s","error","catch","err","finally","column","title","dataIndex","key","width","render","val","record","index","style","placeholder","defaultValue","options","map","item","label","attr_group_name","value","id","attributes","onSelect","arr","copy","attr_group_id","handleAttrGroupSelect","filter","attribute_name","attribute_id","handleAttributeSelect","text","marginRight","attribute_type","onChange","size","onBlur","attribute_value","target","multiple","e","file","state","originFileObj","onRemove","icon","UploadOutlined","fontSize","marginTop","name","align","type","onClick","prevState","columns","dataSource","pagination","rowKey","display","justifyContent","marginBottom","htmlType","newData","Date","getTime","DiscountTab","discount","setDiscount","customerGroups","setCustomerGroups","customerQuery","GET_ALL_CUSTOMER_GROUPS","getAllCustomerGroups","customer_group_id","console","log","customer_group_name","discount_quantity","discount_priority","discount_price","moment","parseInt","dateGmt","_d","toGMTString","discount_startdate","discount_enddate","removeRow","className","ImageTab","featuresImage","setFeaturesImage","gallaryImages","setGallaryImages","singleProdId","setIsLoading","Item","listType","beforeUpload","isJpg","toast","isLt2M","thumbnail","URL","createObjectURL","apolloUploadClient","mutate","mutation","productMutation","UPDATE_THUMBNAIL","variables","prod_id","prod_thumbnail","updateThumbnail","message","success","onPreview","fileList","url","uid","UPLOAD_GALLERY_IMAGE","gallery_img","uploadGalleryImage","DELETE_GALLERY_IMAGE","prod_gallery_id","prod_gallery_uuid","deleteGalleryImage","InboxOutlined","PartsOfProductTab","products","selectedPartsOfProducts","setProducts","setSelectedPartsOfProducts","setPartOfProductQuantities","partOfProductQuantities","quantity","splice","gutter","span","mode","optionFilterProp","prod_name","sku","prod_sku","newVal","items","TextArea","AddProduct","viewPermission","useForm","form","history","useHistory","selectedConditionID","setSelectedConditionID","selectedProductRepID","setSelectedProductRepID","setSelectedProdCategory","selectedavailabilitystatusID","setSelectedAvailabilityStatusID","extendedWarrantyEnable","setExtendedWarrantyEnable","search","useLocation","params","queryString","parse","singleProduct","setSingleProduct","productQuery","GET_SINGLE_PRODUCT","fetchPolicy","getSingleProduct","setLongDescription","RichTextEditor","createValueFromString","prod_long_desc","setProd_long_desc","discount_type","prod_attributes","attribute_data","attribute_group","part_of_products","part_product","prod_quantity","gallery","img","prod_image","setFieldValue","prod_short_desc","prod_meta_title","prod_meta_desc","prod_meta_keywords","prod_tags","prod_partnum","is_sale","brand_id","brand","prod_category","category","prod_outofstock_status","productavailablitystatus","prod_regular_price","prod_sale_price","cost","prod_condition","productCondition","product_rep","representative","extended_warranty","extended_warranty_value","location","hs_code","product_rank","mfg_build_part_number","createEmptyValue","longDescription","prod_status","isTaxable","setIsTaxable","loading","setBrand","productcondition","setProductCondition","setRepresentative","availabilitystatus","setAvailabilityStatus","dimensionClassList","setDimensionClassList","weightClassList","setWeightClassList","categories","setCategories","relatedProducts","setRelatedProducts","brandQuery","GET_ALL_BRAND_WITH_CATEGORY","getAllBrands","selectedBrand","find","arrData","forEach","parent","cat_name","push","cat_status","subcategories","subCat","sub","subsubcategories","subSubCat","subSub","utilityQuery","GET_ALL_CONDITIONS","getAllProductCondition","authQuery","GET_ALL_STAFF","getAllStaff","GET_ALL_AVAILABILITY","getAllProductAvailabilityStatus","GET_WEIGHT_CLASS_LIST","getWeightClassList","GET_DIMENSION_CLASS_LIST","getDimensionClassList","dimensions","setDimensions","weights","setWeights","initalData","disInitialValue","GET_PRODUCT_LIST_FOR_ADD_MINIMAL","getProductList","sm","xs","headless","div","onFinish","values","getFieldsValue","rest","isAttribute","isAttrCorrect","product_attributes","warning","isDiscount","idDiscountCorrect","related_product","partof_product","taxable","parseFloat","weight","UPDATE_PRODUCT","refetchQueries","GET_PRODUCT_LIST","updateProduct","setTimeout","prod_gallery","ADD_PRODUCT","addProduct","onFinishFailed","errorInfo","labelCol","initialValues","TabPane","tab","rules","required","rows","toString","rte","editorClassName","rteEditor","toolbarClassName","rteToolbar","defaultChecked","first_name","last_name","roles","role","is_featured","is_serial","brand_name","length","related_products","related_prod","Group","compact","height","dimensionClass","dimension_class_id","weightClass","weight_class_id","prefix","checked","singleProdUid","raised","to","GET_ALL_BRAND","gql","GET_CATEGORIES","GET_SINGLE_BRAND","BRAND_UPDATE","BRAND_UPDATE_WI","BRAND_ADD","BRAND_ADD_WI","module","exports"],"mappings":"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","file":"static/js/17.2e244431.chunk.js","sourcesContent":["import { Button, Input, Select, Table, Upload } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { UploadOutlined } from '@ant-design/icons';\nimport FeatherIcon from 'feather-icons-react';\nimport apolloClient, { attributeQuery } from '../../../utility/apollo';\nimport Cookies from 'js-cookie';\nconst { Option } = Select;\n\nconst AttributeTab = ({ attributesTableData, setAttributesTableData }) => {\n\n    const [file, setFile] = useState({});\n    const addNewRow = () => {\n        const newData = {\n            id: new Date().getTime(),\n            attr_group_id: \"\",\n            attribute_id: '',\n            attribute_type: '',\n            attribute_value: ''\n        }\n        setAttributesTableData(prevState => [...prevState, newData])\n    }\n    const removeRow = (id) => {\n        setAttributesTableData(prevState => {\n            return prevState.filter((value) => value.id !== id)\n        })\n    }\n\n    const [attributeGroups, setAttributeGroups] = useState({ data: [], isLoading: true })\n    const [selectedGroup, setSelectedGroup] = useState({})\n    const handleAttrGroupSelect = (val, item, index) => {\n        setSelectedGroup(item)\n\n        setAttributesTableData(arr => {\n            let data = arr[index];\n            const copy = [...arr];\n            copy[index] = { ...data, attr_group_id: val }\n            return copy;\n        })\n    }\n    const handleAttributeSelect = (val, item, index) => {\n        setAttributesTableData(arr => {\n            let data = arr[index];\n            const copy = [...arr];\n            copy[index] = { ...data, attribute_id: val }\n            return copy;\n        })\n    }\n\n    // load ATTRIBUTE GROUPS\n    useEffect(() => {\n        // return\n        apolloClient.query({\n            query: attributeQuery.GET_ALL_ATTR_GROUPS_FOR_ADD_PROD,\n            context: {\n                headers: {\n                    TENANTID: process.env.REACT_APP_TENANTID,\n                    Authorization: Cookies.get('psp_t')\n                }\n            }\n        }).then(res => {\n\n            const data = res?.data?.getAllAttrGroups\n\n            if (!data?.status) return\n            setAttributeGroups(s => ({ ...s, data: data?.data, error: '' }))\n        }).catch(err => {\n            setAttributeGroups(s => ({ ...s, error: 'Something went Wrong.!! ' }))\n        }).finally(() => {\n            setAttributeGroups(s => ({ ...s, isLoading: false }))\n        })\n\n    }, []);\n\n    // List For Table Column\n    const column = [\n        {\n            title: 'Attribute Group',\n            dataIndex: 'attr_group_id',\n            key: 'attr_group_id',\n            width: 200,\n            render: (val, record, index) => <Select\n                style={{ width: \"100%\" }}\n                placeholder={attributeGroups.isLoading ? 'Loading...' : \"Select Group...\"}\n                defaultValue={val}\n                options={attributeGroups.data.map(item => ({\n                    label: item.attr_group_name,\n                    value: item.id,\n                    attributes: item.attributes\n                }))}\n                onSelect={(val, item) => handleAttrGroupSelect(val, item, index)}\n            />\n        },\n        {\n            title: 'Attribute',\n            dataIndex: 'attribute_id',\n            key: 'attribute_id',\n            width: 200,\n            render: (val, record, index) => <Select\n                style={{ width: \"100%\" }}\n                defaultValue={val}\n                placeholder={attributeGroups.isLoading ? 'Loading...'\n                    : \"Select Attribute...\"\n                }\n                options={attributeGroups?.data.filter(item => item.id === record.attr_group_id)[0]?.attributes?.map(item => ({\n                    label: item.attribute_name,\n                    value: item.id,\n                }))}\n                onSelect={(val, item) => handleAttributeSelect(val, item, index)}\n            />\n        },\n        {\n            title: 'Value Type',\n            dataIndex: 'value',\n            width: 80,\n            key: 'value',\n            render: (text, record, index) => <Select\n                style={{ width: '10em', marginRight: \"1em\" }}\n                placeholder=\"Select type\"\n                defaultValue={record.attribute_type}\n                onChange={value => {\n                    setAttributesTableData(arr => {\n                        let data = arr[index];\n                        const copy = [...arr];\n                        copy[index] = { ...data, attribute_type: value }\n                        return copy;\n                    })\n                }}\n            >\n                <Option value=\"text\" >Text</Option>\n                <Option value=\"link\" >Link</Option>\n                <Option value=\"file\" >File</Option>\n                <Option value=\"none\" >None</Option>\n            </Select>\n        },\n        {\n            title: 'Attribute Value',\n            dataIndex: 'attribute_value',\n            width: 150,\n            key: 'attribute_value',\n            render: (text, record, index) => {\n                if (record.attribute_type === \"text\") {\n                    return < Input\n                        placeholder=\"Enter text\"\n                        size=\"large\"\n                        onBlur={value => {\n                            setAttributesTableData(arr => {\n                                let data = arr[index];\n                                const copy = [...arr];\n                                copy[index] = { ...data, attribute_value: value.target.value }\n                                return copy;\n                            })\n                        }}\n                        defaultValue={record.attribute_value}\n                    />\n                } else if (record.attribute_type === \"link\") {\n                    return < Input\n                        placeholder=\"Enter Link\"\n                        size=\"large\"\n                        onBlur={value => {\n                            setAttributesTableData(arr => {\n                                let data = arr[index];\n                                const copy = [...arr];\n                                copy[index] = { ...data, attribute_value: value.target.value }\n                                return copy;\n                            })\n                        }}\n                        defaultValue={record.attribute_value}\n                    />\n                } else if (record.attribute_type === \"file\") {\n\n                    return (\n                        <Upload\n                            multiple={false}\n                            onChange={e => {\n                                setFile(e.file)\n                                setAttributesTableData(state => {\n                                    let data = state[index];\n                                    const copy = [...state];\n                                    copy[index] = { ...data, attribute_value: e.file.originFileObj }\n                                    return copy;\n                                })\n                            }}\n                            onRemove={() => setFile({})}\n                        >\n                            <Button icon={<UploadOutlined />}>Select File</Button>\n                            <p style={{ fontSize: 12, marginTop: 10 }}>{record.attribute_value.name ? `${record.attribute_value.name}` : `${record.attribute_value}`}</p>\n\n                        </Upload>)\n                }\n\n            }\n\n        },\n        {\n            title: 'Action',\n            dataIndex: 'action',\n            key: 'action',\n            width: 90,\n            align: \"right\",\n            render: (text, record) => <Button size=\"\" title=\"Remove\" type=\"danger\"\n                onClick={() => removeRow(record.id)}\n            ><FeatherIcon icon=\"minus\" size={15} /></Button>\n        },\n    ];\n\n    return (\n\n        <>\n            <Table\n                columns={column}\n                dataSource={attributesTableData}\n                pagination={false}\n                rowKey=\"attribute_value\"\n            />\n\n            <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '10px', marginBottom: '10px', marginRight: '1em' }}>\n                <Button title=\"Add Attribute\" htmlType=\"button\" type=\"primary\" onClick={addNewRow}>\n                    <FeatherIcon icon=\"plus\" size={15} />\n                </Button>\n            </div>\n        </>\n    );\n};\n\nexport default AttributeTab;","import { Button, DatePicker, Input, Select, Table } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport FeatherIcon from 'feather-icons-react';\nimport apolloClient, { customerQuery } from '../../../utility/apollo';\nimport Cookies from 'js-cookie';\nimport moment from 'moment';\n\nconst DiscountTab = ({ discount, setDiscount }) => {\n\n    const [customerGroups, setCustomerGroups] = useState({ data: [], isLoading: true })\n\n    // LOAD CUSTOMER GROUPS\n    useEffect(() => {\n        apolloClient.query({\n            query: customerQuery.GET_ALL_CUSTOMER_GROUPS,\n            context: {\n                headers: {\n                    TENANTID: process.env.REACT_APP_TENANTID,\n                    Authorization: Cookies.get('psp_t')\n                }\n            }\n        }).then(res => {\n            const data = res?.data?.getAllCustomerGroups\n\n            if (!data?.status) return\n            setCustomerGroups(s => ({ ...s, data: data?.data, error: '' }))\n        }).catch(err => {\n            setCustomerGroups(s => ({ ...s, error: 'Something went Wrong.!! ' }))\n        }).finally(() => {\n            setCustomerGroups(s => ({ ...s, isLoading: false }))\n        })\n\n    }, []);\n\n    const column = [\n        {\n            title: 'Customer Group',\n            dataIndex: 'customer_group_id',\n            key: 'customer_group_id',\n            render: (text, record, index) => <Select\n                style={{ width: \"150px\" }}\n                placeholder={customerGroups.isLoading ? \"Loading..\" : \"customer group\"}\n                defaultValue={text || null}\n                onSelect={value => {\n                    setDiscount(state => {\n                        let data = state[index];\n                        const copy = [...state];\n                        copy[index] = { ...data, customer_group_id: value }\n                        console.log(copy)\n                        return copy;\n                    })\n\n                }}\n            >\n                {customerGroups?.data?.map(item => (\n                    <Select.Option key={item.id} value={item.id} >{item.customer_group_name}</Select.Option>\n                ))}\n            </Select>\n        },\n        {\n            title: 'Quantity',\n            dataIndex: 'discount_quantity',\n            key: 'discount_quantity',\n            width: 100,\n            render: (val, record, index) => <Input defaultValue={val} type=\"number\" placeholder=\"Quantity\" style={{ width: \"100px\" }}\n                onBlur={e => {\n                    setDiscount(state => {\n                        let data = state[index];\n                        const copy = [...state];\n                        copy[index] = { ...data, discount_quantity: e.target.value }\n                        console.log(copy)\n                        return copy;\n                    })\n                }}\n            />\n        },\n        {\n            title: 'Priority',\n            dataIndex: 'discount_priority',\n            key: 'discount_priority',\n            width: 100,\n            render: (val, record, index) => <Input type=\"number\" placeholder=\"Priority\" style={{ width: \"100px\" }}\n                defaultValue={val}\n                onBlur={e => {\n                    console.log(e.target.value)\n                    setDiscount(state => {\n                        let data = state[index];\n                        const copy = [...state];\n                        copy[index] = { ...data, discount_priority: e.target.value }\n                        console.log(copy)\n                        return copy;\n                    })\n                }}\n            />\n        },\n        {\n            title: 'Price',\n            dataIndex: 'discount_price',\n            key: 'discount_price',\n            width: 100,\n            render: (val, record, index) => <Input type=\"number\" placeholder=\"Price\" style={{ width: \"100px\" }}\n                defaultValue={val}\n                onBlur={e => {\n                    console.log(e.target.value)\n                    setDiscount(state => {\n                        let data = state[index];\n                        const copy = [...state];\n                        copy[index] = { ...data, discount_price: e.target.value }\n                        console.log(copy)\n                        return copy;\n                    })\n                }}\n            />\n        },\n        {\n            title: 'Date Start',\n            dataIndex: 'discount_startdate',\n            key: 'discount_startdate',\n            render: (val, record, index) => <DatePicker\n                defaultValue={val && moment(parseInt(val))}\n                onChange={value => {\n                    const dateGmt = new Date(value._d).toGMTString()\n                    console.log(dateGmt)\n                    setDiscount(state => {\n                        let data = state[index];\n                        const copy = [...state];\n                        copy[index] = { ...data, discount_startdate: dateGmt }\n                        console.log(copy)\n                        return copy;\n                    })\n                }}\n            />\n        },\n        {\n            title: 'Date End',\n            dataIndex: 'discount_enddate',\n            key: 'discount_enddate',\n            render: (val, record, index) => <DatePicker\n                defaultValue={val && moment(parseInt(val))}\n                onChange={value => {\n                    const dateGmt = new Date(value._d).toGMTString()\n                    console.log(dateGmt)\n                    setDiscount(state => {\n                        let data = state[index];\n                        const copy = [...state];\n                        copy[index] = { ...data, discount_enddate: dateGmt }\n                        return copy;\n                    })\n                }}\n            />\n        },\n        {\n            title: 'Action',\n            dataIndex: 'action',\n            key: 'action',\n            render: (text, record) => <Button size=\"\" title=\"Remove\" type=\"danger\" onClick={() => removeRow(record.id)} ><FeatherIcon icon=\"minus\" /></Button>\n        }\n    ]\n\n    // Adding new row on table\n    const addNewRow = () => {\n        const newData = (\n            {\n                id: new Date().getTime(),\n                customer_group_id: \"\",\n                discount_quantity: \"\",\n                discount_priority: \"\",\n                discount_price: \"\",\n                discount_startdate: \"\",\n                discount_enddate: \"\"\n            }\n        )\n        setDiscount(prevState => [...prevState, newData])\n    }\n    // Removing new row on table\n    const removeRow = (id) => {\n        setDiscount(prevState => {\n            return prevState.filter((value) => value.id !== id)\n        })\n    }\n\n    return (\n        <>\n            <Table\n                className=\"table-responsive\"\n                columns={column}\n                pagination={false}\n                rowKey={'id'}\n                size=\"small\"\n                dataSource={discount}\n            />\n\n            <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '10px', marginBottom: '10px' }}>\n                <Button title=\"Add Banner\" htmlType=\"button\" type=\"primary\" onClick={addNewRow} style={{ marginRight: \".5em\" }}>\n                    <FeatherIcon icon=\"plus\" />\n                </Button>\n            </div>\n        </>\n    );\n};\n\nexport default DiscountTab;","import { Form, Upload } from 'antd';\nimport Dragger from 'antd/lib/upload/Dragger';\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport { InboxOutlined } from '@ant-design/icons'\nimport { apolloUploadClient, productMutation } from '../../../utility/apollo';\nimport Cookies from 'js-cookie';\n\nconst ImageTab = ({ featuresImage, setFeaturesImage, gallaryImages, setGallaryImages, singleProdId, setIsLoading }) => {\n\n\n    const handleBeforeUpload = file => {\n        const isJpg = file.type === 'image/jpeg';\n        if (!isJpg) return toast.error('You can only upload JPG file!')\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) return toast.error('Image must smaller than 2MB!');\n\n        if (isJpg && isLt2M) {\n            setFeaturesImage({ file, thumbnail: URL.createObjectURL(file) })\n\n\n            // update thumbnail img\n            if (singleProdId) {\n                setIsLoading(true)\n                apolloUploadClient.mutate({\n                    mutation: productMutation.UPDATE_THUMBNAIL,\n                    variables: {\n                        data: {\n                            prod_id: singleProdId,\n                            prod_thumbnail: file\n                        }\n                    },\n                    context: {\n                        headers: {\n                            TENANTID: process.env.REACT_APP_TENANTID,\n                            Authorization: Cookies.get('psp_t')\n                        }\n                    }\n                }).then(res => {\n                    const data = res?.data?.updateThumbnail\n                    if (!data.status) return toast.error(data.message);\n                    toast.success(data.message);\n                }).catch(err => {\n                    console.log(\"update thumbnail err:\\n\", err)\n                    return toast.error('Something Went wrong !!')\n                }).finally(() => {\n                    // setIsLoading(false)\n                })\n            }\n        }\n        return false;\n    }\n\n    const handleBeforeUploadGellary = (file) => {\n        console.log(\"file type:\\n\", file.type);\n        const isJpg = file.type === 'image/jpeg';\n        if (!isJpg) return toast.error('You can only upload JPG file!')\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) return toast.error('Image must smaller than 2MB!');\n        setGallaryImages(state => [...state, { file, url: URL.createObjectURL(file), uid: file.uid }])\n\n        // update galary img\n        if (singleProdId) {\n            setIsLoading(true)\n            apolloUploadClient.mutate({\n                mutation: productMutation.UPLOAD_GALLERY_IMAGE,\n                variables: {\n                    data: {\n                        prod_id: singleProdId,\n                        gallery_img: file\n                    }\n                },\n                context: {\n                    headers: {\n                        TENANTID: process.env.REACT_APP_TENANTID,\n                        Authorization: Cookies.get('psp_t')\n                    }\n                }\n            }).then(res => {\n                const data = res?.data?.uploadGalleryImage\n                if (!data.status) return toast.error(data.message);\n                toast.success(data.message);\n            }).catch(err => {\n                console.log(\"update gal img err:\\n\", err)\n                return toast.error('Something Went wrong !!')\n            }).finally(() => {\n                // setIsLoading(false)\n            })\n        }\n\n        return false\n    }\n\n    return (\n        <>\n            <Form.Item\n                label=\"Features Image\"\n            >\n                <Upload\n                    multiple\n                    listType=\"picture-card\"\n                    beforeUpload={handleBeforeUpload}\n                    onPreview={() => console.log()}\n                    onRemove={() => setFeaturesImage({})}\n                    fileList={!featuresImage.thumbnail ? [] : [{ file: featuresImage.file, url: featuresImage.thumbnail }]}\n                >\n                    {!featuresImage.thumbnail && \"+ Upload\"}\n                </Upload>\n\n            </Form.Item>\n            <Form.Item\n                label=\"Gallery Image\"\n            >\n                <Dragger\n                    multiple\n                    listType='picture-card'\n                    beforeUpload={handleBeforeUploadGellary}\n                    fileList={gallaryImages}\n                    onRemove={(file) => {\n                        setGallaryImages(state => {\n                            const remaining = state.filter(item => item.uid !== file.uid)\n                            return remaining\n                        })\n\n                        // delete galary img\n                        if (singleProdId) {\n                            setIsLoading(true)\n                            apolloUploadClient.mutate({\n                                mutation: productMutation.DELETE_GALLERY_IMAGE,\n                                variables: {\n                                    data: {\n                                        prod_id: singleProdId,\n                                        prod_gallery_id: file.prod_gallery_uuid\n                                    }\n                                },\n                                context: {\n                                    headers: {\n                                        TENANTID: process.env.REACT_APP_TENANTID,\n                                        Authorization: Cookies.get('psp_t')\n                                    }\n                                }\n                            }).then(res => {\n                                const data = res?.data?.deleteGalleryImage\n                                if (!data.status) return toast.error(data.message);\n                                toast.success(data.message);\n                            }).catch(err => {\n                                console.log(\"del gal img err:\\n\", err)\n                                return toast.error('Something Went wrong !!')\n                            }).finally(() => {\n                                // setIsLoading(false)\n                            })\n                        }\n                    }}\n                >\n                    <p className=\"ant-upload-drag-icon\">\n                        <InboxOutlined />\n                    </p>\n                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                </Dragger>\n\n            </Form.Item>\n        </>\n    );\n};\n\nexport default ImageTab;","import { Button, Col, Form, Input, Row, Select, Table } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport FeatherIcon from 'feather-icons-react';\n\n\nconst PartsOfProductTab = ({ products, setProducts, selectedPartsOfProducts, setSelectedPartsOfProducts, partOfProductQuantities, setPartOfProductQuantities }) => {\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'label',\n            key: 'label',\n            // render: (val, record) => record.label\n        },\n        {\n            title: 'SKU',\n            dataIndex: 'sku',\n            key: 'sku',\n        },\n        {\n            title: 'Quantity',\n            dataIndex: 'q',\n            key: 'q',\n            width: 120,\n            render: (text, record) => <Input\n                defaultValue={record.quantity || \"1\"}\n                type=\"number\"\n                placeholder=\"Quantity\"\n                onBlur={e => {\n                    setPartOfProductQuantities(state => {\n                        const copy = { ...state }\n                        copy[record.uid] = e.target.value\n                        console.log(copy)\n                        return copy\n                    }\n                    )\n                }}\n            />\n        },\n        {\n            title: 'Action',\n            dataIndex: 'action',\n            key: 'action',\n            width: 100,\n            render: (text, record, index) => <Button size=\"\" title=\"Remove\" type=\"danger\"\n                // onClick={() => removeRow(record.id)}\n                onClick={() => {\n                    const copy = [...selectedPartsOfProducts]\n                    copy.splice(index, 1)\n                    setSelectedPartsOfProducts(copy)\n                }}\n\n            ><FeatherIcon icon=\"minus\" /></Button>\n        }\n    ]\n\n    return (\n        <div>\n            <Row gutter={25}>\n                <Col span={24}>\n                    <Form.Item\n                        // rules={[{ required: true, message: \"Please enter Model\" }]}\n                        // name=\"model\"\n                        label=\"Products\"\n                    >\n                        <Row>\n                            <Col span={8}>\n                                <Select\n                                    style={{ marginBottom: \"2em\" }}\n                                    mode=\"multiple\"\n                                    value={selectedPartsOfProducts}\n                                    placeholder={products.isLoading ? \"Loading..\" : \"Select Product..\"}\n                                    optionFilterProp=\"label\"\n\n                                    options={products?.data?.map(item => (\n                                        {\n                                            label: item.prod_name,\n                                            value: item.id,\n                                            uid: item.id,\n                                            key: item.id,\n                                            name: item.prod_name,\n                                            sku: item.prod_sku,\n                                        }\n                                    ))}\n                                    // value={[]}\n                                    onChange={(newVal, items) => {\n                                        setSelectedPartsOfProducts(items)\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n\n                        <Table\n                            dataSource={selectedPartsOfProducts}\n                            columns={columns}\n                            pagination={false}\n                            rowKey=\"uid\"\n                        />\n\n                    </Form.Item>\n                </Col>\n            </Row>\n\n        </div>\n    );\n};\n\nexport default PartsOfProductTab;","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Tabs, Form, Input, Switch, Select, Spin } from 'antd';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Main } from '../styled';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { Button } from '../../components/buttons/buttons';\nimport RichTextEditor from 'react-rte';\nconst { TextArea } = Input;\nimport style from './products.module.css';\nimport AttributeTab from './addProducts/AttributeTab';\nimport DiscountTab from './addProducts/DiscountTab';\nimport ImageTab from './addProducts/ImageTab';\nimport apolloClient from '../../apollo';\nimport { brandQuery } from '../../apollo/brand';\nimport Cookies from 'js-cookie';\nimport { apolloUploadClient, authQuery, productMutation, productQuery, utilityQuery } from '../../utility/apollo';\nimport PartsOfProductTab from './addProducts/PartsOfProductTab';\nimport { viewPermission } from '../../utility/utility';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport queryString from 'query-string';\n\nconst AddProduct = () => {\n  viewPermission('product');\n  const [form] = Form.useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const [selectedConditionID, setSelectedConditionID] = useState(null);\n  const [selectedProductRepID, setSelectedProductRepID] = useState(null);\n  const [selectedProdCategory, setSelectedProdCategory] = useState(null);\n  const [selectedavailabilitystatusID, setSelectedAvailabilityStatusID] = useState(null);\n  const [extendedWarrantyEnable, setExtendedWarrantyEnable] = useState(false);\n\n  // update prod\n  const { search } = useLocation();\n  const params = queryString.parse(search);\n  const [singleProduct, setSingleProduct] = useState({ data: {}, isLoading: true });\n\n  useEffect(() => {\n    // Load single product\n    if (!params.id) return;\n    apolloClient\n      .query({\n        query: productQuery.GET_SINGLE_PRODUCT,\n        variables: { query: { prod_id: parseInt(params.id) } },\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n        fetchPolicy: \"network-only\"\n      })\n      .then(res => {\n        const data = res?.data?.getSingleProduct;\n        if (!data.status) return toast.error('Try reload..!');\n        setSingleProduct({ data: data?.data, isLoading: false });\n        setLongDescription(RichTextEditor.createValueFromString(data?.data?.prod_long_desc, 'html'));\n        setProd_long_desc(data?.data?.prod_long_desc);\n        setDiscount(s => {\n          const n = data?.data?.discount_type?.map(item => ({\n            id: item.id,\n            customer_group_id: item.id,\n            discount_quantity: item.discount_quantity,\n            discount_priority: item.discount_priority,\n            discount_price: item.discount_price,\n            discount_startdate: item.discount_startdate,\n            discount_enddate: item.discount_enddate,\n          }));\n          return n;\n        });\n\n        setAttributesTableData(s => {\n          const n = data?.data?.prod_attributes?.map(item => ({\n            id: item.id,\n            attr_group_id: item.attribute_data?.attribute_group?.id,\n            attribute_id: item?.attribute_data?.id,\n            attribute_name: item?.attribute_data?.attribute_name,\n            attribute_type: item.attribute_type,\n            attribute_value: item.attribute_value,\n          }));\n          return n;\n        });\n        setSelectedPartsOfProducts(s => {\n          const n = data?.data?.part_of_products?.map(item => ({\n            label: item.part_product.prod_name,\n            value: item.part_product.id,\n            uid: item.part_product.id,\n            key: item.part_product.id,\n            name: item.part_product.prod_name,\n            sku: item.part_product.prod_sku,\n            quantity: item.prod_quantity,\n          }));\n          return n;\n        });\n        setFeaturesImage(state => {\n          const thumbnail = `https://api.primeserverparts.com/images/product/image/thumbnail/${data?.data?.id}/128x128_${data?.data?.id}.jpg`;\n          return { file: '', thumbnail };\n        });\n        setGallaryImages(\n          data?.data.gallery.map(img => ({\n            file: '',\n            url: `https://api.primeserverparts.com/images/product/image/gallery/${data?.data?.id}/128x128_${img.prod_image}`,\n            prod_gallery_uuid: img.id,\n          })),\n        );\n\n        form.setFieldValue({\n          prod_name: data?.data.prod_name,\n          prod_short_desc: data?.data.prod_short_desc,\n          prod_meta_title: data?.data.prod_meta_title,\n          prod_meta_desc: data?.data.prod_meta_desc,\n          prod_meta_keywords: data?.data.prod_meta_keywords,\n          prod_tags: data?.data.prod_tags,\n          prod_partnum: data?.data.prod_partnum,\n          prod_sku: data?.data.prod_sku,\n          is_sale: data?.data.is_sale,\n          brand_id: data?.data?.brand?.id,\n          prod_category: data?.data?.category?.id,\n          prod_outofstock_status: data?.data?.productavailablitystatus?.id,\n          prod_regular_price: data?.data?.prod_regular_price || '',\n          prod_sale_price: data?.data?.prod_sale_price || '',\n          cost: data?.data?.cost || '',\n          prod_condition: data?.data?.productCondition?.id || '',\n          product_rep: data?.data?.representative?.id || '',\n          extended_warranty: data?.data?.extended_warranty,\n          extended_warranty_value: data?.data?.extended_warranty_value || 0,\n          location: data?.data?.location || '',\n          hs_code: data?.data?.hs_code || '',\n          product_rank: data?.data?.product_rank || '',\n          mfg_build_part_number: data?.data?.mfg_build_part_number || '',\n        })\n        setSelectedProdCategory(data?.data?.category?.id)\n        setExtendedWarrantyEnable(data?.data?.extended_warranty_value)\n        setSelectedAvailabilityStatusID(data?.data?.productavailablitystatus?.id)\n        setSelectedConditionID(data?.data?.productCondition?.id)\n        setSelectedProductRepID(data?.data?.representative?.id)\n      })\n      .catch(err => {\n        console.log('error on loading porduct,\\n', err);\n      });\n\n\n\n\n  }, []);\n\n  // ================= 1.for General tab START =================\n  const [longDescription, setLongDescription] = useState(RichTextEditor.createEmptyValue());\n  const [prod_long_desc, setProd_long_desc] = useState('');\n  const onChangeRte = value => {\n    setProd_long_desc(value.toString('html'));\n    setLongDescription(value);\n  };\n  const [prod_status, setProd_status] = useState(true);\n  const [isTaxable, setIsTaxable] = useState(true);\n  // ================= 1.for General tab END =================\n\n  // ================= 3.for links tab START =================\n  const [brand, setBrand] = useState({ data: [], loading: true, error: '' });\n  const [productcondition, setProductCondition] = useState({ data: [], loading: true, error: '' });\n  const [representative, setRepresentative] = useState({ data: [], loading: true, error: '' });\n  const [availabilitystatus, setAvailabilityStatus] = useState({ data: [], loading: true, error: '' });\n  const [dimensionClassList, setDimensionClassList] = useState({ data: [], loading: true, error: '' });\n  const [weightClassList, setWeightClassList] = useState({ data: [], loading: true, error: '' });\n  const [categories, setCategories] = useState([]);\n  const [relatedProducts, setRelatedProducts] = useState([]);\n  const onManufactureSelect = (val, item) => {\n    setCategories([]);\n    setSelectedProdCategory('')\n    if (!item?.categories?.length) return;\n    let arrData = [];\n    // Loop & organize categories\n    !item?.categories?.forEach(item => {\n      const parent = item.cat_name;\n\n      arrData.push({ cat_name: parent, id: item.id, cat_status: item.cat_status });\n      if (item.subcategories) {\n        item.subcategories.forEach(subCat => {\n          const sub = subCat.cat_name;\n          arrData.push({ cat_name: `${parent} > ${sub}`, id: subCat.id, cat_status: subCat.cat_status });\n          if (subCat.subsubcategories) {\n            subCat.subsubcategories.forEach(subSubCat => {\n              const subSub = subSubCat.cat_name;\n              arrData.push({\n                cat_name: `${parent} > ${sub} > ${subSub}`,\n                id: subSubCat.id,\n                cat_status: subSubCat.cat_status,\n              });\n            });\n          }\n        });\n      }\n    });\n    setCategories(arrData);\n  };\n  // get all brands with category\n  useEffect(() => {\n    // Load Manufacture/brand\n    if (params.id && singleProduct.isLoading) return;\n\n    apolloClient\n      .query({\n        query: brandQuery.GET_ALL_BRAND_WITH_CATEGORY,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getAllBrands;\n        setBrand(s => ({ ...s, data: data?.data, error: '' }));\n        // set initial value - category for selected brand/manufacture\n        if (params.id) {\n          const uid = singleProduct?.data.brand?.id;\n          const selectedBrand = data?.data.find(brand => brand.id === uid);\n          // Loop & organize categories\n          let arrData = [];\n          selectedBrand?.categories?.forEach(item => {\n            const parent = item.cat_name;\n\n            arrData.push({ cat_name: parent, id: item.id, cat_status: item.cat_status });\n            if (item.subcategories) {\n              item.subcategories.forEach(subCat => {\n                const sub = subCat.cat_name;\n                arrData.push({ cat_name: `${parent} > ${sub}`, id: subCat.id, cat_status: subCat.cat_status });\n                if (subCat.subsubcategories) {\n                  subCat.subsubcategories.forEach(subSubCat => {\n                    const subSub = subSubCat.cat_name;\n                    arrData.push({\n                      cat_name: `${parent} > ${sub} > ${subSub}`,\n                      id: subSubCat.id,\n                      cat_status: subSubCat.cat_status,\n                    });\n                  });\n                }\n              });\n            }\n          });\n          setCategories(arrData);\n        }\n      })\n      .catch(err => {\n        setBrand(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setBrand(s => ({ ...s, loading: false }));\n      });\n\n    //////////////////////////////////\n    apolloClient\n      .query({\n        query: utilityQuery.GET_ALL_CONDITIONS,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getAllProductCondition;\n        setProductCondition(data)\n      })\n      .catch(err => {\n        setProductCondition(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setProductCondition(s => ({ ...s, loading: false }));\n      });\n\n    //////////////////////////////////\n    apolloClient\n      .query({\n        query: authQuery.GET_ALL_STAFF,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getAllStaff;\n        setRepresentative(data)\n      })\n      .catch(err => {\n        setRepresentative(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setRepresentative(s => ({ ...s, loading: false }));\n      });\n\n    //////////////////////////////////\n    apolloClient\n      .query({\n        query: utilityQuery.GET_ALL_AVAILABILITY,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getAllProductAvailabilityStatus;\n        setAvailabilityStatus(data)\n      })\n      .catch(err => {\n        setAvailabilityStatus(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setAvailabilityStatus(s => ({ ...s, loading: false }));\n      });\n\n    //////////////////////////////////\n    apolloClient\n      .query({\n        query: utilityQuery.GET_WEIGHT_CLASS_LIST,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getWeightClassList;\n        setWeightClassList(data)\n      })\n      .catch(err => {\n        setWeightClassList(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setWeightClassList(s => ({ ...s, loading: false }));\n      });\n\n    //////////////////////////////////\n    apolloClient\n      .query({\n        query: utilityQuery.GET_DIMENSION_CLASS_LIST,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getDimensionClassList;\n        setDimensionClassList(data)\n      })\n      .catch(err => {\n        setDimensionClassList(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setDimensionClassList(s => ({ ...s, loading: false }));\n      });\n\n  }, [singleProduct]);\n\n  // ================= 3.for links tab END =================\n\n  // ================= 4.for Specification tab START =================\n  const [dimensions, setDimensions] = useState({});\n  const [weights, setWeights] = useState({});\n  // ================= 4.for Specification tab END =================\n  // ================= 6.for Attribute tab START =================\n  const initalData = [\n    {\n      id: new Date().getTime(),\n      attr_group_id: '',\n      attribute_id: '',\n      attribute_type: '',\n      attribute_value: '',\n    },\n  ];\n  const [attributesTableData, setAttributesTableData] = useState(initalData);\n  // ================= 6.for Attribute tab END =================\n\n  // ================= 8.for Discount tab START =================\n  const disInitialValue = [\n    {\n      id: new Date().getTime(),\n      customer_group_id: '',\n      discount_quantity: '',\n      discount_priority: '',\n      discount_price: '',\n      discount_startdate: '',\n      discount_enddate: '',\n    },\n  ];\n  const [discount, setDiscount] = useState(disInitialValue);\n  // ================= 8.for Discount tab END =================\n\n  // ================= 9.for Parts Of Product tab START =================\n  const [products, setProducts] = useState({ data: [], isLoading: true });\n  const [selectedPartsOfProducts, setSelectedPartsOfProducts] = useState([]);\n  const [partOfProductQuantities, setPartOfProductQuantities] = useState({});\n  // load ATTRIBUTE GROUPS\n  useEffect(() => {\n    // return\n    apolloClient\n      .query({\n        query: productQuery.GET_PRODUCT_LIST_FOR_ADD_MINIMAL,\n        context: {\n          headers: {\n            TENANTID: process.env.REACT_APP_TENANTID,\n            Authorization: Cookies.get('psp_t'),\n          },\n        },\n      })\n      .then(res => {\n        const data = res?.data?.getProductList;\n        if (!data?.status) return;\n        setProducts(s => ({ ...s, data: data?.data, error: '' }));\n      })\n      .catch(err => {\n        setProducts(s => ({ ...s, error: 'Something went Wrong.!! ' }));\n      })\n      .finally(() => {\n        setProducts(s => ({ ...s, isLoading: false }));\n      });\n  }, []);\n  // ================= 9.for Parts Of Product tab END =================\n\n  // ================= 10.for Image tab START =================\n  const [featuresImage, setFeaturesImage] = useState({});\n  const [gallaryImages, setGallaryImages] = useState([]);\n  // ================= 10.for Image tab END =================\n\n  const handleSubmit = () => {\n    const values = form.getFieldsValue(true);\n\n    const {\n      prod_regular_price,\n      extended_warranty_value,\n      prod_sale_price,\n      cost,\n      ...rest } = values;\n    let isAttribute = true;\n    let isAttrCorrect = true;\n    const product_attributes = attributesTableData.map(item => {\n      // TODO: show warning for missing value\n      const { id, ...attributes } = item;\n      if (attributes.attribute_type === 'none') {\n        attributes.attribute_value = 'none';\n      }\n      // for empty attribute\n      if (!attributes.attr_group_id && !attributes.attribute_type && !attributes.attribute_value) {\n        isAttribute = false;\n      }\n      // for incorrect inputs\n      if (!attributes.attr_group_id || !attributes.attribute_type || !attributes.attribute_value) {\n        isAttrCorrect = false;\n      }\n      return { ...attributes };\n    });\n    if (!isAttrCorrect && isAttribute) return toast.warning('Please fill all Attribute field correctly');\n\n    let isDiscount = true;\n    let idDiscountCorrect = true;\n    const discount_type = discount.map(item => {\n      const {\n        id,\n        customer_group_id,\n        discount_quantity,\n        discount_priority,\n        discount_price,\n        discount_startdate,\n        discount_enddate,\n      } = item;\n      // for empty attribute\n      if (\n        !customer_group_id &&\n        !discount_quantity &&\n        !discount_priority &&\n        !discount_price &&\n        !discount_startdate &&\n        !discount_enddate\n      ) {\n        isDiscount = false;\n      }\n      // for incorrect inputs\n      if (\n        !customer_group_id ||\n        !discount_quantity ||\n        !discount_priority ||\n        !discount_price ||\n        !discount_startdate ||\n        !discount_enddate\n      ) {\n        idDiscountCorrect = false;\n      }\n      return {\n        customer_group_id,\n        discount_quantity,\n        discount_priority,\n        discount_price,\n        discount_startdate,\n        discount_enddate,\n      };\n    });\n    if (!idDiscountCorrect && isDiscount) return toast.warning('Please fill all Discount field correctly');\n\n    const related_product = relatedProducts.map(item => item.uid);\n    const partof_product = selectedPartsOfProducts.map(item => {\n      const data = {\n        prod_id: item.uid,\n        prod_quantity: partOfProductQuantities[item.uid] ? parseInt(partOfProductQuantities[item.uid]) : 1,\n      };\n      return data;\n    });\n\n    const data = {\n      ...rest,\n      prod_long_desc,\n      related_product,\n      prod_status,\n      partof_product,\n      taxable: isTaxable,\n      prod_condition: selectedConditionID,\n      product_rep: selectedProductRepID,\n      prod_outofstock_status: selectedavailabilitystatusID\n    };\n\n    if (prod_regular_price) {\n      data.prod_regular_price = parseFloat(prod_regular_price);\n    }\n    if (cost) {\n      data.cost = parseFloat(cost);\n    }\n    if (extended_warranty_value) {\n      data.extended_warranty_value = parseFloat(extended_warranty_value);\n    }\n    if (prod_sale_price) {\n      data.prod_sale_price = parseFloat(prod_sale_price);\n    }\n    if (isAttribute) {\n      data.product_attributes = product_attributes;\n    }\n    if (isDiscount) {\n      data.discount_type = discount_type;\n    }\n    if (weights) {\n      data.weight = weights\n    }\n\n    if (dimensions) {\n      data.dimensions = dimensions;\n    }\n\n    // All Validation Start\n    if (!data.prod_long_desc) return toast.warning('Please enter a long description');\n    if (!data.prod_short_desc) return toast.warning('Please enter a long description');\n    if (!data.prod_sku) return toast.warning('Please enter Product SKU');\n    if (!data.prod_partnum) return toast.warning('Please enter Part No');\n    if (!data.brand_id) return toast.warning('Please select a Manufacture');\n    if (!data.prod_category) return toast.warning('Please select a Category');\n    if (!data.prod_outofstock_status && !params.id) return toast.warning('Please select an Availability Status');\n    if (!data.prod_regular_price) return toast.warning('Please enter Regular Price');\n    // All Validation End\n\n    setIsLoading(true);\n    if (!params.id) {\n      data.prod_thumbnail = featuresImage.file;\n      data.prod_gallery = gallaryImages.map(item => item.file);\n      // Validataion for add only\n      if (!prod_thumbnail) {\n        return toast.warning('Please select a Feature image');\n      }\n\n      apolloUploadClient\n        .mutate({\n          mutation: productMutation.ADD_PRODUCT,\n          variables: { data },\n          context: {\n            headers: {\n              TENANTID: process.env.REACT_APP_TENANTID,\n              Authorization: Cookies.get('psp_t'),\n            },\n          },\n          refetchQueries: [\n            {\n              query: productQuery.GET_PRODUCT_LIST,\n              context: {\n                headers: {\n                  TENANTID: process.env.REACT_APP_TENANTID,\n                  Authorization: Cookies.get('psp_t'),\n                },\n              },\n              fetchPolicy: 'network-only'\n            },\n            ['getProductList'],\n          ],\n        })\n        .then(res => {\n          const data = res?.data?.addProduct;\n          if (!data.status) return toast.error(data.message);\n          setTimeout(() => {\n            history.push('/admin/products/list');\n          }, 1000);\n          toast.success(data.message);\n        })\n        .catch(err => {\n          console.log('add Prod err:\\n', err);\n          return toast.error('Something Went wrong !!');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n    // update prod\n    else {\n      data.prod_id = parseInt(params.id);\n\n      apolloUploadClient\n        .mutate({\n          mutation: productMutation.UPDATE_PRODUCT,\n          variables: { data },\n          context: {\n            headers: {\n              TENANTID: process.env.REACT_APP_TENANTID,\n              Authorization: Cookies.get('psp_t'),\n            },\n          },\n          refetchQueries: [\n            {\n              query: productQuery.GET_PRODUCT_LIST,\n              context: {\n                headers: {\n                  TENANTID: process.env.REACT_APP_TENANTID,\n                  Authorization: Cookies.get('psp_t'),\n                },\n              },\n              fetchPolicy: 'network-only'\n            },\n            ['getProductList'],\n          ],\n        })\n        .then(res => {\n          const data = res?.data?.updateProduct;\n          if (!data.status) return toast.error(data.message);\n          setTimeout(() => {\n            history.push('/admin/products/list');\n          }, 1000);\n          toast.success(data.message);\n        })\n        .catch(err => {\n          console.log('add Prod err:\\n', err);\n          return toast.error('Something Went wrong !!');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={\n          params.id\n            ? `Manage Product | Edit Product ${singleProduct.isLoading ? '' : `(${singleProduct.data.prod_name})`}`\n            : 'Add Product'\n        }\n      />\n      <Main>\n        <Row gutter={25}>\n          <Col sm={24} xs={24}>\n            <Cards headless={true}>\n              {params.id && singleProduct.isLoading ? (\n                <div div=\"true\" className=\"spin\">\n                  <Spin />\n                </div>\n              ) : (\n                <Form\n                  style={{ width: '100%' }}\n                  form={form}\n                  name=\"addRole\"\n                  onFinish={handleSubmit}\n                  onFinishFailed={errorInfo => {\n                    console.log('form error info:\\n', errorInfo);\n                    toast.warning('Please fill all required data in all tab');\n                  }}\n                  labelCol={{ span: 4 }}\n                  initialValues={\n                    params.id && {\n                      prod_name: singleProduct.data.prod_name,\n                      prod_short_desc: singleProduct.data.prod_short_desc,\n                      prod_meta_title: singleProduct.data.prod_meta_title,\n                      prod_meta_desc: singleProduct.data.prod_meta_desc,\n                      prod_meta_keywords: singleProduct.data.prod_meta_keywords,\n                      prod_tags: singleProduct.data.prod_tags,\n                      prod_partnum: singleProduct.data.prod_partnum,\n                      prod_sku: singleProduct.data.prod_sku,\n                      is_sale: singleProduct.data.is_sale,\n                      brand_id: singleProduct.data?.brand?.id,\n                      prod_condition: singleProduct.data?.productCondition?.id || '',\n                      product_rep: singleProduct.data?.representative?.id || '',\n                      prod_outofstock_status: singleProduct?.data?.productavailablitystatus?.id,\n                      prod_category: singleProduct.data?.category?.id,\n                      prod_regular_price: singleProduct.data?.prod_regular_price || 0,\n                      prod_sale_price: singleProduct.data?.prod_sale_price || 0,\n                      cost: singleProduct.data?.cost || 0,\n                      extended_warranty: singleProduct.data?.extended_warranty || false,\n                      extended_warranty_value: singleProduct.data?.extended_warranty_value || 0,\n                      location: singleProduct.data?.location || '',\n                      hs_code: singleProduct.data?.hs_code || '',\n                      product_rank: singleProduct.data?.product_rank || '',\n                      mfg_build_part_number: singleProduct.data?.mfg_build_part_number || '',\n                    }\n                  }\n                >\n                  <Tabs>\n                    <Tabs.TabPane tab=\"General\" key=\"general\">\n\n                      <Row gutter={25}>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"prod_partnum\"\n                            rules={[{ required: true, message: 'Part NO' }]}\n                            label=\"Part Number\"\n                          >\n                            <Row>\n                              <Col span={6}>\n                                <Input defaultValue={singleProduct?.data?.prod_partnum} placeholder=\"Part No\" />\n                              </Col>\n                            </Row>\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"mfg_build_part_number\"\n                            label=\"MFG Build Part Number\"\n                          >\n                            <Row>\n                              <Col span={6}>\n                                <Input defaultValue={singleProduct?.data?.mfg_build_part_number} placeholder=\"MFG Build Part Number\" />\n                              </Col>\n                            </Row>\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item name=\"prod_sku\" label=\"SKU\">\n                            <Row>\n                              <Col span={6}>\n                                <Input defaultValue={singleProduct?.data?.prod_sku} placeholder=\" Product SKU\" />\n                              </Col>\n                            </Row>\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"prod_name\"\n                            rules={[{ required: true, message: 'Please enter Product Name' }]}\n                            label=\"Title\"\n                          >\n                            <Input placeholder=\"Product Name\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"prod_short_desc\"\n                            rules={[{ required: true, message: 'Please enter n' }]}\n                            label=\"Short Description\"\n                          >\n                            <TextArea rows={3} placeholder=\" Short Description\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item label=\"Long Description\">\n                            <RichTextEditor\n                              value={longDescription}\n                              onChange={onChangeRte}\n                              placeholder=\"Long Description\"\n                              className={style.rte}\n                              editorClassName={style.rteEditor}\n                              toolbarClassName={style.rteToolbar}\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"prod_meta_title\"\n                            rules={[{ required: true, message: 'Please enter Meta Title' }]}\n                            label=\"Meta Title\"\n                          >\n                            <Input placeholder=\" Meta Title\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"prod_meta_desc\"\n                            rules={[{ required: true, message: 'Please enter Meta Description' }]}\n                            label=\"Meta Description\"\n                          >\n                            <Input placeholder=\" Meta Description\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"prod_meta_keywords\"\n                            rules={[{ required: true, message: 'Please enter Meta Keywords' }]}\n                            label=\"Meta Keywords\"\n                          >\n                            <Input placeholder=\"Comma separated Meta Keywords\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"prod_tags\"\n                            rules={[{ required: true, message: 'Please enter Tags' }]}\n                            label=\"Tags\"\n                          >\n                            <Input placeholder=\"Comma separated Tags\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item name=\"prod_status\" label=\"Status\">\n                            <Switch\n                              defaultChecked={singleProduct.data.prod_status}\n                              defaultValue={singleProduct.data.prod_status}\n                            />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Data\" key=\"Data\">\n                      <Row gutter={25}>\n                        <Col span={12}>\n                          <Row gutter={25}>\n                            <Col span={24}>\n                              <Form.Item\n                                labelCol={{ style: { width: \"40%\" } }}\n                                name=\"prod_condition\"\n                                rules={[{ required: true, message: 'Product Condition Is Required' }]}\n                                label=\"Product Condition\"\n                              >\n                                <Row>\n                                  <Col span={12}>\n                                    <Select\n                                      defaultValue={singleProduct?.data?.productCondition?.name}\n                                      placeholder={productcondition.loading ? 'Loading...' : 'Select Condition'}\n                                      options={productcondition?.data?.map(item => ({\n                                        label: item.name,\n                                        value: item.id,\n                                      }))}\n                                      onSelect={(val) => setSelectedConditionID(val)}\n                                    />\n                                  </Col>\n                                </Row>\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                          <Row gutter={25}>\n                            <Col span={24}>\n                              <Form.Item\n                                labelCol={{ style: { width: \"40%\" } }}\n                                name=\"location\"\n                                label=\"Location\"\n                              >\n                                <Row>\n                                  <Col span={16}>\n                                    <Input defaultValue={singleProduct?.data?.location} placeholder=\" Product Location\" />\n                                  </Col>\n                                </Row>\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                          <Row gutter={25}>\n                            <Col span={24}>\n                              <Form.Item\n                                labelCol={{ style: { width: \"40%\" } }}\n                                name=\"hs_code\"\n                                label=\"HS Code\"\n                              >\n                                <Row>\n                                  <Col span={12}>\n                                    <Input defaultValue={singleProduct?.data?.hs_code} placeholder=\" HS Code\" />\n                                  </Col>\n                                </Row>\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                          <Row gutter={25}>\n                            <Col span={24}>\n                              <Form.Item\n                                labelCol={{ style: { width: \"40%\" } }}\n                                name=\"product_rank\"\n                                label=\"Product Rank\"\n                              >\n                                <Row>\n                                  <Col span={12}>\n                                    <Input defaultValue={singleProduct?.data?.product_rank} placeholder=\" Product Rank\" />\n                                  </Col>\n                                </Row>\n                              </Form.Item>\n                            </Col>\n                          </Row>\n\n                          <Row gutter={25}>\n                            <Col span={24}>\n                              <Form.Item\n                                labelCol={{ style: { width: \"40%\" } }}\n                                name=\"product_rep\"\n                                label=\"Product Representative\"\n                              >\n                                <Row>\n                                  <Col span={20}>\n                                    <Select\n                                      defaultValue={singleProduct.data.representative ? `${singleProduct?.data?.representative?.first_name} ${singleProduct?.data?.representative?.last_name} - ${singleProduct?.data?.representative?.roles[0].role}` : null}\n                                      placeholder={representative.loading ? 'Loading...' : 'Select a Product Representative'}\n                                      options={representative?.data?.map(item => ({\n                                        label: item.first_name + ' ' + item.last_name,\n                                        value: item.id,\n                                      }))}\n                                      onSelect={(val) => setSelectedProductRepID(val)}\n                                    />\n\n                                  </Col>\n                                </Row>\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                        </Col>\n\n                        <Col span={12}>\n                          <Form.Item labelCol={{ style: { width: \"40%\" } }} name=\"extended_warranty\" label=\"Extended Warranty\">\n                            <Switch defaultChecked={singleProduct.data.extended_warranty} onChange={(val) => setExtendedWarrantyEnable(val)} defaultValue={singleProduct.data.extended_warranty} />\n                          </Form.Item>\n                          {extendedWarrantyEnable && (\n                            <Row gutter={25}>\n                              <Col span={24}>\n                                <Form.Item labelCol={{ style: { width: \"40%\" } }} rules={[{ required: true, message: 'Extended Warranty Value' }]} name=\"extended_warranty_value\" label=\"Extended Warranty Value\">\n                                  <Row>\n                                    <Col span={8}>\n                                      <Input placeholder=\"Extended Warranty Value\" defaultValue={singleProduct?.data?.extended_warranty_value} type=\"number\" />\n                                    </Col>\n                                  </Row>\n\n                                </Form.Item>\n                              </Col>\n                            </Row>\n                          )}\n                          <Form.Item labelCol={{ style: { width: \"40%\" } }} name=\"is_sale\" label=\"On Sale\">\n                            <Switch defaultChecked={singleProduct.data.is_sale} defaultValue={singleProduct.data.is_sale} />\n                          </Form.Item>\n                          <Form.Item labelCol={{ style: { width: \"40%\" } }} name=\"is_featured\" label=\"Featured\">\n                            <Switch defaultChecked={singleProduct.data.is_featured} defaultValue={singleProduct.data.is_featured} />\n                          </Form.Item>\n                          <Form.Item labelCol={{ style: { width: \"40%\" } }} name=\"is_serial\" label=\"Has Serial\">\n                            <Switch defaultChecked={singleProduct.data.is_serial} defaultValue={singleProduct.data.is_serial} />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Tabs.TabPane>\n\n                    <Tabs.TabPane tab=\"Links\" key=\"Links\">\n\n                      <Row gutter={25}>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"brand_id\"\n                            rules={[{ required: true, message: 'Please Select a Manufacture' }]}\n                            label=\"Manufacturer\"\n                          >\n                            <Row >\n                              <Col span={7}>\n                                <Select\n                                  defaultValue={singleProduct?.data?.brand?.brand_name}\n                                  placeholder={brand.loading ? 'Loading...' : 'Select Manufacture'}\n                                  options={brand?.data?.map(item => ({\n                                    label: item.brand_name,\n                                    value: item.id,\n                                    categories: item.categories,\n                                  }))}\n                                  onSelect={onManufactureSelect}\n                                />\n                              </Col>\n                            </Row>\n\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                      <Row gutter={25}>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"prod_category\"\n                            // defaultValue={selectedProdCategory}\n                            rules={[{ required: true, message: 'Please Select a Category' }]}\n                            label=\"Categories\"\n                          >\n                            <Row>\n                              <Col span={7}>\n                                <Select\n                                  defaultValue={singleProduct?.data?.category?.cat_name}\n                                  placeholder={\n                                    brand.loading\n                                      ? 'Loading...'\n                                      : categories.length\n                                        ? 'Select Category'\n                                        : 'Select manifacture first'\n                                  }\n                                  options={categories.map(item => ({\n                                    label: item.cat_name,\n                                    value: item.id,\n                                    key: item.id,\n                                  }))}\n                                // mode=\"multiple\"\n                                />\n                              </Col>\n                            </Row>\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                      <Row gutter={25}>\n                        <Col span={24}>\n                          <Form.Item\n                            label=\"Related Product\"\n                            rules={[{ required: true, message: 'Please enter Product Name' }]}\n                          >\n                            <Row>\n                              <Col span={7}>\n                                <Select\n                                  placeholder={products.isLoading ? 'Loading...' : 'select Related Products'}\n                                  mode=\"multiple\"\n                                  optionFilterProp=\"label\"\n                                  defaultValue={\n                                    params.id ? singleProduct?.data?.related_products?.map(item => item?.related_prod?.id) : []\n                                  }\n                                  options={products?.data?.map(item => ({\n                                    label: item.prod_name,\n                                    value: item.id,\n                                    uid: item.id,\n                                  }))}\n                                  onChange={(newVal, items) => {\n                                    setRelatedProducts(items);\n                                  }}\n                                ></Select>\n                              </Col>\n                            </Row>\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Specifications\" key=\"Specifications\">\n                      <Row gutter={25}>\n                        <Col span={24}>\n                          <Form.Item\n                            rules={dimensions ? [{ required: true, message: 'Please Fill All Dimensions Correcty' }] : []}\n                            label={\n                              <p>\n                                Dimensions <br /> (L x W x H)\n                              </p>\n                            }\n                          >\n                            <Input.Group compact>\n                              <Input\n                                name='length'\n                                style={{ width: '10%' }}\n                                placeholder=\"Length\"\n                                onBlur={e => setDimensions(state => ({ ...state, length: e.target.value }))}\n                                defaultValue={\n                                  !params.id\n                                    ? ''\n                                    : singleProduct?.data?.dimensions?.length\n                                      ? singleProduct?.data?.dimensions?.length\n                                      : ''\n                                }\n                              />\n                              <Input\n                                name='width'\n                                style={{ width: '10%' }}\n                                placeholder=\"Width\"\n                                onBlur={e => setDimensions(state => ({ ...state, width: e.target.value }))}\n                                defaultValue={\n                                  !params.id\n                                    ? ''\n                                    : singleProduct?.data?.dimensions?.length\n                                      ? singleProduct?.data?.dimensions?.width\n                                      : ''\n                                }\n                              />\n                              <Input\n                                name='height'\n                                style={{ width: '10%' }}\n                                placeholder=\"Height\"\n                                onBlur={e => setDimensions(state => ({ ...state, height: e.target.value }))}\n                                defaultValue={\n                                  !params.id\n                                    ? ''\n                                    : singleProduct?.data?.dimensions?.length\n                                      ? singleProduct?.data?.dimensions?.height\n                                      : ''\n                                }\n                              />\n                            </Input.Group>\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                      <Row gutter={25}>\n                        <Col span={24}>\n                          <Form.Item\n                            rules={dimensions ? [{ required: true, message: 'Please Fill All Dimensions Correcty' }] : []}\n                            label={\n                              <p>\n                                Dimensions <br />\n                                Class{' '}\n                              </p>\n                            }\n                          >\n                            <Row>\n                              <Col span={5}>\n                                <Select style={{ height: '3.5em' }} placeholder=\"Dimension Class\"\n                                  defaultValue={singleProduct?.data?.dimensions?.dimensionClass?.name}\n                                  options={dimensionClassList?.data?.map(item => ({\n                                    label: item.name,\n                                    value: item.id\n                                  }))}\n                                  onSelect={(val) => setDimensions(state => ({ ...state, dimension_class_id: val }))}\n                                >\n\n                                </Select>\n                              </Col>\n                            </Row>\n\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                      <Form.Item\n                        rules={weights ? [{ required: true, message: 'Please Fill All Weight Field Correcty' }] : []}\n                        name=\"weight\"\n                        label=\"Weight\">\n                        <Row>\n                          <Col span={5}>\n                            <Input\n                              style={{ width: '50%' }}\n                              defaultValue={\n                                !params.id\n                                  ? ''\n                                  : singleProduct?.data?.weight?.weight\n                                    ? singleProduct?.data?.weight?.weight\n                                    : ''\n                              }\n                              onBlur={e => setWeights(state => ({ ...state, weight: parseFloat(e.target.value) }))}\n                              type=\"number\"\n                              placeholder=\"Weight\" />\n                          </Col>\n                        </Row>\n                      </Form.Item>\n                      <Row gutter={25}>\n                        <Col span={24}>\n                          <Form.Item\n                            rules={weights ? [{ required: true, message: 'Please Fill All Weight Field Correcty' }] : []}\n                            label=\"Weight Class\">\n                            <Row>\n                              <Col span={5}>\n                                <Select\n                                  placeholder=\"Weight Class\"\n                                  defaultValue={singleProduct?.data?.weight?.weightClass?.name}\n                                  options={weightClassList?.data?.map(item => ({\n                                    label: item.name,\n                                    value: item.id\n                                  }))}\n                                  onSelect={(val) => setWeights(state => ({ ...state, weight_class_id: val }))}>\n                                </Select>\n                              </Col>\n                            </Row>\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Stock\" key=\"Stock\">\n                      <Row gutter={25}>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"prod_outofstock_status\"\n                            rules={[{ required: true, message: 'Please Select Availability Status' }]}\n                            label=\"Availability\"\n                          >\n                            <Row>\n                              <Col span={6}>\n                                <Select\n                                  defaultValue={singleProduct?.data?.productavailablitystatus?.name}\n                                  placeholder={availabilitystatus.loading ? 'Loading...' : 'Select a Status'}\n                                  options={availabilitystatus?.data?.map(item => ({\n                                    label: item.name,\n                                    value: item.id\n                                  }))}\n                                  onSelect={(val) => setSelectedAvailabilityStatusID(val)}\n                                />\n                              </Col>\n                            </Row>\n\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Attribute\" key=\"Attribute\">\n                      <AttributeTab {...{ attributesTableData, setAttributesTableData }} />\n                    </Tabs.TabPane>\n\n                    <Tabs.TabPane tab=\"Price\" key=\"Price\">\n                      <Row gutter={25}>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"prod_regular_price\"\n                            rules={[{ required: true, message: 'MSRP' }]}\n                            label=\"MSRP\"\n                          >\n                            <Row>\n                              <Col span={6}>\n                                <Input placeholder=\"MSRP\" defaultValue={singleProduct.data.prod_regular_price} prefix=\"US$  \" type=\"number\" />\n                              </Col>\n                            </Row>\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item name=\"prod_sale_price\" label=\"Sales Price\">\n                            <Row>\n                              <Col span={6}>\n                                <Input prefix=\"US$  \" type=\"number\" defaultValue={singleProduct.data.prod_sale_price} placeholder=\"Sales Price\" />\n                              </Col>\n                            </Row>\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item name=\"cost\" label=\"Cost\">\n                            <Row>\n                              <Col span={6}>\n                                <Input prefix=\"US$  \" type=\"number\" defaultValue={singleProduct.data.cost} placeholder=\"Product Cost\" />\n                              </Col>\n                            </Row>\n                          </Form.Item>\n                        </Col>\n                      </Row>\n\n                      <Form.Item label=\"Taxable\">\n                        <Switch checked={isTaxable} onChange={checked => setIsTaxable(checked)} />\n                      </Form.Item>\n                    </Tabs.TabPane>\n\n                    <Tabs.TabPane tab=\"Discount\" key=\"Discount\">\n                      <DiscountTab {...{ discount, setDiscount }} />\n                    </Tabs.TabPane>\n\n                    <Tabs.TabPane tab=\"Build Of Product\" key=\"PartsOf\">\n                      <PartsOfProductTab\n                        {...{\n                          products,\n                          setProducts,\n                          selectedPartsOfProducts,\n                          setSelectedPartsOfProducts,\n                          partOfProductQuantities,\n                          setPartOfProductQuantities,\n                        }}\n                      />\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Images\" key=\"Images\">\n                      <ImageTab\n                        {...{\n                          featuresImage,\n                          setFeaturesImage,\n                          gallaryImages,\n                          setGallaryImages,\n                          singleProdUid: singleProduct?.data?.id,\n                          setIsLoading,\n                        }}\n                      />\n                    </Tabs.TabPane>\n                  </Tabs>\n\n                  <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'flex-end',\n                      marginTop: '3em',\n                    }}\n                  >\n                    <Form.Item>\n                      <Button loading={isLoading} size=\"default\" htmlType=\"submit\" type=\"primary\" raised>\n                        {isLoading ? 'Processing' : 'Save'}\n                      </Button>\n                      <Link to=\"/admin/products/list\">\n                        <Button\n                          type=\"white\"\n                          size=\"large\"\n                        >\n                          Cancel\n                        </Button>\n                      </Link>\n                    </Form.Item>\n                  </div>\n                </Form>\n              )}\n            </Cards>\n          </Col>\n        </Row>\n      </Main>\n    </>\n  );\n};\n\nexport default AddProduct;\n","import { gql } from \"@apollo/client\";\n\nexport const brandQuery = {\n  GET_ALL_BRAND: gql`\n  query getAllBrands {\n  getAllBrands {\n    message\n    status\n    data {\n      id\n      brand_name\n      brand_slug\n      brand_description\n      brand_status\n      image\n      brand_sort_order\n      createdAt\n    }\n  }\n}`,\n  GET_ALL_BRAND_WITH_CATEGORY: gql`\nquery getAllBrands {\n  getAllBrands {\n    message\n    status\n    data {\n      id\n      brand_name\n      brand_slug\n      brand_status\n      brand_description\n      image\n      createdAt\n      updatedAt\n      categories {\n        id\n        cat_name\n        cat_slug\n        cat_status\n        subcategories {\n          id\n          cat_name\n          cat_slug\n          cat_status\n          subsubcategories {\n            id\n            cat_name\n            cat_slug\n            cat_status\n          }\n        }\n      }\n    }\n  }\n}\n\n`,\n  GET_CATEGORIES: gql`\n  query getParentCategories {\n    getParentCategories {\n      message\n      status\n      categories {\n        id\n        cat_name\n      }\n    }\n  }\n`,\n  GET_SINGLE_BRAND: gql`\n  query getSingleBrand($query: GetSingleBrandInput){\n    getSingleBrand(query: $query) {\n      message\n      status\n      data {\n        brand_name\n        brand_description\n        brand_status\n        brand_sort_order\n        image\n        categories {\n          id\n          cat_name\n        }\n      }\n    }\n  }\n`,\n  BRAND_UPDATE: gql`\n  mutation updateBrand($data: UpdateBrandInput, $file:Upload){\n    updateBrand(data:$data, file: $file){\n      message\n      status\n    }\n  }`,\n  BRAND_UPDATE_WI: gql`\n  mutation updateBrand($data: UpdateBrandInput){\n    updateBrand(data:$data){\n      message\n      status\n    }\n  }`,\n  BRAND_ADD: gql`\n    mutation createBrand($data: BrandCreateInput, $file:Upload) {\n      createBrand(data: $data, file:$file) {\n        message\n        status\n      }\n    }`,\n  BRAND_ADD_WI: gql`\n      mutation createBrand($data: BrandCreateInput) {\n        createBrand(data: $data) {\n          message\n          status\n        }\n     }`\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rte\":\"products_rte__Maawa\",\"rteEditor\":\"products_rteEditor__jpT40\",\"rteToolbar\":\"products_rteToolbar__3EdKC\"};"],"sourceRoot":""}