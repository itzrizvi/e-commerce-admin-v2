{"version":3,"sources":["container/profile/authentication/overview/SignIn.js"],"names":["SignIn","useState","email","setEmail","password","setPassword","history","useHistory","dispatch","useDispatch","isLoading","useSelector","state","auth","loading","authError","error","useForm","form","checked","className","name","onSubmitCapture","e","preventDefault","login","layout","as","Item","rules","message","required","initialValue","label","placeholder","onChange","target","value","Password","htmlType","type","size","style","color"],"mappings":"4PA4GeA,UApGA,WACb,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAAgCF,mBAAS,IAAG,mBAArCG,EAAQ,KAAEC,EAAW,KAEtBC,EAAUC,uBACVC,EAAWC,cACXC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,WAC5CC,EAAYJ,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKG,SAClD,EAAe,IAAKC,UAAbC,EAAsB,iBAAlB,GACX,EAA0BjB,mBAAS,CACjCkB,QAAS,OACT,mBAFU,KAAU,KAatB,OACE,kBAAC,IAAW,KAIV,yBAAKC,UAAU,iBACb,uBACEC,KAAK,QACLH,KAAMA,EAENI,gBAnBa,SAAAC,GACnBA,EAAEC,iBACFhB,EAASiB,YAAMvB,EAAOE,EAAUE,KAkB1BoB,OAAO,YAEP,kBAAC,IAAO,CAACC,GAAG,MAAI,cACH,0BAAMP,UAAU,mBAAiB,UAE9C,sBAAMQ,KAAI,CACRP,KAAK,WACLQ,MAAO,CAAC,CAAEC,QAAS,uCAAwCC,UAAU,IACrEC,aAAc9B,EACd+B,MAAM,6BAEN,uBACEC,YAAY,4BACZC,SAAU,SAAAZ,GACRpB,EAASoB,EAAEa,OAAOC,WAIxB,sBAAMT,KAAI,CACRP,KAAK,WACLQ,MAAO,CAAC,CAAEC,QAAS,8BAA+BC,UAAU,IAC5DC,aAAc5B,EACd6B,MAAM,YAEN,sBAAOK,SAAQ,CAACJ,YAAY,WAAWC,SAAU,SAAAZ,GAAC,OAAIlB,EAAYkB,EAAEa,OAAOC,WAQ7E,sBAAMT,KAAI,KACR,uBAAQR,UAAU,aAAamB,SAAS,SAASC,KAAK,UAAUC,KAAK,SAClE/B,EAAY,aAAe,YAI/BK,GAAa,uBAAG2B,MAAO,CAAEC,MAAO,YAAc5B","file":"static/js/68.c12e0f6b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AuthWrapper } from './style';\nimport { login } from '../../../../redux/authentication/actionCreator';\nimport Heading from '../../../../components/heading/heading';\n\nconst SignIn = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.auth.loading);\n  const authError = useSelector(state => state.auth.error);\n  const [form] = Form.useForm();\n  const [state, setState] = useState({\n    checked: null,\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(login(email, password, history));\n  };\n\n  const onChange = checked => {\n    setState({ ...state, checked });\n  };\n\n  return (\n    <AuthWrapper>\n      {/* <p className=\"auth-notice\">\n        Don&rsquo;t have an account? <NavLink to=\"#\">Sign up now</NavLink>\n      </p> */}\n      <div className=\"auth-contents\">\n        <Form\n          name=\"login\"\n          form={form}\n          // onFinish={handleSubmit}\n          onSubmitCapture={handleSubmit}\n          layout=\"vertical\"\n        >\n          <Heading as=\"h3\">\n            Sign in to <span className=\"color-secondary\">Admin</span>\n          </Heading>\n          <Form.Item\n            name=\"username\"\n            rules={[{ message: 'Please input your username or email!', required: true }]}\n            initialValue={email}\n            label=\"Username or Email Address\"\n          >\n            <Input\n              placeholder=\"Username or Email Address\"\n              onChange={e => {\n                setEmail(e.target.value);\n              }}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{ message: 'Please input your password!', required: true }]}\n            initialValue={password}\n            label=\"Password\"\n          >\n            <Input.Password placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\n          </Form.Item>\n          {/* <div className=\"auth-form-action\">\n            <Checkbox onChange={onChange}>Keep me logged in</Checkbox>\n            <NavLink className=\"forgot-pass-link\" to=\"#\">\n              Forgot password?\n            </NavLink>\n          </div> */}\n          <Form.Item>\n            <Button className=\"btn-signin\" htmlType=\"submit\" type=\"primary\" size=\"large\">\n              {isLoading ? 'Loading...' : 'Sign In'}\n            </Button>\n          </Form.Item>\n\n          {authError && <p style={{ color: '#ff4d4f' }}>{authError}</p>}\n\n          {/* <p className=\"form-divider\">\n            <span>Or</span>\n          </p>\n          <ul className=\"social-login\">\n            <li>\n              <Link className=\"google-signup\" to=\"#\">\n                <img src={require('../../../../static/img/google.png')} alt=\"\" />\n                <span>Sign in with Google</span>\n              </Link>\n            </li>\n            <li>\n              <Link className=\"facebook-sign\" to=\"#\">\n                <FacebookOutlined />\n              </Link>\n            </li>\n            <li>\n              <Link className=\"twitter-sign\" to=\"#\">\n                <TwitterOutlined />\n              </Link>\n            </li>\n          </ul> */}\n        </Form>\n      </div>\n    </AuthWrapper>\n  );\n};\n\nexport default SignIn;\n"],"sourceRoot":""}